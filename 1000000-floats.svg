<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1318" onload="init(evt)" viewBox="0 0 1200 1318" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1318.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1301" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="1301" > </text>
<g id="frames">
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="569.0" y="293" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="571.98" y="303.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (51 samples, 1.21%)</title><rect x="545.5" y="277" width="14.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="548.50" y="287.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="617.3" y="245" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="620.33" y="255.5" ></text>
</g>
<g >
<title>`__gmp_default_reallocate (3 samples, 0.07%)</title><rect x="858.5" y="245" width="0.9" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="861.53" y="255.5" ></text>
</g>
<g >
<title>`core::cl__fdefinition(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.05%)</title><rect x="612.3" y="245" width="0.6" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="615.30" y="255.5" ></text>
</g>
<g >
<title>`wrapped_cl__expt_Number_spNumber_sp (5 samples, 0.12%)</title><rect x="773.6" y="293" width="1.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="776.56" y="303.5" ></text>
</g>
<g >
<title>`PROGV-LAMBDA^CORE^FN^^ (4,188 samples, 99.19%)</title><rect x="19.2" y="885" width="1170.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="22.22" y="895.5" >`PROGV-LAMBDA^CORE^FN^^</text>
</g>
<g >
<title>`core::cl__list(gctools::smart_ptr&lt;core::T_O&gt;) (3 samples, 0.07%)</title><rect x="1137.7" y="405" width="0.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1140.74" y="415.5" ></text>
</g>
<g >
<title>`MAKE-INTEGER-ACCUMULATOR^ECLECTOR.READER^FN^^ (100 samples, 2.37%)</title><rect x="541.9" y="309" width="27.9" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="544.87" y="319.5" >`..</text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="559.8" y="277" width="0.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="562.75" y="287.5" ></text>
</g>
<g >
<title>`STRINGP^COMMON-LISP^FN^^ (5 samples, 0.12%)</title><rect x="523.1" y="293" width="1.4" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="526.14" y="303.5" ></text>
</g>
<g >
<title>`tlv_get_addr (3 samples, 0.07%)</title><rect x="544.7" y="261" width="0.8" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="547.66" y="271.5" ></text>
</g>
<g >
<title>`GC_malloc_atomic (1 samples, 0.02%)</title><rect x="617.0" y="245" width="0.3" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="620.05" y="255.5" ></text>
</g>
<g >
<title>`SIMPLE-TYPE-PREDICATE^CORE^FN^^ (3 samples, 0.07%)</title><rect x="602.8" y="277" width="0.8" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="605.79" y="287.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (7 samples, 0.17%)</title><rect x="350.1" y="277" width="2.0" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="353.14" y="287.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (2 samples, 0.05%)</title><rect x="996.0" y="229" width="0.6" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="999.04" y="239.5" ></text>
</g>
<g >
<title>`wrapped_cl__force_output_T_sp (19 samples, 0.45%)</title><rect x="13.4" y="965" width="5.3" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="16.35" y="975.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="692.8" y="181" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="695.79" y="191.5" ></text>
</g>
<g >
<title>`__gmpz_clear (5 samples, 0.12%)</title><rect x="811.3" y="261" width="1.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="814.29" y="271.5" ></text>
</g>
<g >
<title>`__gmpz_cdiv_qr (1 samples, 0.02%)</title><rect x="856.0" y="261" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="859.01" y="271.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (3 samples, 0.07%)</title><rect x="1164.0" y="421" width="0.8" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1167.01" y="431.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$_platform_memmove (5 samples, 0.12%)</title><rect x="722.7" y="261" width="1.4" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="725.70" y="271.5" ></text>
</g>
<g >
<title>`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc (2 samples, 0.05%)</title><rect x="10.3" y="789" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="13.28" y="799.5" ></text>
</g>
<g >
<title>`core::General_O::initialize() (1 samples, 0.02%)</title><rect x="928.1" y="309" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="931.12" y="319.5" ></text>
</g>
<g >
<title>`cc_landingpadUnwindMatchFrameElseRethrow (6 samples, 0.14%)</title><rect x="1090.8" y="341" width="1.7" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1093.78" y="351.5" ></text>
</g>
<g >
<title>`ValuesFromCons(gctools::smart_ptr&lt;core::List_V&gt;) (4 samples, 0.09%)</title><rect x="1162.6" y="421" width="1.1" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="1165.61" y="431.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (27 samples, 0.64%)</title><rect x="1147.0" y="277" width="7.5" height="15.0" fill="rgb(202,54,54)" rx="2" ry="2" />
<text  x="1149.96" y="287.5" ></text>
</g>
<g >
<title>`wrapped_cl__zerop_Number_sp (3 samples, 0.07%)</title><rect x="1174.1" y="421" width="0.8" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1177.07" y="431.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="584.1" y="293" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="587.07" y="303.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (5 samples, 0.12%)</title><rect x="566.2" y="261" width="1.4" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="569.18" y="271.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (10 samples, 0.24%)</title><rect x="1018.1" y="213" width="2.8" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="1021.11" y="223.5" ></text>
</g>
<g >
<title>`wrapped_core__logand_2op_Integer_spInteger_sp (6 samples, 0.14%)</title><rect x="364.4" y="293" width="1.7" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="367.39" y="303.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="567.3" y="197" width="0.3" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="570.30" y="207.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (3 samples, 0.07%)</title><rect x="1159.5" y="341" width="0.9" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="1162.54" y="351.5" ></text>
</g>
<g >
<title>`GC_is_black_listed (2 samples, 0.05%)</title><rect x="555.8" y="213" width="0.6" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="558.84" y="223.5" ></text>
</g>
<g >
<title>`__gmpz_realloc (1 samples, 0.02%)</title><rect x="857.7" y="261" width="0.3" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="860.69" y="271.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.02%)</title><rect x="105.0" y="181" width="0.3" height="15.0" fill="rgb(254,128,128)" rx="2" ry="2" />
<text  x="108.03" y="191.5" ></text>
</g>
<g >
<title>`fread (25 samples, 0.59%)</title><rect x="281.1" y="261" width="7.0" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="284.10" y="271.5" ></text>
</g>
<g >
<title>`cm_vref (1 samples, 0.02%)</title><rect x="119.3" y="309" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="122.28" y="319.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (3 samples, 0.07%)</title><rect x="483.7" y="197" width="0.9" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="486.73" y="207.5" ></text>
</g>
<g >
<title>`GET-LOCK^MP^FN^^ (1 samples, 0.02%)</title><rect x="15.3" y="885" width="0.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="18.31" y="895.5" ></text>
</g>
<g >
<title>`flockfile (1 samples, 0.02%)</title><rect x="250.4" y="245" width="0.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="253.36" y="255.5" ></text>
</g>
<g >
<title>`cc_restoreMultipleValue0 (1 samples, 0.02%)</title><rect x="959.7" y="325" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="962.70" y="335.5" ></text>
</g>
<g >
<title>`core::cl__gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (2 samples, 0.05%)</title><rect x="597.5" y="245" width="0.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="600.48" y="255.5" ></text>
</g>
<g >
<title>`dyld::findImageContainingAddress(void const*) (1 samples, 0.02%)</title><rect x="643.9" y="197" width="0.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="646.88" y="207.5" ></text>
</g>
<g >
<title>`fread (21 samples, 0.50%)</title><rect x="63.9" y="261" width="5.9" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="66.94" y="271.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (5 samples, 0.12%)</title><rect x="960.0" y="325" width="1.4" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="962.98" y="335.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_value(core::Symbol_O co (1 samples, 0.02%)</title><rect x="1107.0" y="341" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1109.99" y="351.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setup(unsigned int, gctools::smart_ptr&lt;core: (1 samples, 0.02%)</title><rect x="1162.1" y="373" width="0.2" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1165.05" y="383.5" ></text>
</g>
<g >
<title>`clock_gettime (1 samples, 0.02%)</title><rect x="903.0" y="293" width="0.2" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="905.97" y="303.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$mach_absolute_time (1 samples, 0.02%)</title><rect x="762.4" y="245" width="0.3" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="765.38" y="255.5" ></text>
</g>
<g >
<title>`core::Closure_O::describeFunction() const (8 samples, 0.19%)</title><rect x="489.3" y="245" width="2.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="492.32" y="255.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (48 samples, 1.14%)</title><rect x="1043.0" y="293" width="13.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="1045.99" y="303.5" ></text>
</g>
<g >
<title>`GC_build_fl (8 samples, 0.19%)</title><rect x="1083.2" y="277" width="2.3" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="1086.24" y="287.5" ></text>
</g>
<g >
<title>`core::cl__read_char(gctools::smart_ptr&lt;core::T_O&gt;, gctools::sma (1 samples, 0.02%)</title><rect x="60.0" y="341" width="0.3" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="63.03" y="351.5" ></text>
</g>
<g >
<title>`core::Ratio_O::setf_numerator_denominator(gctools::smart_ptr&lt;co (26 samples, 0.62%)</title><rect x="828.6" y="229" width="7.3" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="831.62" y="239.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="628.5" y="261" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="631.51" y="271.5" ></text>
</g>
<g >
<title>`core::Ratio_O::create(gctools::smart_ptr&lt;core::Integer_O&gt;, gcto (54 samples, 1.28%)</title><rect x="824.4" y="245" width="15.1" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="827.43" y="255.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (24 samples, 0.57%)</title><rect x="552.2" y="245" width="6.7" height="15.0" fill="rgb(252,127,127)" rx="2" ry="2" />
<text  x="555.21" y="255.5" ></text>
</g>
<g >
<title>`std::__1::chrono::steady_clock::now() (2 samples, 0.05%)</title><rect x="1061.2" y="325" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="1064.16" y="335.5" ></text>
</g>
<g >
<title>`GC_clear_stack (1 samples, 0.02%)</title><rect x="106.1" y="197" width="0.3" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="109.14" y="207.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_cl__lower_case_p_Character_sp (1 samples, 0.02%)</title><rect x="376.1" y="293" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="379.13" y="303.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (2 samples, 0.05%)</title><rect x="871.9" y="229" width="0.6" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="874.94" y="239.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (1 samples, 0.02%)</title><rect x="119.6" y="309" width="0.2" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="122.56" y="319.5" ></text>
</g>
<g >
<title>`core::clasp_to_int(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="1162.3" y="389" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="1165.33" y="399.5" ></text>
</g>
<g >
<title>`mach_timebase_info (1 samples, 0.02%)</title><rect x="904.6" y="245" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="907.64" y="255.5" ></text>
</g>
<g >
<title>`cc_setTLSymbolValue (1 samples, 0.02%)</title><rect x="1129.9" y="373" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1132.91" y="383.5" ></text>
</g>
<g >
<title>`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc (2 samples, 0.05%)</title><rect x="10.3" y="917" width="0.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="13.28" y="927.5" ></text>
</g>
<g >
<title>`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc (2 samples, 0.05%)</title><rect x="10.3" y="629" width="0.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="13.28" y="639.5" ></text>
</g>
<g >
<title>`GC_malloc (2 samples, 0.05%)</title><rect x="1121.8" y="325" width="0.6" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="1124.80" y="335.5" ></text>
</g>
<g >
<title>`wrapped_contagen_mul_Number_spNumber_sp (112 samples, 2.65%)</title><rect x="851.3" y="293" width="31.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="854.26" y="303.5" >`w..</text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (4 samples, 0.09%)</title><rect x="706.8" y="197" width="1.1" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="709.76" y="207.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (7 samples, 0.17%)</title><rect x="923.6" y="309" width="2.0" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="926.65" y="319.5" ></text>
</g>
<g >
<title>`cc_enclose (73 samples, 1.73%)</title><rect x="1069.0" y="341" width="20.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1071.98" y="351.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="485.1" y="213" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="488.13" y="223.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="767.4" y="277" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="770.41" y="287.5" ></text>
</g>
<g >
<title>`LOGTEST^COMMON-LISP^FN^^ (2 samples, 0.05%)</title><rect x="328.9" y="293" width="0.6" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="331.90" y="303.5" ></text>
</g>
<g >
<title>`core::core__hash_eql(gctools::smart_ptr&lt;core::List_V&gt;) (9 samples, 0.21%)</title><rect x="115.4" y="277" width="2.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="118.37" y="287.5" ></text>
</g>
<g >
<title>`core::cl__streamp(gctools::smart_ptr&lt;core::T_O&gt;) (4 samples, 0.09%)</title><rect x="243.1" y="277" width="1.1" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="246.09" y="287.5" ></text>
</g>
<g >
<title>`cm_check_index (7 samples, 0.17%)</title><rect x="354.1" y="293" width="1.9" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="357.05" y="303.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (2 samples, 0.05%)</title><rect x="1057.5" y="229" width="0.6" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1060.52" y="239.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (10 samples, 0.24%)</title><rect x="222.1" y="261" width="2.8" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="225.13" y="271.5" ></text>
</g>
<g >
<title>`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc (2 samples, 0.05%)</title><rect x="10.3" y="597" width="0.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="13.28" y="607.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (15 samples, 0.36%)</title><rect x="234.7" y="325" width="4.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="237.71" y="335.5" ></text>
</g>
<g >
<title>`GC_install_counts (1 samples, 0.02%)</title><rect x="555.6" y="197" width="0.2" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="558.56" y="207.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.02%)</title><rect x="850.4" y="245" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="853.42" y="255.5" ></text>
</g>
<g >
<title>`core::cl__nconc(gctools::smart_ptr&lt;core::List_V&gt;) (8 samples, 0.19%)</title><rect x="11.1" y="901" width="2.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="14.12" y="911.5" ></text>
</g>
<g >
<title>`FORMAT-DIRECTIVE-COLONP^CORE^FN^^ (1 samples, 0.02%)</title><rect x="10.6" y="373" width="0.2" height="15.0" fill="rgb(104,214,214)" rx="2" ry="2" />
<text  x="13.56" y="383.5" ></text>
</g>
<g >
<title>`__cxa_allocate_exception (4 samples, 0.09%)</title><rect x="991.3" y="309" width="1.1" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="994.28" y="319.5" ></text>
</g>
<g >
<title>`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc (2 samples, 0.05%)</title><rect x="10.3" y="821" width="0.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="13.28" y="831.5" ></text>
</g>
<g >
<title>`unw_set_reg (17 samples, 0.40%)</title><rect x="966.7" y="261" width="4.7" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="969.69" y="271.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (37 samples, 0.88%)</title><rect x="1145.6" y="325" width="10.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="1148.56" y="335.5" ></text>
</g>
<g >
<title>`EMF-FROM-CONTF.LAMBDA^CLOS^FN^^ (3,896 samples, 92.28%)</title><rect x="42.7" y="421" width="1088.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="45.70" y="431.5" >`EMF-FROM-CONTF.LAMBDA^CLOS^FN^^</text>
</g>
<g >
<title>`clock_gettime (12 samples, 0.28%)</title><rect x="719.1" y="277" width="3.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="722.06" y="287.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (4 samples, 0.09%)</title><rect x="748.4" y="245" width="1.1" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="751.41" y="255.5" ></text>
</g>
<g >
<title>`core::Ratio_O::setf_numerator_denominator(gctools::smart_ptr&lt;co (1 samples, 0.02%)</title><rect x="839.5" y="245" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="842.52" y="255.5" ></text>
</g>
<g >
<title>`core::General_O::initialize() (12 samples, 0.28%)</title><rect x="500.2" y="277" width="3.4" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="503.22" y="287.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (40 samples, 0.95%)</title><rect x="749.8" y="245" width="11.2" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="752.81" y="255.5" ></text>
</g>
<g >
<title>`__gmpz_get_si (1 samples, 0.02%)</title><rect x="864.1" y="245" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="867.12" y="255.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (1 samples, 0.02%)</title><rect x="995.8" y="229" width="0.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="998.76" y="239.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (14 samples, 0.33%)</title><rect x="894.6" y="261" width="3.9" height="15.0" fill="rgb(211,67,67)" rx="2" ry="2" />
<text  x="897.58" y="271.5" ></text>
</g>
<g >
<title>`INTERPRET-DTREE-PROGRAM^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="177.1" y="325" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="180.13" y="335.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (12 samples, 0.28%)</title><rect x="431.5" y="261" width="3.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="434.47" y="271.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (2 samples, 0.05%)</title><rect x="593.6" y="245" width="0.5" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="596.57" y="255.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="697.3" y="213" width="0.2" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="700.26" y="223.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (10 samples, 0.24%)</title><rect x="564.8" y="277" width="2.8" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="567.78" y="287.5" ></text>
</g>
<g >
<title>`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc (2 samples, 0.05%)</title><rect x="10.3" y="581" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="13.28" y="591.5" ></text>
</g>
<g >
<title>`__gmpz_cdiv_qr (14 samples, 0.33%)</title><rect x="859.9" y="245" width="3.9" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="862.92" y="255.5" ></text>
</g>
<g >
<title>`unw_get_reg (1 samples, 0.02%)</title><rect x="708.7" y="229" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="711.72" y="239.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Nehalem (1 samples, 0.02%)</title><rect x="649.2" y="229" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="652.19" y="239.5" ></text>
</g>
<g >
<title>`fread (5 samples, 0.12%)</title><rect x="69.8" y="277" width="1.4" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="72.81" y="287.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="868.0" y="229" width="0.3" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="871.03" y="239.5" ></text>
</g>
<g >
<title>`__cxxabiv1::set_registers(_Unwind_Exception*, _Unwind_Context*, (2 samples, 0.05%)</title><rect x="966.1" y="261" width="0.6" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="969.13" y="271.5" ></text>
</g>
<g >
<title>`core::Integer_O::create(long long) (2 samples, 0.05%)</title><rect x="852.4" y="277" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="855.38" y="287.5" ></text>
</g>
<g >
<title>`cc_TLSymbolValue (1 samples, 0.02%)</title><rect x="1130.7" y="389" width="0.3" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="1133.75" y="399.5" ></text>
</g>
<g >
<title>`wrapped_contagen_add_Number_spNumber_sp (125 samples, 2.96%)</title><rect x="775.0" y="293" width="34.9" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="777.96" y="303.5" >`w..</text>
</g>
<g >
<title>`core::apply0_inner_list(gctools::smart_ptr&lt;core::Function_O&gt;, g (4,188 samples, 99.19%)</title><rect x="19.2" y="565" width="1170.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="22.22" y="575.5" >`core::apply0_inner_list(gctools::smart_ptr&lt;core::Function_O&gt;, g</text>
</g>
<g >
<title>`core::cl__eval(gctools::smart_ptr&lt;core::T_O&gt;) (4,188 samples, 99.19%)</title><rect x="19.2" y="613" width="1170.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="22.22" y="623.5" >`core::cl__eval(gctools::smart_ptr&lt;core::T_O&gt;)</text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="558.1" y="133" width="0.3" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="561.08" y="143.5" ></text>
</g>
<g >
<title>`TWO-ARG- (1 samples, 0.02%)</title><rect x="882.6" y="309" width="0.2" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="885.56" y="319.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.02%)</title><rect x="932.6" y="309" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="935.59" y="319.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (3 samples, 0.07%)</title><rect x="1031.3" y="213" width="0.8" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1034.25" y="223.5" ></text>
</g>
<g >
<title>`%VERIFY-STRING-ARGS^COMMON-LISP^FN^^ (7 samples, 0.17%)</title><rect x="408.3" y="277" width="1.9" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="411.27" y="287.5" ></text>
</g>
<g >
<title>`cc_makeCell (27 samples, 0.64%)</title><rect x="1092.5" y="341" width="7.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1095.46" y="351.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="1117.6" y="277" width="0.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1120.61" y="287.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.02%)</title><rect x="529.8" y="293" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="532.85" y="303.5" ></text>
</g>
<g >
<title>`VALUES-LIST^COMMON-LISP^FN^^ (2 samples, 0.05%)</title><rect x="1178.5" y="437" width="0.6" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="1181.54" y="447.5" ></text>
</g>
<g >
<title>`cc_unwind (507 samples, 12.01%)</title><rect x="628.5" y="293" width="141.7" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="631.51" y="303.5" >`cc_unwind</text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.02%)</title><rect x="141.1" y="229" width="0.3" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="144.08" y="239.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="1027.3" y="197" width="0.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1030.34" y="207.5" ></text>
</g>
<g >
<title>`__cxa_get_globals_fast (1 samples, 0.02%)</title><rect x="1068.4" y="325" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1071.42" y="335.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (11 samples, 0.26%)</title><rect x="632.7" y="181" width="3.1" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="635.70" y="191.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (4,119 samples, 97.56%)</title><rect x="27.3" y="437" width="1151.2" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="30.33" y="447.5" >`READ-AUX^ECLECTOR.READER^FN^^</text>
</g>
<g >
<title>`__gmp_default_allocate (11 samples, 0.26%)</title><rect x="859.9" y="229" width="3.1" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="862.92" y="239.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.05%)</title><rect x="1143.0" y="357" width="0.6" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="1146.05" y="367.5" ></text>
</g>
<g >
<title>`INTERPRET-DIRECTIVE-LIST^CORE^FN^^ (1 samples, 0.02%)</title><rect x="10.6" y="421" width="0.2" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="13.56" y="431.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (6 samples, 0.14%)</title><rect x="783.9" y="165" width="1.7" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="786.90" y="175.5" ></text>
</g>
<g >
<title>`__cxa_end_catch (3 samples, 0.07%)</title><rect x="1068.1" y="341" width="0.9" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="1071.14" y="351.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (9 samples, 0.21%)</title><rect x="1147.8" y="213" width="2.5" height="15.0" fill="rgb(244,115,115)" rx="2" ry="2" />
<text  x="1150.80" y="223.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="14.5" y="853" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="17.47" y="863.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (2 samples, 0.05%)</title><rect x="569.3" y="293" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="572.26" y="303.5" ></text>
</g>
<g >
<title>`NSTRING-UPCASE^COMMON-LISP^FN^^ (513 samples, 12.15%)</title><rect x="378.1" y="293" width="143.4" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="381.09" y="303.5" >`NSTRING-UPCASE^CO..</text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (2 samples, 0.05%)</title><rect x="996.0" y="213" width="0.6" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="999.04" y="223.5" ></text>
</g>
<g >
<title>`wrapped_cl__zerop_Number_sp (6 samples, 0.14%)</title><rect x="362.7" y="293" width="1.7" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="365.71" y="303.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (19 samples, 0.45%)</title><rect x="692.2" y="229" width="5.3" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="695.23" y="239.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="17.8" y="885" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="20.83" y="895.5" ></text>
</g>
<g >
<title>`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc (2 samples, 0.05%)</title><rect x="10.3" y="837" width="0.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="13.28" y="847.5" ></text>
</g>
<g >
<title>`core::cl__numberp(gctools::smart_ptr&lt;core::T_O&gt;) (4 samples, 0.09%)</title><rect x="116.8" y="261" width="1.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="119.76" y="271.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (9 samples, 0.21%)</title><rect x="1032.1" y="229" width="2.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="1035.09" y="239.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (6 samples, 0.14%)</title><rect x="1131.6" y="421" width="1.7" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="1134.59" y="431.5" ></text>
</g>
<g >
<title>`unw_get_reg (1 samples, 0.02%)</title><rect x="995.2" y="229" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="998.20" y="239.5" ></text>
</g>
<g >
<title>`_Unwind_GetIP (1 samples, 0.02%)</title><rect x="698.9" y="197" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="701.94" y="207.5" ></text>
</g>
<g >
<title>`unwind_phase2 (68 samples, 1.61%)</title><rect x="697.5" y="245" width="19.0" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="700.54" y="255.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (3 samples, 0.07%)</title><rect x="625.2" y="293" width="0.8" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="628.15" y="303.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (2 samples, 0.05%)</title><rect x="1034.6" y="261" width="0.6" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="1037.60" y="271.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (2 samples, 0.05%)</title><rect x="103.1" y="229" width="0.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="106.07" y="239.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="665.1" y="197" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="668.12" y="207.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.02%)</title><rect x="1098.3" y="277" width="0.3" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="1101.33" y="287.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (1 samples, 0.02%)</title><rect x="21.2" y="485" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="24.18" y="495.5" ></text>
</g>
<g >
<title>`libunwind::CompactUnwinder_x86_64&lt;libunwind::LocalAddressSpace&gt; (1 samples, 0.02%)</title><rect x="1000.2" y="277" width="0.3" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="1003.23" y="287.5" ></text>
</g>
<g >
<title>`core::Cons_O::last(long long) const (8 samples, 0.19%)</title><rect x="11.1" y="885" width="2.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="14.12" y="895.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (2 samples, 0.05%)</title><rect x="10.3" y="501" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="13.28" y="511.5" ></text>
</g>
<g >
<title>`GC_notify_or_invoke_finalizers (2 samples, 0.05%)</title><rect x="484.6" y="213" width="0.5" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="487.57" y="223.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="1103.6" y="325" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1106.64" y="335.5" ></text>
</g>
<g >
<title>`funlockfile (1 samples, 0.02%)</title><rect x="279.1" y="245" width="0.3" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="282.15" y="255.5" ></text>
</g>
<g >
<title>`VREF^CORE^SETF^^ (3 samples, 0.07%)</title><rect x="424.5" y="277" width="0.8" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="427.48" y="287.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="17.8" y="901" width="0.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="20.83" y="911.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="640.5" y="181" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="643.53" y="191.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="484.0" y="53" width="0.3" height="15.0" fill="rgb(213,70,70)" rx="2" ry="2" />
<text  x="487.01" y="63.5" ></text>
</g>
<g >
<title>`MAKE-VECTOR^CORE^FN^^ (65 samples, 1.54%)</title><rect x="89.9" y="309" width="18.2" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="92.93" y="319.5" ></text>
</g>
<g >
<title>`__gmp_default_allocate (10 samples, 0.24%)</title><rect x="816.3" y="229" width="2.8" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="819.32" y="239.5" ></text>
</g>
<g >
<title>`core::Symbol_O::fboundp() const (5 samples, 0.12%)</title><rect x="610.9" y="245" width="1.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="613.90" y="255.5" ></text>
</g>
<g >
<title>`core::core__apply1(gctools::smart_ptr&lt;core::Function_O&gt;, gctool (4 samples, 0.09%)</title><rect x="1171.8" y="421" width="1.2" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1174.83" y="431.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (23 samples, 0.54%)</title><rect x="1045.5" y="245" width="6.4" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1048.50" y="255.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (79 samples, 1.87%)</title><rect x="463.3" y="229" width="22.1" height="15.0" fill="rgb(212,67,67)" rx="2" ry="2" />
<text  x="466.33" y="239.5" >`..</text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (2 samples, 0.05%)</title><rect x="867.5" y="229" width="0.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="870.47" y="239.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (12 samples, 0.28%)</title><rect x="986.8" y="213" width="3.4" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="989.81" y="223.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="1183.9" y="453" width="0.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1186.85" y="463.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (13 samples, 0.31%)</title><rect x="757.4" y="229" width="3.6" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="760.35" y="239.5" ></text>
</g>
<g >
<title>`_Unwind_GetRegionStart (2 samples, 0.05%)</title><rect x="630.2" y="213" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="633.18" y="223.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (14 samples, 0.33%)</title><rect x="1017.8" y="261" width="3.9" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="1020.84" y="271.5" ></text>
</g>
<g >
<title>`unwind_phase2 (81 samples, 1.92%)</title><rect x="628.8" y="261" width="22.6" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="631.79" y="271.5" >`..</text>
</g>
<g >
<title>`cc_unwind (354 samples, 8.38%)</title><rect x="961.9" y="325" width="99.0" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="964.94" y="335.5" >`cc_unwind</text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.05%)</title><rect x="622.4" y="229" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="625.36" y="239.5" ></text>
</g>
<g >
<title>`core::Integer_O::create(long long) (8 samples, 0.19%)</title><rect x="950.8" y="277" width="2.2" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="953.76" y="287.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (16 samples, 0.38%)</title><rect x="230.2" y="325" width="4.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="233.24" y="335.5" ></text>
</g>
<g >
<title>`set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="653.9" y="181" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="656.94" y="191.5" ></text>
</g>
<g >
<title>0x111bc024a (4,188 samples, 99.19%)</title><rect x="19.2" y="533" width="1170.5" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="22.22" y="543.5" >0x111bc024a</text>
</g>
<g >
<title>`pthread_once (1 samples, 0.02%)</title><rect x="1065.3" y="309" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1068.35" y="319.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::set_thread_local_value(gctools::smar (1 samples, 0.02%)</title><rect x="1120.7" y="357" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="1123.69" y="367.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (102 samples, 2.42%)</title><rect x="457.7" y="245" width="28.5" height="15.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text  x="460.74" y="255.5" >`G..</text>
</g>
<g >
<title>`mp::do_start_thread_inner(gctools::smart_ptr&lt;mp::Process_O&gt;, gc (4,222 samples, 100.00%)</title><rect x="10.0" y="1029" width="1180.0" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" >`mp::do_start_thread_inner(gctools::smart_ptr&lt;mp::Process_O&gt;, gc</text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.05%)</title><rect x="789.8" y="213" width="0.5" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="792.77" y="223.5" ></text>
</g>
<g >
<title>`VALUES^COMMON-LISP^FN^^ (18 samples, 0.43%)</title><rect x="524.5" y="293" width="5.1" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="527.54" y="303.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (25 samples, 0.59%)</title><rect x="678.8" y="181" width="7.0" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="681.82" y="191.5" ></text>
</g>
<g >
<title>`cc_rewind_va_list (2 samples, 0.05%)</title><rect x="238.9" y="325" width="0.6" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="241.90" y="335.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="1129.9" y="357" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1132.91" y="367.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (8 samples, 0.19%)</title><rect x="705.6" y="213" width="2.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="708.65" y="223.5" ></text>
</g>
<g >
<title>`GC_is_black_listed (1 samples, 0.02%)</title><rect x="1082.7" y="245" width="0.3" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="1085.68" y="255.5" ></text>
</g>
<g >
<title>`_pthread_mutex_firstfit_lock_slow (1 samples, 0.02%)</title><rect x="15.0" y="837" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="18.03" y="847.5" ></text>
</g>
<g >
<title>`core::cl__unread_char(gctools::smart_ptr&lt;core::Character_I&gt;, gc (1 samples, 0.02%)</title><rect x="1121.0" y="357" width="0.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="1123.97" y="367.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (4 samples, 0.09%)</title><rect x="865.2" y="229" width="1.2" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="868.23" y="239.5" ></text>
</g>
<g >
<title>`_Unwind_GetLanguageSpecificData (2 samples, 0.05%)</title><rect x="995.5" y="245" width="0.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="998.48" y="255.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="542.1" y="293" width="0.3" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="545.15" y="303.5" ></text>
</g>
<g >
<title>`szone_size (1 samples, 0.02%)</title><rect x="841.8" y="229" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="844.76" y="239.5" ></text>
</g>
<g >
<title>`szone_size (1 samples, 0.02%)</title><rect x="809.1" y="261" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="812.06" y="271.5" ></text>
</g>
<g >
<title>`cc_enclose (44 samples, 1.04%)</title><rect x="889.3" y="309" width="12.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="892.27" y="319.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="329.5" y="261" width="0.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="332.46" y="271.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eql(core::HashGenerator&amp;, gctools::sm (9 samples, 0.21%)</title><rect x="211.8" y="245" width="2.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="214.79" y="255.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (3 samples, 0.07%)</title><rect x="756.5" y="229" width="0.9" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="759.51" y="239.5" ></text>
</g>
<g >
<title>`READ-CHAR^ECLECTOR.BASE^FN^^ (1 samples, 0.02%)</title><rect x="49.4" y="373" width="0.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="52.41" y="383.5" ></text>
</g>
<g >
<title>`core::log_operation_2op(core::boole_ops, gctools::smart_ptr&lt;cor (3 samples, 0.07%)</title><rect x="123.2" y="293" width="0.8" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="126.19" y="303.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="1153.7" y="229" width="0.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1156.67" y="239.5" ></text>
</g>
<g >
<title>`core::utf_8_decoder(gctools::smart_ptr&lt;core::T_O&gt;) (143 samples, 3.39%)</title><rect x="248.1" y="277" width="40.0" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="251.12" y="287.5" >`co..</text>
</g>
<g >
<title>`szone_malloc (1 samples, 0.02%)</title><rect x="655.1" y="229" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="658.06" y="239.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (2 samples, 0.05%)</title><rect x="828.1" y="181" width="0.5" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="831.06" y="191.5" ></text>
</g>
<g >
<title>`core::input_stream_read_byte8(gctools::smart_ptr&lt;core::T_O&gt;, un (4 samples, 0.09%)</title><rect x="60.9" y="293" width="1.1" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="63.87" y="303.5" ></text>
</g>
<g >
<title>`core::log_operation_2op(core::boole_ops, gctools::smart_ptr&lt;cor (3 samples, 0.07%)</title><rect x="343.7" y="277" width="0.8" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="346.71" y="287.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (22 samples, 0.52%)</title><rect x="750.4" y="229" width="6.1" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="753.36" y="239.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (2 samples, 0.05%)</title><rect x="409.7" y="261" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="412.67" y="271.5" ></text>
</g>
<g >
<title>`core::Rational_O::create(__gmp_expr&lt;__mpz_struct [1], __mpz_str (1 samples, 0.02%)</title><rect x="852.9" y="277" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="855.94" y="287.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (7 samples, 0.17%)</title><rect x="649.5" y="229" width="1.9" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="652.47" y="239.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (10 samples, 0.24%)</title><rect x="1150.9" y="213" width="2.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1153.87" y="223.5" ></text>
</g>
<g >
<title>`__gmpz_mul (3 samples, 0.07%)</title><rect x="779.4" y="261" width="0.9" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="782.43" y="271.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.02%)</title><rect x="82.4" y="341" width="0.3" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="85.39" y="351.5" ></text>
</g>
<g >
<title>`default_zone_free_definite_size (4 samples, 0.09%)</title><rect x="839.8" y="245" width="1.1" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="842.80" y="255.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_core__apply1_Function_spT_sp________________ (2 samples, 0.05%)</title><rect x="42.1" y="421" width="0.6" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="45.14" y="431.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="117.9" y="293" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="120.88" y="303.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="632.4" y="181" width="0.3" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="635.42" y="191.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (2 samples, 0.05%)</title><rect x="1156.7" y="357" width="0.6" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="1159.74" y="367.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (2 samples, 0.05%)</title><rect x="626.0" y="293" width="0.6" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="628.99" y="303.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="582.4" y="277" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="585.39" y="287.5" ></text>
</g>
<g >
<title>`clock_gettime (6 samples, 0.14%)</title><rect x="1058.9" y="293" width="1.7" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="1061.92" y="303.5" ></text>
</g>
<g >
<title>`__cxa_get_globals_fast (3 samples, 0.07%)</title><rect x="716.5" y="245" width="0.9" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="719.55" y="255.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (2 samples, 0.05%)</title><rect x="1057.5" y="245" width="0.6" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="1060.52" y="255.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="708.7" y="213" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="711.72" y="223.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (3 samples, 0.07%)</title><rect x="1105.0" y="325" width="0.9" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="1108.04" y="335.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (9 samples, 0.21%)</title><rect x="816.6" y="165" width="2.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="819.60" y="175.5" ></text>
</g>
<g >
<title>`core::core__vset(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ (1 samples, 0.02%)</title><rect x="411.3" y="245" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="414.35" y="255.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (4 samples, 0.09%)</title><rect x="1031.0" y="229" width="1.1" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1033.97" y="239.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (7 samples, 0.17%)</title><rect x="783.6" y="197" width="2.0" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="786.62" y="207.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (2 samples, 0.05%)</title><rect x="1125.7" y="325" width="0.6" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1128.72" y="335.5" ></text>
</g>
<g >
<title>`RECEIVE-IF^SWANK/BACKEND^FN^^ (12 samples, 0.28%)</title><rect x="10.0" y="965" width="3.4" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="13.00" y="975.5" ></text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (1 samples, 0.02%)</title><rect x="1127.7" y="357" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="1130.67" y="367.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (1 samples, 0.02%)</title><rect x="785.9" y="213" width="0.2" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="788.86" y="223.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_contagen_mul_Number_spNumber_sp (1 samples, 0.02%)</title><rect x="303.5" y="325" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="306.46" y="335.5" ></text>
</g>
<g >
<title>`szone_realloc (1 samples, 0.02%)</title><rect x="859.1" y="197" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="862.09" y="207.5" ></text>
</g>
<g >
<title>`wrapped_cl__unread_char_Character_spT_sp (21 samples, 0.50%)</title><rect x="1121.8" y="357" width="5.9" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="1124.80" y="367.5" ></text>
</g>
<g >
<title>`_pthread_mutex_lock_init_slow (3 samples, 0.07%)</title><rect x="267.1" y="213" width="0.9" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="270.13" y="223.5" ></text>
</g>
<g >
<title>`core::coerce::inputStreamDesignator(gctools::smart_ptr&lt;core::T_ (2 samples, 0.05%)</title><rect x="1185.8" y="469" width="0.6" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="1188.81" y="479.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$cc_initialize_closure (1 samples, 0.02%)</title><rect x="533.5" y="309" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="536.48" y="319.5" ></text>
</g>
<g >
<title>`core::contagen_add(gctools::smart_ptr&lt;core::Number_O&gt;, gctools: (1 samples, 0.02%)</title><rect x="771.0" y="293" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="774.05" y="303.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="567.6" y="277" width="0.3" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="570.58" y="287.5" ></text>
</g>
<g >
<title>`core::clasp_gcd(gctools::smart_ptr&lt;core::Integer_O&gt;, gctools::s (1 samples, 0.02%)</title><rect x="867.2" y="229" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="870.19" y="239.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (6 samples, 0.14%)</title><rect x="845.7" y="229" width="1.6" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="848.67" y="239.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="1069.3" y="325" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1072.26" y="335.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.02%)</title><rect x="790.1" y="181" width="0.2" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="793.05" y="191.5" ></text>
</g>
<g >
<title>`core::eformat_read_char(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="291.7" y="309" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="294.72" y="319.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleVector_byte8_t_O, unsig (1 samples, 0.02%)</title><rect x="356.3" y="277" width="0.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="359.29" y="287.5" ></text>
</g>
<g >
<title>`cc_initialize_closure (5 samples, 0.12%)</title><rect x="1089.4" y="341" width="1.4" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1092.38" y="351.5" ></text>
</g>
<g >
<title>`__gmpz_tdiv_qr (3 samples, 0.07%)</title><rect x="863.0" y="229" width="0.8" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="866.00" y="239.5" ></text>
</g>
<g >
<title>`cc_initialize_closure (4 samples, 0.09%)</title><rect x="560.0" y="293" width="1.2" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="563.03" y="303.5" ></text>
</g>
<g >
<title>`core::Ratio_O::create(gctools::smart_ptr&lt;core::Integer_O&gt;, gcto (33 samples, 0.78%)</title><rect x="788.1" y="245" width="9.2" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="791.10" y="255.5" ></text>
</g>
<g >
<title>`__cxa_decrement_exception_refcount (14 samples, 0.33%)</title><rect x="885.1" y="309" width="3.9" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="888.08" y="319.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.05%)</title><rect x="865.8" y="213" width="0.6" height="15.0" fill="rgb(230,93,93)" rx="2" ry="2" />
<text  x="868.79" y="223.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (3 samples, 0.07%)</title><rect x="690.8" y="245" width="0.9" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="693.83" y="255.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="1117.6" y="293" width="0.3" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="1120.61" y="303.5" ></text>
</g>
<g >
<title>`core::contagen_mul(gctools::smart_ptr&lt;core::Number_O&gt;, gctools: (7 samples, 0.17%)</title><rect x="929.0" y="309" width="1.9" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="931.96" y="319.5" ></text>
</g>
<g >
<title>`GC_add_map_entry (2 samples, 0.05%)</title><rect x="553.3" y="213" width="0.6" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="556.33" y="223.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (8 samples, 0.19%)</title><rect x="288.1" y="293" width="2.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="291.09" y="303.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (1 samples, 0.02%)</title><rect x="1163.7" y="421" width="0.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="1166.73" y="431.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (12 samples, 0.28%)</title><rect x="751.2" y="213" width="3.4" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="754.20" y="223.5" ></text>
</g>
<g >
<title>`unw_set_reg (14 samples, 0.33%)</title><rect x="632.1" y="229" width="4.0" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="635.14" y="239.5" ></text>
</g>
<g >
<title>`__cxa_begin_catch (2 samples, 0.05%)</title><rect x="884.5" y="309" width="0.6" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="887.52" y="319.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="1069.5" y="325" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="1072.54" y="335.5" ></text>
</g>
<g >
<title>`malloc_zone_realloc (1 samples, 0.02%)</title><rect x="859.1" y="213" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="862.09" y="223.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (1 samples, 0.02%)</title><rect x="44.7" y="405" width="0.2" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="47.66" y="415.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="629.9" y="197" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="632.91" y="207.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="567.3" y="181" width="0.3" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="570.30" y="191.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (25 samples, 0.59%)</title><rect x="975.1" y="229" width="7.0" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="978.07" y="239.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (8 samples, 0.19%)</title><rect x="701.5" y="197" width="2.2" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="704.45" y="207.5" ></text>
</g>
<g >
<title>`unw_getcontext (7 samples, 0.17%)</title><rect x="768.0" y="277" width="1.9" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="770.97" y="287.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (41 samples, 0.97%)</title><rect x="1044.9" y="277" width="11.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="1047.95" y="287.5" ></text>
</g>
<g >
<title>`SIMPLE-TYPE-PREDICATE^CORE^FN^^ (6 samples, 0.14%)</title><rect x="608.1" y="261" width="1.7" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="611.11" y="271.5" ></text>
</g>
<g >
<title>`mp::do_start_thread_inner(gctools::smart_ptr&lt;mp::Process_O&gt;, gc (4,222 samples, 100.00%)</title><rect x="10.0" y="1045" width="1180.0" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" >`mp::do_start_thread_inner(gctools::smart_ptr&lt;mp::Process_O&gt;, gc</text>
</g>
<g >
<title>`READ-CHAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="58.4" y="357" width="0.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="61.35" y="367.5" ></text>
</g>
<g >
<title>`wrapped_cl__read_char_T_spT_spT_spT_sp (50 samples, 1.18%)</title><rect x="60.3" y="341" width="14.0" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="63.31" y="351.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (1 samples, 0.02%)</title><rect x="927.8" y="309" width="0.3" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="930.84" y="319.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="558.1" y="69" width="0.3" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="561.08" y="79.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.02%)</title><rect x="140.8" y="245" width="0.3" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="143.80" y="255.5" ></text>
</g>
<g >
<title>`EVAL-REGION^SWANK^FN^^ (4,188 samples, 99.19%)</title><rect x="19.2" y="629" width="1170.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="22.22" y="639.5" >`EVAL-REGION^SWANK^FN^^</text>
</g>
<g >
<title>`free_tiny (12 samples, 0.28%)</title><rect x="875.6" y="261" width="3.3" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="878.58" y="271.5" ></text>
</g>
<g >
<title>`cc_enclose (63 samples, 1.49%)</title><rect x="542.4" y="293" width="17.6" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="545.43" y="303.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="1129.4" y="357" width="0.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="1132.35" y="367.5" ></text>
</g>
<g >
<title>`__gmpz_add_ui (2 samples, 0.05%)</title><rect x="859.4" y="245" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="862.37" y="255.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (18 samples, 0.43%)</title><rect x="1036.3" y="229" width="5.0" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1039.28" y="239.5" ></text>
</g>
<g >
<title>`cc_initialize_closure (5 samples, 0.12%)</title><rect x="901.6" y="309" width="1.4" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="904.57" y="319.5" ></text>
</g>
<g >
<title>`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc (2 samples, 0.05%)</title><rect x="10.3" y="805" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="13.28" y="815.5" ></text>
</g>
<g >
<title>`core::Integer_O::create(unsigned char) (4 samples, 0.09%)</title><rect x="356.8" y="293" width="1.2" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="359.85" y="303.5" ></text>
</g>
<g >
<title>`unw_init_local (1 samples, 0.02%)</title><rect x="769.9" y="277" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="772.93" y="287.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="247.8" y="277" width="0.3" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="250.84" y="287.5" ></text>
</g>
<g >
<title>`GC_end_stubborn_change (1 samples, 0.02%)</title><rect x="463.1" y="229" width="0.2" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="466.05" y="239.5" ></text>
</g>
<g >
<title>`READ-CHAR-HANDLING-EOF^ECLECTOR.READER^FN^^ (523 samples, 12.39%)</title><rect x="151.4" y="341" width="146.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="154.42" y="351.5" >`READ-CHAR-HANDLIN..</text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (14 samples, 0.33%)</title><rect x="1012.5" y="245" width="3.9" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="1015.52" y="255.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$mach_timebase_info (1 samples, 0.02%)</title><rect x="762.7" y="245" width="0.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="765.66" y="255.5" ></text>
</g>
<g >
<title>`core::cl__class_of(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="17.3" y="885" width="0.2" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="20.27" y="895.5" ></text>
</g>
<g >
<title>`rand (3 samples, 0.07%)</title><rect x="107.0" y="245" width="0.8" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="109.98" y="255.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (12 samples, 0.28%)</title><rect x="986.8" y="229" width="3.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="989.81" y="239.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (2 samples, 0.05%)</title><rect x="1026.2" y="229" width="0.6" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1029.22" y="239.5" ></text>
</g>
<g >
<title>`tlv_get_addr (3 samples, 0.07%)</title><rect x="1160.4" y="341" width="0.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1163.37" y="351.5" ></text>
</g>
<g >
<title>`INTERPRET-DIRECTIVE-LIST^CORE^FN^^ (2 samples, 0.05%)</title><rect x="10.3" y="469" width="0.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="13.28" y="479.5" ></text>
</g>
<g >
<title>`pthread_once (1 samples, 0.02%)</title><rect x="889.0" y="293" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="891.99" y="303.5" ></text>
</g>
<g >
<title>`GC_is_black_listed (2 samples, 0.05%)</title><rect x="896.0" y="213" width="0.5" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="898.98" y="223.5" ></text>
</g>
<g >
<title>`unw_get_reg (1 samples, 0.02%)</title><rect x="963.1" y="293" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="966.06" y="303.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$_platform_memmove (1 samples, 0.02%)</title><rect x="659.0" y="245" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="661.97" y="255.5" ></text>
</g>
<g >
<title>`core::cl__float(gctools::smart_ptr&lt;core::Real_O&gt;, gctools::smar (1 samples, 0.02%)</title><rect x="612.9" y="277" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="615.86" y="287.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleVector_byte8_t_O, unsig (3 samples, 0.07%)</title><rect x="358.5" y="293" width="0.9" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="361.52" y="303.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (102 samples, 2.42%)</title><rect x="962.8" y="309" width="28.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="965.78" y="319.5" >`_..</text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (4,139 samples, 98.03%)</title><rect x="24.8" y="453" width="1156.8" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="27.81" y="463.5" >`READ^ECLECTOR.READER^FN^^</text>
</g>
<g >
<title>`__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned  (13 samples, 0.31%)</title><rect x="996.6" y="245" width="3.6" height="15.0" fill="rgb(60,210,60)" rx="2" ry="2" />
<text  x="999.59" y="255.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::machHeader() const (1 samples, 0.02%)</title><rect x="678.5" y="181" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="681.54" y="191.5" ></text>
</g>
<g >
<title>`GC_install_header (5 samples, 0.12%)</title><rect x="470.9" y="165" width="1.4" height="15.0" fill="rgb(241,111,111)" rx="2" ry="2" />
<text  x="473.88" y="175.5" ></text>
</g>
<g >
<title>`gctools::GCObjectDefaultConstructorAllocator&lt;core::DoubleFloat_ (1 samples, 0.02%)</title><rect x="624.0" y="261" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="627.04" y="271.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (10 samples, 0.24%)</title><rect x="816.3" y="197" width="2.8" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="819.32" y="207.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (6 samples, 0.14%)</title><rect x="228.6" y="277" width="1.6" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="231.56" y="287.5" ></text>
</g>
<g >
<title>`LOG-EVENT^SWANK^FN^^ (2 samples, 0.05%)</title><rect x="10.3" y="933" width="0.5" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="13.28" y="943.5" ></text>
</g>
<g >
<title>`__gmpz_tdiv_qr (2 samples, 0.05%)</title><rect x="786.1" y="229" width="0.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="789.14" y="239.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (39 samples, 0.92%)</title><rect x="974.5" y="261" width="10.9" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="977.51" y="271.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (10 samples, 0.24%)</title><rect x="111.5" y="293" width="2.7" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="114.45" y="303.5" ></text>
</g>
<g >
<title>`CALL-WITH-BINDINGS^SWANK^FN^^ (4,188 samples, 99.19%)</title><rect x="19.2" y="981" width="1170.5" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="22.22" y="991.5" >`CALL-WITH-BINDINGS^SWANK^FN^^</text>
</g>
<g >
<title>`realloc (3 samples, 0.07%)</title><rect x="800.7" y="245" width="0.8" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="803.67" y="255.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="1145.3" y="325" width="0.3" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="1148.28" y="335.5" ></text>
</g>
<g >
<title>`UNREAD-CHAR^COMMON-LISP^FN^^ (3 samples, 0.07%)</title><rect x="1128.5" y="373" width="0.9" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="1131.51" y="383.5" ></text>
</g>
<g >
<title>`cm_vref (2 samples, 0.05%)</title><rect x="356.0" y="293" width="0.6" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="359.01" y="303.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (28 samples, 0.66%)</title><rect x="551.1" y="261" width="7.8" height="15.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text  x="554.09" y="271.5" ></text>
</g>
<g >
<title>`malloc (13 samples, 0.31%)</title><rect x="651.7" y="245" width="3.6" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="654.71" y="255.5" ></text>
</g>
<g >
<title>`core::cl__vector_push_extend(gctools::smart_ptr&lt;core::T_O&gt;, gct (21 samples, 0.50%)</title><rect x="126.3" y="325" width="5.8" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="129.27" y="335.5" ></text>
</g>
<g >
<title>`free_tiny (7 samples, 0.17%)</title><rect x="848.7" y="261" width="2.0" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="851.74" y="271.5" ></text>
</g>
<g >
<title>`GC_approx_sp (1 samples, 0.02%)</title><rect x="106.1" y="181" width="0.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="109.14" y="191.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (44 samples, 1.04%)</title><rect x="659.5" y="245" width="12.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="662.53" y="255.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (2 samples, 0.05%)</title><rect x="916.1" y="229" width="0.6" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="919.10" y="239.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (1 samples, 0.02%)</title><rect x="671.5" y="213" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="674.55" y="223.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__free_with_fallback(void*) (1 samples, 0.02%)</title><rect x="885.1" y="293" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="888.08" y="303.5" ></text>
</g>
<g >
<title>`core::clasp_integer_divide(gctools::smart_ptr&lt;core::Integer_O&gt;, (1 samples, 0.02%)</title><rect x="837.0" y="229" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="840.01" y="239.5" ></text>
</g>
<g >
<title>`__gmpz_realloc (1 samples, 0.02%)</title><rect x="819.1" y="229" width="0.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="822.12" y="239.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (1 samples, 0.02%)</title><rect x="701.5" y="181" width="0.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="704.45" y="191.5" ></text>
</g>
<g >
<title>`libunwind::CompactUnwinder_x86_64&lt;libunwind::LocalAddressSpace&gt; (9 samples, 0.21%)</title><rect x="637.5" y="229" width="2.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="640.45" y="239.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="922.8" y="277" width="0.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="925.81" y="287.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (2 samples, 0.05%)</title><rect x="118.4" y="293" width="0.6" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="121.44" y="303.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (9 samples, 0.21%)</title><rect x="103.9" y="229" width="2.5" height="15.0" fill="rgb(241,109,109)" rx="2" ry="2" />
<text  x="106.91" y="239.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (13 samples, 0.31%)</title><rect x="693.3" y="181" width="3.7" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="696.35" y="191.5" ></text>
</g>
<g >
<title>`GC_clear_hdr_marks (1 samples, 0.02%)</title><rect x="474.0" y="197" width="0.2" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="476.95" y="207.5" ></text>
</g>
<g >
<title>`core::core__syntax_type(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (144 samples, 3.41%)</title><rect x="190.0" y="293" width="40.2" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="192.99" y="303.5" >`co..</text>
</g>
<g >
<title>`core::core__hash_eql(gctools::smart_ptr&lt;core::List_V&gt;) (2 samples, 0.05%)</title><rect x="114.2" y="293" width="0.6" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="117.25" y="303.5" ></text>
</g>
<g >
<title>`malloc (9 samples, 0.21%)</title><rect x="783.3" y="213" width="2.6" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="786.34" y="223.5" ></text>
</g>
<g >
<title>`szone_free_definite_size (1 samples, 0.02%)</title><rect x="932.3" y="309" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="935.31" y="319.5" ></text>
</g>
<g >
<title>`MAKE-HASH-TABLE^COMMON-LISP^FN^^ (3 samples, 0.07%)</title><rect x="26.5" y="437" width="0.8" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="29.49" y="447.5" ></text>
</g>
<g >
<title>`core::input_stream_read_byte8(gctools::smart_ptr&lt;core::T_O&gt;, un (2 samples, 0.05%)</title><rect x="247.3" y="277" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="250.29" y="287.5" ></text>
</g>
<g >
<title>`GC_allochblk (2 samples, 0.05%)</title><rect x="1098.0" y="293" width="0.6" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="1101.05" y="303.5" ></text>
</g>
<g >
<title>`wrapped_core__syntax_type_T_spCharacter_sp (16 samples, 0.38%)</title><rect x="1114.3" y="341" width="4.4" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="1117.26" y="351.5" ></text>
</g>
<g >
<title>`GC_allochblk (2 samples, 0.05%)</title><rect x="566.2" y="245" width="0.5" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="569.18" y="255.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.02%)</title><rect x="1118.5" y="309" width="0.2" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="1121.45" y="319.5" ></text>
</g>
<g >
<title>`GC_build_fl (2 samples, 0.05%)</title><rect x="141.4" y="229" width="0.5" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="144.36" y="239.5" ></text>
</g>
<g >
<title>`__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan (39 samples, 0.92%)</title><rect x="660.9" y="229" width="10.9" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="663.93" y="239.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (1 samples, 0.02%)</title><rect x="17.0" y="869" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="19.99" y="879.5" ></text>
</g>
<g >
<title>`free (2 samples, 0.05%)</title><rect x="882.0" y="277" width="0.6" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="885.00" y="287.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (1 samples, 0.02%)</title><rect x="1027.3" y="213" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1030.34" y="223.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (6 samples, 0.14%)</title><rect x="649.5" y="213" width="1.6" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="652.47" y="223.5" ></text>
</g>
<g >
<title>`wrapped_core__apply1_Function_spT_sp___________________________ (2 samples, 0.05%)</title><rect x="1131.0" y="405" width="0.6" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1134.03" y="415.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="651.1" y="213" width="0.3" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="654.15" y="223.5" ></text>
</g>
<g >
<title>`free (2 samples, 0.05%)</title><rect x="930.9" y="309" width="0.6" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="933.91" y="319.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="558.1" y="181" width="0.3" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="561.08" y="191.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="796.5" y="229" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="799.48" y="239.5" ></text>
</g>
<g >
<title>`free (7 samples, 0.17%)</title><rect x="873.6" y="261" width="2.0" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="876.62" y="271.5" ></text>
</g>
<g >
<title>`pthread_getspecific (2 samples, 0.05%)</title><rect x="917.5" y="293" width="0.6" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="920.50" y="303.5" ></text>
</g>
<g >
<title>`PUSH-CHAR^ECLECTOR.READER^FN^^ (97 samples, 2.30%)</title><rect x="124.3" y="341" width="27.1" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="127.31" y="351.5" >`..</text>
</g>
<g >
<title>`core::Ratio_O::create(gctools::smart_ptr&lt;core::Integer_O&gt;, gcto (15 samples, 0.36%)</title><rect x="864.7" y="245" width="4.2" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="867.68" y="255.5" ></text>
</g>
<g >
<title>`clock_gettime (19 samples, 0.45%)</title><rect x="761.5" y="261" width="5.4" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="764.54" y="271.5" ></text>
</g>
<g >
<title>`__fread (13 samples, 0.31%)</title><rect x="255.1" y="229" width="3.6" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="258.11" y="239.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.05%)</title><rect x="434.3" y="245" width="0.5" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="437.26" y="255.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (13 samples, 0.31%)</title><rect x="967.0" y="197" width="3.6" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="969.97" y="207.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (6 samples, 0.14%)</title><rect x="104.7" y="213" width="1.7" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="107.75" y="223.5" ></text>
</g>
<g >
<title>`libunwind::Registers_x86_64::jumpto() (1 samples, 0.02%)</title><rect x="704.0" y="229" width="0.2" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="706.97" y="239.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (6 samples, 0.14%)</title><rect x="352.4" y="293" width="1.7" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="355.37" y="303.5" ></text>
</g>
<g >
<title>`UNBOUND^CORE^FN^^ (1 samples, 0.02%)</title><rect x="18.7" y="933" width="0.2" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="21.66" y="943.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (2 samples, 0.05%)</title><rect x="330.0" y="293" width="0.6" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="333.01" y="303.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (18 samples, 0.43%)</title><rect x="685.8" y="213" width="5.0" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="688.80" y="223.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_core__make_vector_T_sp______________________ (1 samples, 0.02%)</title><rect x="89.7" y="309" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="92.65" y="319.5" ></text>
</g>
<g >
<title>`unw_getcontext (2 samples, 0.05%)</title><rect x="718.2" y="261" width="0.6" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="721.22" y="271.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (2 samples, 0.05%)</title><rect x="558.1" y="213" width="0.5" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="561.08" y="223.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Nehalem (1 samples, 0.02%)</title><rect x="258.5" y="213" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="261.47" y="223.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="995.8" y="213" width="0.2" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="998.76" y="223.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::SimpleCharacterString_O&gt; gctools::GCOb (1 samples, 0.02%)</title><rect x="107.8" y="261" width="0.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="110.82" y="271.5" ></text>
</g>
<g >
<title>`core::coerce::inputStreamDesignator(gctools::smart_ptr&lt;core::T_ (7 samples, 0.17%)</title><rect x="242.3" y="293" width="1.9" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="245.25" y="303.5" ></text>
</g>
<g >
<title>`COERCE-FDESIGNATOR^CORE^FN^^ (5 samples, 0.12%)</title><rect x="411.9" y="277" width="1.4" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="414.90" y="287.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (2 samples, 0.05%)</title><rect x="916.1" y="197" width="0.6" height="15.0" fill="rgb(213,68,68)" rx="2" ry="2" />
<text  x="919.10" y="207.5" ></text>
</g>
<g >
<title>`_pthread_mutex_firstfit_lock_slow (18 samples, 0.43%)</title><rect x="262.1" y="213" width="5.0" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="265.10" y="223.5" ></text>
</g>
<g >
<title>`unw_init_local (24 samples, 0.57%)</title><rect x="1035.4" y="261" width="6.8" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="1038.44" y="271.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="1108.9" y="341" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="1111.95" y="351.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.02%)</title><rect x="621.0" y="181" width="0.2" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="623.96" y="191.5" ></text>
</g>
<g >
<title>`__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned  (1 samples, 0.02%)</title><rect x="660.6" y="229" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="663.65" y="239.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="1034.9" y="245" width="0.3" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="1037.88" y="255.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (10 samples, 0.24%)</title><rect x="598.0" y="245" width="2.8" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="601.04" y="255.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (4 samples, 0.09%)</title><rect x="1098.0" y="309" width="1.2" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="1101.05" y="319.5" ></text>
</g>
<g >
<title>`core::lisp_true() (2 samples, 0.05%)</title><rect x="343.2" y="277" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="346.15" y="287.5" ></text>
</g>
<g >
<title>`wrapped_cl__digit_char_p_Character_spFixnum_sp (14 samples, 0.33%)</title><rect x="933.7" y="309" width="3.9" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="936.71" y="319.5" ></text>
</g>
<g >
<title>`%VERIFY-STRING-ARGS^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="371.4" y="293" width="1.1" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="374.38" y="303.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (4 samples, 0.09%)</title><rect x="627.4" y="293" width="1.1" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="630.39" y="303.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (1 samples, 0.02%)</title><rect x="960.3" y="309" width="0.2" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="963.26" y="319.5" ></text>
</g>
<g >
<title>`wrapped_cl__lower_case_p_Character_sp (11 samples, 0.26%)</title><rect x="512.8" y="277" width="3.1" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="515.80" y="287.5" ></text>
</g>
<g >
<title>`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc (4,188 samples, 99.19%)</title><rect x="19.2" y="917" width="1170.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="22.22" y="927.5" >`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc</text>
</g>
<g >
<title>`GC_clear_stack_inner (2 samples, 0.05%)</title><rect x="484.0" y="117" width="0.6" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="487.01" y="127.5" ></text>
</g>
<g >
<title>`malloc_zone_realloc (2 samples, 0.05%)</title><rect x="781.7" y="213" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="784.67" y="223.5" ></text>
</g>
<g >
<title>`core::cl__read_char(gctools::smart_ptr&lt;core::T_O&gt;, gctools::sma (39 samples, 0.92%)</title><rect x="60.3" y="325" width="10.9" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="63.31" y="335.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (12 samples, 0.28%)</title><rect x="651.7" y="229" width="3.4" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="654.71" y="239.5" ></text>
</g>
<g >
<title>`core::MDArray_O::vectorPushExtend(gctools::smart_ptr&lt;core::T_O&gt; (40 samples, 0.95%)</title><rect x="133.3" y="309" width="11.1" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="136.25" y="319.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="866.4" y="229" width="0.2" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="869.35" y="239.5" ></text>
</g>
<g >
<title>`unw_set_reg (8 samples, 0.19%)</title><rect x="701.5" y="213" width="2.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="704.45" y="223.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (6 samples, 0.14%)</title><rect x="1081.3" y="261" width="1.7" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="1084.28" y="271.5" ></text>
</g>
<g >
<title>`core::contagen_add(gctools::smart_ptr&lt;core::Number_O&gt;, gctools: (115 samples, 2.72%)</title><rect x="777.2" y="277" width="32.1" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="780.20" y="287.5" >`c..</text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (57 samples, 1.35%)</title><rect x="1000.5" y="277" width="15.9" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="1003.51" y="287.5" ></text>
</g>
<g >
<title>`libunwind::CompactUnwinder_x86_64&lt;libunwind::LocalAddressSpace&gt; (2 samples, 0.05%)</title><rect x="705.1" y="213" width="0.5" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="708.09" y="223.5" ></text>
</g>
<g >
<title>`GC_allochblk (39 samples, 0.92%)</title><rect x="463.9" y="213" width="10.9" height="15.0" fill="rgb(232,96,96)" rx="2" ry="2" />
<text  x="466.89" y="223.5" ></text>
</g>
<g >
<title>`GC_clear_stack (1 samples, 0.02%)</title><rect x="567.3" y="245" width="0.3" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="570.30" y="255.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_cl__digit_char_p_Character_spFixnum_sp (1 samples, 0.02%)</title><rect x="534.6" y="309" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="537.60" y="319.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (8 samples, 0.19%)</title><rect x="1116.2" y="309" width="2.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="1119.22" y="319.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_value(core::Symbol_O co (1 samples, 0.02%)</title><rect x="1183.6" y="453" width="0.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="1186.57" y="463.5" ></text>
</g>
<g >
<title>`std::__1::chrono::steady_clock::now() (6 samples, 0.14%)</title><rect x="1090.8" y="325" width="1.7" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1093.78" y="335.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="484.0" y="69" width="0.3" height="15.0" fill="rgb(216,73,73)" rx="2" ry="2" />
<text  x="487.01" y="79.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_cl__gethash_T_spHashTableBase_spT_sp (1 samples, 0.02%)</title><rect x="592.5" y="261" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="595.45" y="271.5" ></text>
</g>
<g >
<title>`core::clasp_expt(gctools::smart_ptr&lt;core::Number_O&gt;, gctools::s (2 samples, 0.05%)</title><rect x="770.5" y="293" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="773.49" y="303.5" ></text>
</g>
<g >
<title>`cm_check_index (4 samples, 0.09%)</title><rect x="582.7" y="293" width="1.1" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="585.67" y="303.5" ></text>
</g>
<g >
<title>`GC_clear_stack (1 samples, 0.02%)</title><rect x="1080.4" y="293" width="0.3" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="1083.44" y="303.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (3 samples, 0.07%)</title><rect x="1041.3" y="229" width="0.9" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="1044.31" y="239.5" ></text>
</g>
<g >
<title>`tiny_size (3 samples, 0.07%)</title><rect x="798.4" y="229" width="0.9" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="801.44" y="239.5" ></text>
</g>
<g >
<title>`CHAR-FLOAT-EXPONENT-MARKER-P^ECLECTOR.READER^FN^^ (2 samples, 0.05%)</title><rect x="301.2" y="325" width="0.6" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="304.23" y="335.5" ></text>
</g>
<g >
<title>`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc (2 samples, 0.05%)</title><rect x="10.3" y="613" width="0.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="13.28" y="623.5" ></text>
</g>
<g >
<title>`core::cl__streamp(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.05%)</title><rect x="1185.2" y="469" width="0.6" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1188.25" y="479.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::keyTest(gctools::smart_ptr&lt;core::T_O&gt;, gc (1 samples, 0.02%)</title><rect x="201.4" y="261" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="204.45" y="271.5" ></text>
</g>
<g >
<title>`core::cl__digit_char_p(gctools::smart_ptr&lt;core::Character_I&gt;, g (14 samples, 0.33%)</title><rect x="933.7" y="293" width="3.9" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="936.71" y="303.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (2 samples, 0.05%)</title><rect x="1180.8" y="437" width="0.5" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="1183.78" y="447.5" ></text>
</g>
<g >
<title>`__cxa_decrement_exception_refcount (8 samples, 0.19%)</title><rect x="1065.9" y="341" width="2.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1068.91" y="351.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.02%)</title><rect x="866.1" y="197" width="0.3" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="869.07" y="207.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.02%)</title><rect x="143.9" y="277" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="146.87" y="287.5" ></text>
</g>
<g >
<title>`tiny_size (3 samples, 0.07%)</title><rect x="886.5" y="277" width="0.8" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="889.48" y="287.5" ></text>
</g>
<g >
<title>`tiny_size (3 samples, 0.07%)</title><rect x="874.7" y="245" width="0.9" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="877.74" y="255.5" ></text>
</g>
<g >
<title>`core::cl__digit_char_p(gctools::smart_ptr&lt;core::Character_I&gt;, g (2 samples, 0.05%)</title><rect x="928.4" y="309" width="0.6" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="931.40" y="319.5" ></text>
</g>
<g >
<title>`core::DoubleFloat_O::as_double_() const (1 samples, 0.02%)</title><rect x="852.1" y="277" width="0.3" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="855.10" y="287.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="1057.2" y="245" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1060.24" y="255.5" ></text>
</g>
<g >
<title>`STREAM-FINISH-OUTPUT^GRAY^((SLIME-OUTPUT-STREAM))^METHOD^^ (15 samples, 0.36%)</title><rect x="13.9" y="917" width="4.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="16.91" y="927.5" ></text>
</g>
<g >
<title>`core::core__logand_2op(gctools::smart_ptr&lt;core::Integer_O&gt;, gct (1 samples, 0.02%)</title><rect x="346.2" y="261" width="0.3" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="349.22" y="271.5" ></text>
</g>
<g >
<title>`wrapped_contagen_add_Number_spNumber_sp (4 samples, 0.09%)</title><rect x="939.3" y="309" width="1.1" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="942.30" y="319.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="1085.5" y="149" width="0.3" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="1088.47" y="159.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (49 samples, 1.16%)</title><rect x="971.7" y="277" width="13.7" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="974.72" y="287.5" ></text>
</g>
<g >
<title>`cc_TLSymbolValue (1 samples, 0.02%)</title><rect x="1129.4" y="373" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1132.35" y="383.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (2 samples, 0.05%)</title><rect x="1117.1" y="293" width="0.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="1120.05" y="303.5" ></text>
</g>
<g >
<title>`free (2 samples, 0.05%)</title><rect x="1066.5" y="325" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1069.47" y="335.5" ></text>
</g>
<g >
<title>`core::General_O::initialize() (4 samples, 0.09%)</title><rect x="94.4" y="261" width="1.1" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="97.41" y="271.5" ></text>
</g>
<g >
<title>`core::cl__unread_char(gctools::smart_ptr&lt;core::Character_I&gt;, gc (16 samples, 0.38%)</title><rect x="1121.8" y="341" width="4.5" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="1124.80" y="351.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (8 samples, 0.19%)</title><rect x="860.8" y="181" width="2.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="863.76" y="191.5" ></text>
</g>
<g >
<title>`wrapped_mp__get_lock_Mutex_spbool (2 samples, 0.05%)</title><rect x="14.8" y="869" width="0.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="17.75" y="879.5" ></text>
</g>
<g >
<title>`core::clos_stream_output_p(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="18.9" y="933" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="21.94" y="943.5" ></text>
</g>
<g >
<title>`__gmp_default_allocate (10 samples, 0.24%)</title><rect x="783.3" y="229" width="2.8" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="786.34" y="239.5" ></text>
</g>
<g >
<title>`cc_landingpadUnwindMatchFrameElseRethrow (8 samples, 0.19%)</title><rect x="903.0" y="309" width="2.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="905.97" y="319.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (7 samples, 0.17%)</title><rect x="1057.0" y="277" width="1.9" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="1059.96" y="287.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (4 samples, 0.09%)</title><rect x="991.3" y="229" width="1.1" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="994.28" y="239.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (3 samples, 0.07%)</title><rect x="141.1" y="245" width="0.8" height="15.0" fill="rgb(213,70,70)" rx="2" ry="2" />
<text  x="144.08" y="255.5" ></text>
</g>
<g >
<title>`rand (3 samples, 0.07%)</title><rect x="492.1" y="245" width="0.9" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="495.12" y="255.5" ></text>
</g>
<g >
<title>`__toupper (3 samples, 0.07%)</title><rect x="511.4" y="261" width="0.8" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="514.40" y="271.5" ></text>
</g>
<g >
<title>`cc_restoreMultipleValue0 (2 samples, 0.05%)</title><rect x="923.1" y="309" width="0.5" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="926.09" y="319.5" ></text>
</g>
<g >
<title>`CHAR-FLOAT-EXPONENT-MARKER-P^ECLECTOR.READER^FN^^ (7 samples, 0.17%)</title><rect x="328.9" y="309" width="2.0" height="15.0" fill="rgb(107,218,218)" rx="2" ry="2" />
<text  x="331.90" y="319.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (14 samples, 0.33%)</title><rect x="1052.5" y="261" width="3.9" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="1055.49" y="271.5" ></text>
</g>
<g >
<title>`CHAR^COMMON-LISP^SETF^^ (6 samples, 0.14%)</title><rect x="410.2" y="277" width="1.7" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="413.23" y="287.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::machHeader() const (1 samples, 0.02%)</title><rect x="693.1" y="181" width="0.2" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="696.07" y="191.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="567.3" y="229" width="0.3" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="570.30" y="239.5" ></text>
</g>
<g >
<title>`mach_timebase_info (1 samples, 0.02%)</title><rect x="904.9" y="261" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="907.92" y="271.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.02%)</title><rect x="842.0" y="229" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="845.04" y="239.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (1 samples, 0.02%)</title><rect x="510.8" y="277" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="513.84" y="287.5" ></text>
</g>
<g >
<title>`__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan (8 samples, 0.19%)</title><rect x="963.9" y="261" width="2.2" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="966.89" y="271.5" ></text>
</g>
<g >
<title>`core::cl__read_char(gctools::smart_ptr&lt;core::T_O&gt;, gctools::sma (176 samples, 4.17%)</title><rect x="241.4" y="309" width="49.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="244.42" y="319.5" >`cor..</text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="1085.5" y="165" width="0.3" height="15.0" fill="rgb(231,96,96)" rx="2" ry="2" />
<text  x="1088.47" y="175.5" ></text>
</g>
<g >
<title>`core::eformat_unread_char(gctools::smart_ptr&lt;core::T_O&gt;, int) (7 samples, 0.17%)</title><rect x="1122.9" y="325" width="2.0" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="1125.92" y="335.5" ></text>
</g>
<g >
<title>`default_zone_free_definite_size (2 samples, 0.05%)</title><rect x="885.4" y="293" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="888.36" y="303.5" ></text>
</g>
<g >
<title>`mach_timebase_info (3 samples, 0.07%)</title><rect x="1059.8" y="277" width="0.8" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1062.76" y="287.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::machHeader() const (2 samples, 0.05%)</title><rect x="752.9" y="197" width="0.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="755.88" y="207.5" ></text>
</g>
<g >
<title>`GC_remove_protection (1 samples, 0.02%)</title><rect x="566.5" y="229" width="0.2" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="569.46" y="239.5" ></text>
</g>
<g >
<title>`core::General_O::initialize() (3 samples, 0.07%)</title><rect x="823.3" y="245" width="0.8" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="826.31" y="255.5" ></text>
</g>
<g >
<title>`core::cl__read(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (4,169 samples, 98.74%)</title><rect x="21.5" y="485" width="1165.1" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="24.46" y="495.5" >`core::cl__read(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt</text>
</g>
<g >
<title>`COERCE-FDESIGNATOR^CORE^FN^^ (8 samples, 0.19%)</title><rect x="373.9" y="293" width="2.2" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="376.89" y="303.5" ></text>
</g>
<g >
<title>`CLASS-OF^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="16.1" y="901" width="0.3" height="15.0" fill="rgb(77,189,189)" rx="2" ry="2" />
<text  x="19.15" y="911.5" ></text>
</g>
<g >
<title>`tiny_size (6 samples, 0.14%)</title><rect x="869.1" y="229" width="1.7" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="872.15" y="239.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (11 samples, 0.26%)</title><rect x="640.8" y="181" width="3.1" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="643.81" y="191.5" ></text>
</g>
<g >
<title>`GC_allochblk (9 samples, 0.21%)</title><rect x="1080.7" y="277" width="2.5" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="1083.72" y="287.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (2 samples, 0.05%)</title><rect x="105.3" y="197" width="0.6" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="108.31" y="207.5" ></text>
</g>
<g >
<title>`GC_is_black_listed (1 samples, 0.02%)</title><rect x="105.0" y="165" width="0.3" height="15.0" fill="rgb(223,83,83)" rx="2" ry="2" />
<text  x="108.03" y="175.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (40 samples, 0.95%)</title><rect x="636.3" y="245" width="11.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="639.33" y="255.5" ></text>
</g>
<g >
<title>`LOGTEST^COMMON-LISP^FN^^ (37 samples, 0.88%)</title><rect x="339.0" y="293" width="10.3" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="341.96" y="303.5" ></text>
</g>
<g >
<title>`wrapped_cl__vector_push_extend_T_spVector_spsize_t (69 samples, 1.63%)</title><rect x="132.1" y="325" width="19.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="135.14" y="335.5" ></text>
</g>
<g >
<title>`core::cl__float(gctools::smart_ptr&lt;core::Real_O&gt;, gctools::smar (28 samples, 0.66%)</title><rect x="615.4" y="261" width="7.8" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="618.37" y="271.5" ></text>
</g>
<g >
<title>`mp::do_start_thread_inner(gctools::smart_ptr&lt;mp::Process_O&gt;, gc (4,222 samples, 100.00%)</title><rect x="10.0" y="1109" width="1180.0" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="13.00" y="1119.5" >`mp::do_start_thread_inner(gctools::smart_ptr&lt;mp::Process_O&gt;, gc</text>
</g>
<g >
<title>`tiny_free_no_lock (3 samples, 0.07%)</title><rect x="799.8" y="229" width="0.9" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="802.83" y="239.5" ></text>
</g>
<g >
<title>`libunwind::CompactUnwinder_x86_64&lt;libunwind::LocalAddressSpace&gt; (4 samples, 0.09%)</title><rect x="1043.8" y="277" width="1.1" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="1046.83" y="287.5" ></text>
</g>
<g >
<title>`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="785.3" y="149" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="788.30" y="159.5" ></text>
</g>
<g >
<title>`__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned  (5 samples, 0.12%)</title><rect x="630.7" y="213" width="1.4" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="633.74" y="223.5" ></text>
</g>
<g >
<title>`__gmpz_add (2 samples, 0.05%)</title><rect x="775.0" y="277" width="0.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="777.96" y="287.5" ></text>
</g>
<g >
<title>`__cxa_end_catch (1 samples, 0.02%)</title><rect x="889.0" y="309" width="0.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="891.99" y="319.5" ></text>
</g>
<g >
<title>`__gmpn_tdiv_qr (1 samples, 0.02%)</title><rect x="786.4" y="213" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="789.42" y="223.5" ></text>
</g>
<g >
<title>`rand (3 samples, 0.07%)</title><rect x="1161.2" y="357" width="0.9" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="1164.21" y="367.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="1137.5" y="389" width="0.2" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="1140.46" y="399.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleCharacterString_O, int, (5 samples, 0.12%)</title><rect x="584.3" y="293" width="1.4" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="587.35" y="303.5" ></text>
</g>
<g >
<title>`cc_enclose (251 samples, 5.95%)</title><rect x="425.3" y="277" width="70.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="428.32" y="287.5" >`cc_enc..</text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="703.7" y="229" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="706.69" y="239.5" ></text>
</g>
<g >
<title>`clock_gettime_nsec_np (6 samples, 0.14%)</title><rect x="762.9" y="245" width="1.7" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="765.94" y="255.5" ></text>
</g>
<g >
<title>`tiny_size (4 samples, 0.09%)</title><rect x="847.6" y="245" width="1.1" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="850.63" y="255.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="630.5" y="181" width="0.2" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="633.46" y="191.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="558.1" y="101" width="0.3" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="561.08" y="111.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="240.6" y="325" width="0.3" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="243.58" y="335.5" ></text>
</g>
<g >
<title>`szone_size (1 samples, 0.02%)</title><rect x="802.9" y="245" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="805.91" y="255.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$__toupper (1 samples, 0.02%)</title><rect x="511.1" y="261" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="514.12" y="271.5" ></text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (1 samples, 0.02%)</title><rect x="18.4" y="933" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="21.38" y="943.5" ></text>
</g>
<g >
<title>`wrapped_core__make_vector_T_sp_________________________________ (1 samples, 0.02%)</title><rect x="108.1" y="309" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="111.10" y="319.5" ></text>
</g>
<g >
<title>`UPGRADED-ARRAY-ELEMENT-TYPE^COMMON-LISP^FN^^ (52 samples, 1.23%)</title><rect x="109.5" y="325" width="14.5" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="112.50" y="335.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (18 samples, 0.43%)</title><rect x="1080.7" y="293" width="5.1" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="1083.72" y="303.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (1 samples, 0.02%)</title><rect x="352.9" y="277" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="355.93" y="287.5" ></text>
</g>
<g >
<title>`mp::do_start_thread_inner(gctools::smart_ptr&lt;mp::Process_O&gt;, gc (4,222 samples, 100.00%)</title><rect x="10.0" y="1077" width="1180.0" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="13.00" y="1087.5" >`mp::do_start_thread_inner(gctools::smart_ptr&lt;mp::Process_O&gt;, gc</text>
</g>
<g >
<title>`core::lisp_true() (1 samples, 0.02%)</title><rect x="509.7" y="277" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="512.73" y="287.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.05%)</title><rect x="828.1" y="213" width="0.5" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="831.06" y="223.5" ></text>
</g>
<g >
<title>`__gmpz_add_ui (1 samples, 0.02%)</title><rect x="815.8" y="245" width="0.2" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="818.77" y="255.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eq(core::HashGenerator&amp;, gctools::sma (5 samples, 0.12%)</title><rect x="595.8" y="229" width="1.4" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="598.81" y="239.5" ></text>
</g>
<g >
<title>`unw_get_reg (1 samples, 0.02%)</title><rect x="1056.4" y="293" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="1059.40" y="303.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (2 samples, 0.05%)</title><rect x="665.7" y="197" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="668.68" y="207.5" ></text>
</g>
<g >
<title>`INTERPRET-DIRECTIVE-LIST^CORE^FN^^ (2 samples, 0.05%)</title><rect x="10.3" y="453" width="0.5" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="13.28" y="463.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (7 samples, 0.17%)</title><rect x="701.7" y="181" width="2.0" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="704.73" y="191.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$cc_setTLSymbolValue (1 samples, 0.02%)</title><rect x="47.2" y="389" width="0.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="50.17" y="399.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="1085.5" y="133" width="0.3" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="1088.47" y="143.5" ></text>
</g>
<g >
<title>`mp::do_start_thread_inner(gctools::smart_ptr&lt;mp::Process_O&gt;, gc (4,222 samples, 100.00%)</title><rect x="10.0" y="1093" width="1180.0" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="13.00" y="1103.5" >`mp::do_start_thread_inner(gctools::smart_ptr&lt;mp::Process_O&gt;, gc</text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::HashTableEql_O&gt; gctools::GCObjectAppro (14 samples, 0.33%)</title><rect x="1157.3" y="357" width="3.9" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="1160.30" y="367.5" ></text>
</g>
<g >
<title>`__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan (14 samples, 0.33%)</title><rect x="1022.3" y="245" width="3.9" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="1025.31" y="255.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="1124.6" y="309" width="0.3" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="1127.60" y="319.5" ></text>
</g>
<g >
<title>`GC_install_header (1 samples, 0.02%)</title><rect x="1158.1" y="261" width="0.3" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="1161.14" y="271.5" ></text>
</g>
<g >
<title>`core::Rational_O::create(__gmp_expr&lt;__mpz_struct [1], __mpz_str (76 samples, 1.80%)</title><rect x="780.5" y="261" width="21.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="783.55" y="271.5" >`..</text>
</g>
<g >
<title>`GC_malloc_kind (5 samples, 0.12%)</title><rect x="789.2" y="229" width="1.4" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="792.21" y="239.5" ></text>
</g>
<g >
<title>`TERMINATE-TOKEN^ECLECTOR.READER^FN^^ (2,734 samples, 64.76%)</title><rect x="297.9" y="341" width="764.1" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="300.87" y="351.5" >`TERMINATE-TOKEN^ECLECTOR.READER^FN^^</text>
</g>
<g >
<title>`_dyld_find_unwind_sections (15 samples, 0.36%)</title><rect x="640.2" y="213" width="4.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="643.25" y="223.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (1 samples, 0.02%)</title><rect x="117.9" y="309" width="0.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="120.88" y="319.5" ></text>
</g>
<g >
<title>`wrapped_cl__char_upcase_Character_sp (2 samples, 0.05%)</title><rect x="530.1" y="293" width="0.6" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="533.13" y="303.5" ></text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (9 samples, 0.21%)</title><rect x="1174.9" y="421" width="2.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="1177.91" y="431.5" ></text>
</g>
<g >
<title>`GC_get_first_part (1 samples, 0.02%)</title><rect x="141.1" y="197" width="0.3" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="144.08" y="207.5" ></text>
</g>
<g >
<title>`unw_init_local (27 samples, 0.64%)</title><rect x="709.0" y="229" width="7.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="712.00" y="239.5" ></text>
</g>
<g >
<title>`SLOT-VALUE^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="16.7" y="901" width="1.1" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="19.71" y="911.5" ></text>
</g>
<g >
<title>`core::HashGenerator::rawhash() const (1 samples, 0.02%)</title><rect x="116.2" y="261" width="0.3" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="119.21" y="271.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.02%)</title><rect x="141.1" y="213" width="0.3" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="144.08" y="223.5" ></text>
</g>
<g >
<title>`__gmpz_realloc (1 samples, 0.02%)</title><rect x="780.3" y="261" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="783.27" y="271.5" ></text>
</g>
<g >
<title>`CALL-WITH-BINDINGS^SWANK^FN^^ (4,188 samples, 99.19%)</title><rect x="19.2" y="933" width="1170.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="22.22" y="943.5" >`CALL-WITH-BINDINGS^SWANK^FN^^</text>
</g>
<g >
<title>`wrapped_contagen_mul_Number_spNumber_sp (43 samples, 1.02%)</title><rect x="941.0" y="309" width="12.0" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="943.98" y="319.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="329.5" y="277" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="332.46" y="287.5" ></text>
</g>
<g >
<title>`LOGAND-2OP^CORE^FN^^ (2 samples, 0.05%)</title><rect x="338.4" y="293" width="0.6" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="341.40" y="303.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.02%)</title><rect x="494.6" y="261" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="497.63" y="271.5" ></text>
</g>
<g >
<title>`core::MDArray_O::vectorPushExtend(gctools::smart_ptr&lt;core::T_O&gt; (2 samples, 0.05%)</title><rect x="125.7" y="325" width="0.6" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="128.71" y="335.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.02%)</title><rect x="495.2" y="261" width="0.3" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="498.19" y="271.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (19 samples, 0.45%)</title><rect x="911.4" y="293" width="5.3" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="914.35" y="303.5" ></text>
</g>
<g >
<title>`GC_allochblk (10 samples, 0.24%)</title><rect x="1147.5" y="229" width="2.8" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="1150.52" y="239.5" ></text>
</g>
<g >
<title>`CHAR-UPCASE^COMMON-LISP^FN^^ (3 samples, 0.07%)</title><rect x="372.5" y="293" width="0.8" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="375.50" y="303.5" ></text>
</g>
<g >
<title>`SIMPLE-EVAL^CLASP-CLEAVIR^FN^^ (4,188 samples, 99.19%)</title><rect x="19.2" y="581" width="1170.5" height="15.0" fill="rgb(66,180,180)" rx="2" ry="2" />
<text  x="22.22" y="591.5" >`SIMPLE-EVAL^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`GC_build_fl (32 samples, 0.76%)</title><rect x="474.8" y="213" width="8.9" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="477.79" y="223.5" ></text>
</g>
<g >
<title>`_Unwind_GetIP (2 samples, 0.05%)</title><rect x="1023.4" y="229" width="0.6" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="1026.42" y="239.5" ></text>
</g>
<g >
<title>`GC_install_counts (1 samples, 0.02%)</title><rect x="1150.0" y="197" width="0.3" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="1153.03" y="207.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="1085.5" y="117" width="0.3" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="1088.47" y="127.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (2 samples, 0.05%)</title><rect x="592.7" y="261" width="0.6" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="595.73" y="271.5" ></text>
</g>
<g >
<title>`GC_allochblk (6 samples, 0.14%)</title><rect x="894.9" y="245" width="1.6" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="897.86" y="255.5" ></text>
</g>
<g >
<title>`GC_allochblk (12 samples, 0.28%)</title><rect x="553.0" y="229" width="3.4" height="15.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text  x="556.05" y="239.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.05%)</title><rect x="509.2" y="261" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="512.17" y="271.5" ></text>
</g>
<g >
<title>`__error (7 samples, 0.17%)</title><rect x="65.6" y="245" width="2.0" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="68.62" y="255.5" ></text>
</g>
<g >
<title>`core::lisp_true() (1 samples, 0.02%)</title><rect x="515.6" y="261" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="518.59" y="271.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_value(core::Symbol_O co (3 samples, 0.07%)</title><rect x="1169.3" y="421" width="0.9" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="1172.32" y="431.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (12 samples, 0.28%)</title><rect x="292.0" y="309" width="3.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="295.00" y="319.5" ></text>
</g>
<g >
<title>`__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned  (1 samples, 0.02%)</title><rect x="965.9" y="245" width="0.2" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="968.85" y="255.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_eql_List_sp (2 samples, 0.05%)</title><rect x="122.4" y="309" width="0.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="125.35" y="319.5" ></text>
</g>
<g >
<title>`RETURN-FLOAT^ECLECTOR.READER^FN^^ (1,058 samples, 25.06%)</title><rect x="586.9" y="309" width="295.7" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="589.86" y="319.5" >`RETURN-FLOAT^ECLECTOR.READER^FN^^</text>
</g>
<g >
<title>`unw_get_reg (1 samples, 0.02%)</title><rect x="665.4" y="197" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="668.40" y="207.5" ></text>
</g>
<g >
<title>`GC_build_fl (1 samples, 0.02%)</title><rect x="1098.6" y="293" width="0.3" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="1101.61" y="303.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleVector_int16_t_O, short (1 samples, 0.02%)</title><rect x="881.7" y="277" width="0.3" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="884.72" y="287.5" ></text>
</g>
<g >
<title>`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc (2 samples, 0.05%)</title><rect x="10.3" y="661" width="0.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="13.28" y="671.5" ></text>
</g>
<g >
<title>`clock_gettime_nsec_np (1 samples, 0.02%)</title><rect x="766.9" y="261" width="0.2" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="769.85" y="271.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (5 samples, 0.12%)</title><rect x="1016.4" y="277" width="1.4" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1019.44" y="287.5" ></text>
</g>
<g >
<title>`core::core__open_stream_pSTAR(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="18.7" y="949" width="0.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="21.66" y="959.5" ></text>
</g>
<g >
<title>`GC_allochblk (2 samples, 0.05%)</title><rect x="104.7" y="197" width="0.6" height="15.0" fill="rgb(210,64,64)" rx="2" ry="2" />
<text  x="107.75" y="207.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (3 samples, 0.07%)</title><rect x="137.7" y="277" width="0.9" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="140.73" y="287.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (3,860 samples, 91.43%)</title><rect x="49.7" y="373" width="1078.8" height="15.0" fill="rgb(107,217,217)" rx="2" ry="2" />
<text  x="52.69" y="383.5" >`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^</text>
</g>
<g >
<title>`mp::do_start_thread_inner(gctools::smart_ptr&lt;mp::Process_O&gt;, gc (4,222 samples, 100.00%)</title><rect x="10.0" y="1125" width="1180.0" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="13.00" y="1135.5" >`mp::do_start_thread_inner(gctools::smart_ptr&lt;mp::Process_O&gt;, gc</text>
</g>
<g >
<title>`_pthread_body (4,222 samples, 100.00%)</title><rect x="10.0" y="1221" width="1180.0" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="13.00" y="1231.5" >`_pthread_body</text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (1 samples, 0.02%)</title><rect x="1116.8" y="293" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1119.77" y="303.5" ></text>
</g>
<g >
<title>`std::__1::chrono::steady_clock::now() (20 samples, 0.47%)</title><rect x="761.5" y="277" width="5.6" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="764.54" y="287.5" ></text>
</g>
<g >
<title>`__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan (6 samples, 0.14%)</title><rect x="698.4" y="213" width="1.7" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="701.38" y="223.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (14 samples, 0.33%)</title><rect x="99.2" y="229" width="3.9" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="102.16" y="239.5" ></text>
</g>
<g >
<title>`CCLASP-EVAL^CLASP-CLEAVIR^FN^^ (4,188 samples, 99.19%)</title><rect x="19.2" y="773" width="1170.5" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="22.22" y="783.5" >`CCLASP-EVAL^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc (2 samples, 0.05%)</title><rect x="10.3" y="885" width="0.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="13.28" y="895.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="568.4" y="277" width="0.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="571.42" y="287.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$cc_rewind_va_list (1 samples, 0.02%)</title><rect x="41.9" y="421" width="0.2" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="44.86" y="431.5" ></text>
</g>
<g >
<title>`libunwind::CompactUnwinder_x86_64&lt;libunwind::LocalAddressSpace&gt; (1 samples, 0.02%)</title><rect x="671.8" y="245" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="674.83" y="255.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setup(unsigned int, gctools::smart_ptr&lt;core: (44 samples, 1.04%)</title><rect x="1143.9" y="357" width="12.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1146.88" y="367.5" ></text>
</g>
<g >
<title>`DO-TIME^CORE^FN^^ (4,188 samples, 99.19%)</title><rect x="19.2" y="549" width="1170.5" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="22.22" y="559.5" >`DO-TIME^CORE^FN^^</text>
</g>
<g >
<title>`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc (2 samples, 0.05%)</title><rect x="10.3" y="677" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="13.28" y="687.5" ></text>
</g>
<g >
<title>`COERCE^COMMON-LISP^FN^^ (5 samples, 0.12%)</title><rect x="366.1" y="309" width="1.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="369.07" y="319.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (4 samples, 0.09%)</title><rect x="854.9" y="197" width="1.1" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="857.89" y="207.5" ></text>
</g>
<g >
<title>`cc_initialize_closure (7 samples, 0.17%)</title><rect x="496.9" y="277" width="1.9" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="499.87" y="287.5" ></text>
</g>
<g >
<title>`core::clasp_gcd(gctools::smart_ptr&lt;core::Integer_O&gt;, gctools::s (4 samples, 0.09%)</title><rect x="835.9" y="229" width="1.1" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="838.89" y="239.5" ></text>
</g>
<g >
<title>`core::cl__vector_push_extend(gctools::smart_ptr&lt;core::T_O&gt;, gct (6 samples, 0.14%)</title><rect x="144.4" y="309" width="1.7" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="147.43" y="319.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="635.8" y="197" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="638.77" y="207.5" ></text>
</g>
<g >
<title>`GC_build_fl (5 samples, 0.12%)</title><rect x="914.7" y="261" width="1.4" height="15.0" fill="rgb(202,54,54)" rx="2" ry="2" />
<text  x="917.70" y="271.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (2 samples, 0.05%)</title><rect x="691.1" y="229" width="0.6" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="694.11" y="239.5" ></text>
</g>
<g >
<title>`core::StrWNs_O::make(unsigned long, int, bool, gctools::smart_p (1 samples, 0.02%)</title><rect x="10.8" y="885" width="0.3" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="13.84" y="895.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (1 samples, 0.02%)</title><rect x="1183.3" y="453" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="1186.29" y="463.5" ></text>
</g>
<g >
<title>`MAKE-STRING-OUTPUT-STREAM^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="10.8" y="933" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="13.84" y="943.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="1119.6" y="357" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="1122.57" y="367.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.02%)</title><rect x="837.3" y="229" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="840.29" y="239.5" ></text>
</g>
<g >
<title>`rand (2 samples, 0.05%)</title><rect x="1087.7" y="309" width="0.6" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1090.71" y="319.5" ></text>
</g>
<g >
<title>`core::input_stream_read_byte8(gctools::smart_ptr&lt;core::T_O&gt;, un (107 samples, 2.53%)</title><rect x="249.5" y="261" width="29.9" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="252.52" y="271.5" >`c..</text>
</g>
<g >
<title>`GC_clear_stack_inner (2 samples, 0.05%)</title><rect x="916.1" y="181" width="0.6" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="919.10" y="191.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (13 samples, 0.31%)</title><rect x="632.4" y="213" width="3.7" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="635.42" y="223.5" ></text>
</g>
<g >
<title>`core::cl__output_stream_p(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="18.9" y="949" width="0.3" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="21.94" y="959.5" ></text>
</g>
<g >
<title>`SYNTAX-TYPE^CORE^FN^^ (5 samples, 0.12%)</title><rect x="179.1" y="325" width="1.4" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="182.09" y="335.5" ></text>
</g>
<g >
<title>`core::utf_8_encoder(gctools::smart_ptr&lt;core::T_O&gt;, unsigned cha (1 samples, 0.02%)</title><rect x="1124.9" y="325" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="1127.88" y="335.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="880.9" y="229" width="0.3" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="883.89" y="239.5" ></text>
</g>
<g >
<title>`core::log_operation_2op(core::boole_ops, gctools::smart_ptr&lt;cor (10 samples, 0.24%)</title><rect x="346.5" y="261" width="2.8" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="349.50" y="271.5" ></text>
</g>
<g >
<title>`CALL-WITH-BUFFER-SYNTAX^SWANK^FN^^ (4,188 samples, 99.19%)</title><rect x="19.2" y="693" width="1170.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="22.22" y="703.5" >`CALL-WITH-BUFFER-SYNTAX^SWANK^FN^^</text>
</g>
<g >
<title>`LOGTEST^COMMON-LISP^FN^^ (6 samples, 0.14%)</title><rect x="540.2" y="309" width="1.7" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="543.19" y="319.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (2 samples, 0.05%)</title><rect x="238.3" y="309" width="0.6" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="241.34" y="319.5" ></text>
</g>
<g >
<title>`core::cl__streamp(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.05%)</title><rect x="1185.8" y="453" width="0.6" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="1188.81" y="463.5" ></text>
</g>
<g >
<title>`free (7 samples, 0.17%)</title><rect x="868.9" y="245" width="1.9" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="871.87" y="255.5" ></text>
</g>
<g >
<title>`std::__1::chrono::steady_clock::now() (3 samples, 0.07%)</title><rect x="772.4" y="293" width="0.9" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="775.44" y="303.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (2 samples, 0.05%)</title><rect x="957.2" y="325" width="0.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="960.19" y="335.5" ></text>
</g>
<g >
<title>`gctools::GCObjectDefaultConstructorAllocator&lt;core::DoubleFloat_ (13 samples, 0.31%)</title><rect x="619.3" y="245" width="3.6" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="622.28" y="255.5" ></text>
</g>
<g >
<title>`wrapped_cl__hash_table_count_HashTableBase_sp (1 samples, 0.02%)</title><rect x="1181.3" y="437" width="0.3" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="1184.34" y="447.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (2 samples, 0.05%)</title><rect x="916.1" y="213" width="0.6" height="15.0" fill="rgb(228,92,92)" rx="2" ry="2" />
<text  x="919.10" y="223.5" ></text>
</g>
<g >
<title>`cm_check_index (2 samples, 0.05%)</title><rect x="925.6" y="309" width="0.6" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="928.60" y="319.5" ></text>
</g>
<g >
<title>`__gmpz_init_set_si (3 samples, 0.07%)</title><rect x="856.8" y="261" width="0.9" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="859.85" y="271.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="544.4" y="261" width="0.3" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="547.38" y="271.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (12 samples, 0.28%)</title><rect x="235.0" y="309" width="3.3" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="237.99" y="319.5" ></text>
</g>
<g >
<title>`core::interpreter_lookup_function_or_error(gctools::smart_ptr&lt;c (1 samples, 0.02%)</title><rect x="1186.4" y="469" width="0.2" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1189.37" y="479.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.02%)</title><rect x="1182.2" y="453" width="0.3" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="1185.17" y="463.5" ></text>
</g>
<g >
<title>`GC_allocobj (1 samples, 0.02%)</title><rect x="1146.7" y="277" width="0.3" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="1149.68" y="287.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (12 samples, 0.28%)</title><rect x="632.4" y="197" width="3.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="635.42" y="207.5" ></text>
</g>
<g >
<title>`__cxa_end_catch (1 samples, 0.02%)</title><rect x="958.6" y="325" width="0.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="961.58" y="335.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (2 samples, 0.05%)</title><rect x="1144.2" y="341" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="1147.16" y="351.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (4 samples, 0.09%)</title><rect x="991.3" y="245" width="1.1" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="994.28" y="255.5" ></text>
</g>
<g >
<title>`core::Ratio_O::create(gctools::smart_ptr&lt;core::Integer_O&gt;, gcto (2 samples, 0.05%)</title><rect x="814.9" y="261" width="0.6" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="817.93" y="271.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleCharacterString_O, int, (1 samples, 0.02%)</title><rect x="411.3" y="229" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="414.35" y="239.5" ></text>
</g>
<g >
<title>`std::__1::chrono::steady_clock::now() (7 samples, 0.17%)</title><rect x="903.2" y="293" width="2.0" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="906.24" y="303.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (1 samples, 0.02%)</title><rect x="959.4" y="325" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="962.42" y="335.5" ></text>
</g>
<g >
<title>`RECEIVE-IF^SWANK/BACKEND^FN^^ (11 samples, 0.26%)</title><rect x="10.3" y="949" width="3.1" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="13.28" y="959.5" ></text>
</g>
<g >
<title>`__read_nocancel (1 samples, 0.02%)</title><rect x="258.2" y="197" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="261.19" y="207.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="607.8" y="261" width="0.3" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="610.83" y="271.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.07%)</title><rect x="112.3" y="277" width="0.8" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="115.29" y="287.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (3 samples, 0.07%)</title><rect x="1158.4" y="293" width="0.9" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1161.42" y="303.5" ></text>
</g>
<g >
<title>`SYMBOLP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="609.8" y="261" width="0.3" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="612.78" y="271.5" ></text>
</g>
<g >
<title>`mp::start_thread(void*) (4,222 samples, 100.00%)</title><rect x="10.0" y="1173" width="1180.0" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="13.00" y="1183.5" >`mp::start_thread(void*)</text>
</g>
<g >
<title>`GC_malloc (11 samples, 0.26%)</title><rect x="427.0" y="261" width="3.1" height="15.0" fill="rgb(225,87,87)" rx="2" ry="2" />
<text  x="430.00" y="271.5" ></text>
</g>
<g >
<title>`__gmpz_init (1 samples, 0.02%)</title><rect x="856.6" y="261" width="0.2" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="859.57" y="271.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (7 samples, 0.17%)</title><rect x="553.9" y="213" width="1.9" height="15.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="556.88" y="223.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (2 samples, 0.05%)</title><rect x="665.7" y="181" width="0.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="668.68" y="191.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="278.9" y="229" width="0.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="281.87" y="239.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="359.4" y="293" width="0.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="362.36" y="303.5" ></text>
</g>
<g >
<title>`HASH-TABLE-COUNT^COMMON-LISP^FN^^ (2 samples, 0.05%)</title><rect x="25.9" y="437" width="0.6" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="28.93" y="447.5" ></text>
</g>
<g >
<title>`core::General_O::initialize() (4 samples, 0.09%)</title><rect x="1107.3" y="341" width="1.1" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="1110.27" y="351.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (4 samples, 0.09%)</title><rect x="620.4" y="229" width="1.1" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="623.40" y="239.5" ></text>
</g>
<g >
<title>`core::cl__char_code(gctools::smart_ptr&lt;core::Character_I&gt;) (2 samples, 0.05%)</title><rect x="358.0" y="293" width="0.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="360.96" y="303.5" ></text>
</g>
<g >
<title>`wrapped_contagen_div_Number_spNumber_sp (148 samples, 3.51%)</title><rect x="809.9" y="293" width="41.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="812.90" y="303.5" >`wr..</text>
</g>
<g >
<title>`READ-BIG-FILE-OF-FLOAT^COMMON-LISP-USER^FN^^ (4,183 samples, 99.08%)</title><rect x="19.5" y="517" width="1169.1" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="22.50" y="527.5" >`READ-BIG-FILE-OF-FLOAT^COMMON-LISP-USER^FN^^</text>
</g>
<g >
<title>`core::lisp_true() (3 samples, 0.07%)</title><rect x="1174.1" y="405" width="0.8" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="1177.07" y="415.5" ></text>
</g>
<g >
<title>`PROGV-LAMBDA^CORE^FN^^.43 (2 samples, 0.05%)</title><rect x="10.3" y="533" width="0.5" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="13.28" y="543.5" ></text>
</g>
<g >
<title>`default_zone_realloc (1 samples, 0.02%)</title><rect x="781.7" y="197" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="784.67" y="207.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::set_thread_local_value(gctools::smar (1 samples, 0.02%)</title><rect x="1130.2" y="373" width="0.3" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="1133.19" y="383.5" ></text>
</g>
<g >
<title>`LISTENER-EVAL^SWANK-REPL^FN^^ (4,188 samples, 99.19%)</title><rect x="19.2" y="725" width="1170.5" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="22.22" y="735.5" >`LISTENER-EVAL^SWANK-REPL^FN^^</text>
</g>
<g >
<title>`_dyld_find_unwind_sections (3 samples, 0.07%)</title><rect x="1057.2" y="261" width="0.9" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1060.24" y="271.5" ></text>
</g>
<g >
<title>`mach_absolute_time (2 samples, 0.05%)</title><rect x="1059.2" y="261" width="0.6" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="1062.20" y="271.5" ></text>
</g>
<g >
<title>`GC_is_black_listed (1 samples, 0.02%)</title><rect x="1083.0" y="261" width="0.2" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="1085.96" y="271.5" ></text>
</g>
<g >
<title>`core::Rational_O::create(__gmp_expr&lt;__mpz_struct [1], __mpz_str (114 samples, 2.70%)</title><rect x="815.5" y="261" width="31.8" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="818.49" y="271.5" >`c..</text>
</g>
<g >
<title>`wrapped_core__syntax_type_T_spCharacter_sp (2 samples, 0.05%)</title><rect x="1128.0" y="357" width="0.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="1130.95" y="367.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="918.1" y="293" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="921.06" y="303.5" ></text>
</g>
<g >
<title>`__gmpz_clear (1 samples, 0.02%)</title><rect x="856.3" y="261" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="859.29" y="271.5" ></text>
</g>
<g >
<title>`core::core__syntax_type(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (1 samples, 0.02%)</title><rect x="1114.0" y="341" width="0.3" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="1116.98" y="351.5" ></text>
</g>
<g >
<title>`__gmpz_add_ui (1 samples, 0.02%)</title><rect x="782.5" y="245" width="0.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="785.51" y="255.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (5 samples, 0.12%)</title><rect x="921.7" y="309" width="1.4" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="924.69" y="319.5" ></text>
</g>
<g >
<title>`VREF^CORE^FN^^ (5 samples, 0.12%)</title><rect x="423.1" y="277" width="1.4" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="426.08" y="287.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="790.6" y="229" width="0.3" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="793.61" y="239.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (2 samples, 0.05%)</title><rect x="678.0" y="181" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="680.98" y="191.5" ></text>
</g>
<g >
<title>`default_zone_free_definite_size (1 samples, 0.02%)</title><rect x="797.3" y="245" width="0.3" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="800.32" y="255.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (20 samples, 0.47%)</title><rect x="698.1" y="229" width="5.6" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="701.10" y="239.5" ></text>
</g>
<g >
<title>`DOUBLE-FLOAT-P^CORE^FN^^ (2 samples, 0.05%)</title><rect x="607.3" y="261" width="0.5" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="610.27" y="271.5" ></text>
</g>
<g >
<title>`core::clasp_to_mpz(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.05%)</title><rect x="853.2" y="277" width="0.6" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="856.22" y="287.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (80 samples, 1.89%)</title><rect x="724.7" y="261" width="22.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="727.65" y="271.5" >`..</text>
</g>
<g >
<title>`INTERPRET-DIRECTIVE-LIST^CORE^FN^^ (1 samples, 0.02%)</title><rect x="10.6" y="405" width="0.2" height="15.0" fill="rgb(71,184,184)" rx="2" ry="2" />
<text  x="13.56" y="415.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (27 samples, 0.64%)</title><rect x="640.0" y="229" width="7.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="642.97" y="239.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.02%)</title><rect x="837.6" y="229" width="0.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="840.57" y="239.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.05%)</title><rect x="922.5" y="293" width="0.6" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="925.53" y="303.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (5 samples, 0.12%)</title><rect x="421.7" y="245" width="1.4" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="424.69" y="255.5" ></text>
</g>
<g >
<title>`tiny_malloc_from_free_list (3 samples, 0.07%)</title><rect x="654.2" y="181" width="0.9" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="657.22" y="191.5" ></text>
</g>
<g >
<title>`wrapped_cl__list_T_sp (1 samples, 0.02%)</title><rect x="1173.8" y="421" width="0.3" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="1176.79" y="431.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.02%)</title><rect x="1158.1" y="309" width="0.3" height="15.0" fill="rgb(225,86,86)" rx="2" ry="2" />
<text  x="1161.14" y="319.5" ></text>
</g>
<g >
<title>`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc (2 samples, 0.05%)</title><rect x="10.3" y="741" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="13.28" y="751.5" ></text>
</g>
<g >
<title>`__cxa_end_catch (1 samples, 0.02%)</title><rect x="1119.3" y="357" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1122.29" y="367.5" ></text>
</g>
<g >
<title>`cm_vref (1 samples, 0.02%)</title><rect x="583.8" y="293" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="586.79" y="303.5" ></text>
</g>
<g >
<title>`funlockfile (34 samples, 0.81%)</title><rect x="268.0" y="229" width="9.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="270.97" y="239.5" ></text>
</g>
<g >
<title>`__gmpz_clear (1 samples, 0.02%)</title><rect x="775.5" y="277" width="0.3" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="778.52" y="287.5" ></text>
</g>
<g >
<title>`tiny_malloc_from_free_list (2 samples, 0.05%)</title><rect x="862.4" y="149" width="0.6" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="865.44" y="159.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (2 samples, 0.05%)</title><rect x="705.9" y="181" width="0.6" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="708.93" y="191.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="858.2" y="245" width="0.3" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="861.25" y="255.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (9 samples, 0.21%)</title><rect x="486.2" y="245" width="2.6" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="489.25" y="255.5" ></text>
</g>
<g >
<title>`pthread_getspecific (3 samples, 0.07%)</title><rect x="1086.9" y="309" width="0.8" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1089.87" y="319.5" ></text>
</g>
<g >
<title>`tlv_get_addr (12 samples, 0.28%)</title><rect x="918.3" y="293" width="3.4" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="921.34" y="303.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (14 samples, 0.33%)</title><rect x="986.5" y="245" width="3.9" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="989.53" y="255.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.02%)</title><rect x="780.5" y="245" width="0.3" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="783.55" y="255.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (3 samples, 0.07%)</title><rect x="1166.2" y="421" width="0.9" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1169.24" y="431.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (5 samples, 0.12%)</title><rect x="731.9" y="197" width="1.4" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="734.92" y="207.5" ></text>
</g>
<g >
<title>`core::cl__streamp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="242.0" y="293" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="244.98" y="303.5" ></text>
</g>
<g >
<title>`FORCE-OUTPUT^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="1189.7" y="981" width="0.3" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="1192.72" y="991.5" ></text>
</g>
<g >
<title>`__cxa_get_globals (3 samples, 0.07%)</title><rect x="716.5" y="261" width="0.9" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="719.55" y="271.5" ></text>
</g>
<g >
<title>`wrapped_cl__open_stream_p_T_sp (1 samples, 0.02%)</title><rect x="18.7" y="965" width="0.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="21.66" y="975.5" ></text>
</g>
<g >
<title>`__gmpz_cmp_si (2 samples, 0.05%)</title><rect x="787.0" y="245" width="0.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="789.98" y="255.5" ></text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (1 samples, 0.02%)</title><rect x="531.2" y="293" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="534.25" y="303.5" ></text>
</g>
<g >
<title>`core::StrWNs_O::make(unsigned long, int, bool, gctools::smart_p (44 samples, 1.04%)</title><rect x="95.5" y="261" width="12.3" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="98.52" y="271.5" ></text>
</g>
<g >
<title>`mach_absolute_time (2 samples, 0.05%)</title><rect x="763.2" y="229" width="0.6" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="766.22" y="239.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (4 samples, 0.09%)</title><rect x="991.3" y="261" width="1.1" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="994.28" y="271.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eql(core::HashGenerator&amp;, gctools::sm (1 samples, 0.02%)</title><rect x="116.5" y="261" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="119.49" y="271.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (2 samples, 0.05%)</title><rect x="630.2" y="197" width="0.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="633.18" y="207.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (2 samples, 0.05%)</title><rect x="1117.9" y="293" width="0.6" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="1120.89" y="303.5" ></text>
</g>
<g >
<title>`core::interpreter_lookup_function_or_error(gctools::smart_ptr&lt;c (7 samples, 0.17%)</title><rect x="1186.6" y="485" width="2.0" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="1189.65" y="495.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (3 samples, 0.07%)</title><rect x="483.7" y="181" width="0.9" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="486.73" y="191.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (70 samples, 1.66%)</title><rect x="1069.8" y="325" width="19.6" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="1072.82" y="335.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (21 samples, 0.50%)</title><rect x="710.4" y="165" width="5.9" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="713.40" y="175.5" ></text>
</g>
<g >
<title>`wrapped_cl__zerop_Number_sp (6 samples, 0.14%)</title><rect x="344.5" y="277" width="1.7" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="347.55" y="287.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (18 samples, 0.43%)</title><rect x="692.2" y="213" width="5.1" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="695.23" y="223.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (1 samples, 0.02%)</title><rect x="1025.9" y="229" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="1028.94" y="239.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="899.3" y="277" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="902.33" y="287.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (3 samples, 0.07%)</title><rect x="1085.8" y="309" width="0.8" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="1088.75" y="319.5" ></text>
</g>
<g >
<title>`_pthread_mutex_firstfit_unlock_slow (28 samples, 0.66%)</title><rect x="268.8" y="213" width="7.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="271.81" y="223.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__malloc_with_fallback(unsigned long) (14 samples, 0.33%)</title><rect x="651.4" y="261" width="3.9" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="654.43" y="271.5" ></text>
</g>
<g >
<title>`core::cl__zerop(gctools::smart_ptr&lt;core::Number_O&gt;) (3 samples, 0.07%)</title><rect x="342.3" y="277" width="0.9" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="345.31" y="287.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (5 samples, 0.12%)</title><rect x="508.3" y="277" width="1.4" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="511.33" y="287.5" ></text>
</g>
<g >
<title>`VECTOR-PUSH-EXTEND^COMMON-LISP^FN^^ (7 samples, 0.17%)</title><rect x="1063.4" y="341" width="1.9" height="15.0" fill="rgb(51,166,166)" rx="2" ry="2" />
<text  x="1066.39" y="351.5" ></text>
</g>
<g >
<title>`tlv_get_addr (4 samples, 0.09%)</title><rect x="1088.3" y="309" width="1.1" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="1091.27" y="319.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="558.1" y="149" width="0.3" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="561.08" y="159.5" ></text>
</g>
<g >
<title>`MAKE-ARRAY^COMMON-LISP^FN^^ (3 samples, 0.07%)</title><rect x="56.4" y="357" width="0.8" height="15.0" fill="rgb(108,219,219)" rx="2" ry="2" />
<text  x="59.40" y="367.5" ></text>
</g>
<g >
<title>`__gmpz_init_set_si (1 samples, 0.02%)</title><rect x="779.2" y="261" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="782.15" y="271.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.05%)</title><rect x="1103.9" y="325" width="0.6" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="1106.92" y="335.5" ></text>
</g>
<g >
<title>`wrapped_cl__values_VaList_sp (3 samples, 0.07%)</title><rect x="515.9" y="277" width="0.8" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="518.87" y="287.5" ></text>
</g>
<g >
<title>`mach_absolute_time (4 samples, 0.09%)</title><rect x="764.6" y="245" width="1.1" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="767.62" y="255.5" ></text>
</g>
<g >
<title>`wrapped_cl__expt_Number_spNumber_sp (6 samples, 0.14%)</title><rect x="937.6" y="309" width="1.7" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="940.62" y="319.5" ></text>
</g>
<g >
<title>`FORMATTER-AUX^CORE^FN^^ (2 samples, 0.05%)</title><rect x="10.3" y="517" width="0.5" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="13.28" y="527.5" ></text>
</g>
<g >
<title>`_pthread_mutex_lock_init_slow (2 samples, 0.05%)</title><rect x="69.0" y="229" width="0.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="71.97" y="239.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (3 samples, 0.07%)</title><rect x="985.4" y="277" width="0.9" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="988.41" y="287.5" ></text>
</g>
<g >
<title>`szone_size (1 samples, 0.02%)</title><rect x="847.3" y="245" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="850.35" y="255.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (29 samples, 0.69%)</title><rect x="1146.7" y="309" width="8.1" height="15.0" fill="rgb(228,92,92)" rx="2" ry="2" />
<text  x="1149.68" y="319.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (7 samples, 0.17%)</title><rect x="877.0" y="245" width="1.9" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="879.97" y="255.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.02%)</title><rect x="1065.6" y="325" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1068.63" y="335.5" ></text>
</g>
<g >
<title>`GC_clear_stack (2 samples, 0.05%)</title><rect x="558.1" y="229" width="0.5" height="15.0" fill="rgb(239,106,106)" rx="2" ry="2" />
<text  x="561.08" y="239.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="558.1" y="165" width="0.3" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="561.08" y="175.5" ></text>
</g>
<g >
<title>`wrapped_cl__output_stream_p_T_sp (1 samples, 0.02%)</title><rect x="18.9" y="965" width="0.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="21.94" y="975.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.02%)</title><rect x="622.1" y="229" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="625.08" y="239.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (5 samples, 0.12%)</title><rect x="807.7" y="245" width="1.4" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="810.66" y="255.5" ></text>
</g>
<g >
<title>`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc (2 samples, 0.05%)</title><rect x="10.3" y="645" width="0.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="13.28" y="655.5" ></text>
</g>
<g >
<title>`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc (2 samples, 0.05%)</title><rect x="10.3" y="853" width="0.5" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="13.28" y="863.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="14.5" y="869" width="0.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="17.47" y="879.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.02%)</title><rect x="1136.6" y="357" width="0.3" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="1139.62" y="367.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="916.1" y="133" width="0.3" height="15.0" fill="rgb(215,73,73)" rx="2" ry="2" />
<text  x="919.10" y="143.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (5 samples, 0.12%)</title><rect x="556.7" y="213" width="1.4" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="559.68" y="223.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (25 samples, 0.59%)</title><rect x="629.1" y="245" width="7.0" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="632.07" y="255.5" ></text>
</g>
<g >
<title>`TYPE-EXPANDER^EXT^FN^^ (3 samples, 0.07%)</title><rect x="604.5" y="277" width="0.8" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="607.47" y="287.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (11 samples, 0.26%)</title><rect x="644.4" y="213" width="3.1" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="647.44" y="223.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_contagen_mul_Number_spNumber_sp (1 samples, 0.02%)</title><rect x="535.2" y="309" width="0.2" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="538.16" y="319.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleCharacterString_O, int, (3 samples, 0.07%)</title><rect x="510.0" y="277" width="0.8" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="513.00" y="287.5" ></text>
</g>
<g >
<title>`core::template_Vector&lt;core::StrWNs_O, core::SimpleCharacterStri (27 samples, 0.64%)</title><rect x="136.6" y="293" width="7.6" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="139.61" y="303.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.02%)</title><rect x="773.3" y="293" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="776.28" y="303.5" ></text>
</g>
<g >
<title>`mp::do_start_thread_inner(gctools::smart_ptr&lt;mp::Process_O&gt;, gc (4,222 samples, 100.00%)</title><rect x="10.0" y="1141" width="1180.0" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="13.00" y="1151.5" >`mp::do_start_thread_inner(gctools::smart_ptr&lt;mp::Process_O&gt;, gc</text>
</g>
<g >
<title>`core::MDArray_O::MDArray_O(core::Rank1, unsigned long, gctools: (1 samples, 0.02%)</title><rect x="95.8" y="245" width="0.3" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="98.80" y="255.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (16 samples, 0.38%)</title><rect x="967.0" y="245" width="4.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="969.97" y="255.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="966.1" y="245" width="0.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="969.13" y="255.5" ></text>
</g>
<g >
<title>`GC_get_first_part (6 samples, 0.14%)</title><rect x="470.6" y="181" width="1.7" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="473.60" y="191.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="709.6" y="181" width="0.2" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="712.56" y="191.5" ></text>
</g>
<g >
<title>`cm_vref (1 samples, 0.02%)</title><rect x="124.0" y="325" width="0.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="127.03" y="335.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="14.5" y="837" width="0.3" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="17.47" y="847.5" ></text>
</g>
<g >
<title>`core::Closure_O::describeFunction() const (2 samples, 0.05%)</title><rect x="430.9" y="261" width="0.6" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="433.91" y="271.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.02%)</title><rect x="113.1" y="277" width="0.3" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="116.13" y="287.5" ></text>
</g>
<g >
<title>`wrapped_cl__fdefinition_T_sp (3 samples, 0.07%)</title><rect x="613.4" y="277" width="0.9" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="616.42" y="287.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (7 samples, 0.17%)</title><rect x="1104.5" y="341" width="1.9" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="1107.48" y="351.5" ></text>
</g>
<g >
<title>`cc_resetTLSymbolValue (1 samples, 0.02%)</title><rect x="1181.9" y="453" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="1184.89" y="463.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (19 samples, 0.45%)</title><rect x="893.7" y="277" width="5.4" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="896.74" y="287.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="62.0" y="293" width="0.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="64.98" y="303.5" ></text>
</g>
<g >
<title>`__gmpz_mul (3 samples, 0.07%)</title><rect x="776.1" y="277" width="0.8" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="779.08" y="287.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (1 samples, 0.02%)</title><rect x="990.2" y="229" width="0.2" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="993.17" y="239.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (4 samples, 0.09%)</title><rect x="1102.5" y="325" width="1.1" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1105.52" y="335.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (38 samples, 0.90%)</title><rect x="889.8" y="293" width="10.7" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="892.83" y="303.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (3 samples, 0.07%)</title><rect x="543.0" y="277" width="0.8" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="545.98" y="287.5" ></text>
</g>
<g >
<title>`__gmpz_clear (2 samples, 0.05%)</title><rect x="778.3" y="261" width="0.6" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="781.31" y="271.5" ></text>
</g>
<g >
<title>`cc_resetTLSymbolValue (2 samples, 0.05%)</title><rect x="1164.8" y="421" width="0.6" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1167.85" y="431.5" ></text>
</g>
<g >
<title>`core::contagen_div(gctools::smart_ptr&lt;core::Number_O&gt;, gctools: (145 samples, 3.43%)</title><rect x="810.2" y="277" width="40.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="813.18" y="287.5" >`co..</text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (3 samples, 0.07%)</title><rect x="970.6" y="229" width="0.8" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="973.60" y="239.5" ></text>
</g>
<g >
<title>`tlv_get_addr (4 samples, 0.09%)</title><rect x="422.0" y="229" width="1.1" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="424.97" y="239.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (23 samples, 0.54%)</title><rect x="709.8" y="181" width="6.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="712.84" y="191.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="1052.2" y="261" width="0.3" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="1055.21" y="271.5" ></text>
</g>
<g >
<title>`dyld::findImageContainingAddress(void const*) (1 samples, 0.02%)</title><rect x="697.0" y="197" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="699.98" y="207.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (8 samples, 0.19%)</title><rect x="1027.6" y="213" width="2.3" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="1030.62" y="223.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.02%)</title><rect x="859.1" y="181" width="0.3" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="862.09" y="191.5" ></text>
</g>
<g >
<title>`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="807.4" y="245" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="810.38" y="255.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="1085.5" y="261" width="0.3" height="15.0" fill="rgb(252,125,125)" rx="2" ry="2" />
<text  x="1088.47" y="271.5" ></text>
</g>
<g >
<title>`flockfile (24 samples, 0.57%)</title><rect x="261.3" y="229" width="6.7" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="264.26" y="239.5" ></text>
</g>
<g >
<title>`unw_init_local (14 samples, 0.33%)</title><rect x="1017.8" y="277" width="3.9" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1020.84" y="287.5" ></text>
</g>
<g >
<title>`__gmpz_init_set_si (4 samples, 0.09%)</title><rect x="813.8" y="261" width="1.1" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="816.81" y="271.5" ></text>
</g>
<g >
<title>`GC_clear_stack (3 samples, 0.07%)</title><rect x="483.7" y="213" width="0.9" height="15.0" fill="rgb(244,115,115)" rx="2" ry="2" />
<text  x="486.73" y="223.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.05%)</title><rect x="796.8" y="229" width="0.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="799.76" y="239.5" ></text>
</g>
<g >
<title>`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc (4,188 samples, 99.19%)</title><rect x="19.2" y="901" width="1170.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="22.22" y="911.5" >`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc</text>
</g>
<g >
<title>`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc (2 samples, 0.05%)</title><rect x="10.3" y="565" width="0.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="13.28" y="575.5" ></text>
</g>
<g >
<title>`core::cl__char_upcase(gctools::smart_ptr&lt;core::Character_I&gt;) (2 samples, 0.05%)</title><rect x="512.2" y="261" width="0.6" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="515.24" y="271.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="1029.9" y="261" width="0.2" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="1032.85" y="271.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::SimpleCharacterString_O&gt; gctools::GCOb (26 samples, 0.62%)</title><rect x="96.4" y="245" width="7.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="99.36" y="255.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="1085.5" y="245" width="0.3" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="1088.47" y="255.5" ></text>
</g>
<g >
<title>`cc_rewind_va_list (1 samples, 0.02%)</title><rect x="418.3" y="261" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="421.33" y="271.5" ></text>
</g>
<g >
<title>`tlv_get_addr (4 samples, 0.09%)</title><rect x="924.5" y="293" width="1.1" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="927.49" y="303.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$sigvec__ (1 samples, 0.02%)</title><rect x="252.3" y="229" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="255.32" y="239.5" ></text>
</g>
<g >
<title>`libunwind::CompactUnwinder_x86_64&lt;libunwind::LocalAddressSpace&gt; (1 samples, 0.02%)</title><rect x="636.1" y="245" width="0.2" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="639.05" y="255.5" ></text>
</g>
<g >
<title>`mp::do_start_thread_inner(gctools::smart_ptr&lt;mp::Process_O&gt;, gc (4,222 samples, 100.00%)</title><rect x="10.0" y="1013" width="1180.0" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" >`mp::do_start_thread_inner(gctools::smart_ptr&lt;mp::Process_O&gt;, gc</text>
</g>
<g >
<title>`_dyld_find_unwind_sections (11 samples, 0.26%)</title><rect x="1017.8" y="245" width="3.1" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="1020.84" y="255.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (2 samples, 0.05%)</title><rect x="1114.3" y="325" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="1117.26" y="335.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::machHeader() const (1 samples, 0.02%)</title><rect x="701.5" y="149" width="0.2" height="15.0" fill="rgb(87,233,87)" rx="2" ry="2" />
<text  x="704.45" y="159.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.05%)</title><rect x="923.1" y="293" width="0.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="926.09" y="303.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eq(core::HashGenerator&amp;, gctools::sma (1 samples, 0.02%)</title><rect x="595.5" y="213" width="0.3" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="598.53" y="223.5" ></text>
</g>
<g >
<title>`__gmpn_divrem_1 (4 samples, 0.09%)</title><rect x="820.2" y="213" width="1.2" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="823.24" y="223.5" ></text>
</g>
<g >
<title>`wrapped_cl__nconc_List_sp (8 samples, 0.19%)</title><rect x="11.1" y="917" width="2.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="14.12" y="927.5" ></text>
</g>
<g >
<title>`cc_restoreMultipleValue0 (2 samples, 0.05%)</title><rect x="1103.9" y="341" width="0.6" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1106.92" y="351.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="916.4" y="133" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="919.38" y="143.5" ></text>
</g>
<g >
<title>`mp::mp__get_lock(gctools::smart_ptr&lt;mp::Mutex_O&gt;, bool) (1 samples, 0.02%)</title><rect x="15.0" y="853" width="0.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="18.03" y="863.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="899.1" y="277" width="0.2" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="902.05" y="287.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (1 samples, 0.02%)</title><rect x="706.2" y="165" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="709.21" y="175.5" ></text>
</g>
<g >
<title>`__gmpz_init (1 samples, 0.02%)</title><rect x="775.8" y="277" width="0.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="778.80" y="287.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (1 samples, 0.02%)</title><rect x="17.0" y="885" width="0.3" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="19.99" y="895.5" ></text>
</g>
<g >
<title>`__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan (1 samples, 0.02%)</title><rect x="659.3" y="245" width="0.2" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="662.25" y="255.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="1046.1" y="229" width="0.2" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="1049.06" y="239.5" ></text>
</g>
<g >
<title>`mach_absolute_time (3 samples, 0.07%)</title><rect x="903.8" y="245" width="0.8" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="906.80" y="255.5" ></text>
</g>
<g >
<title>`VALUES^COMMON-LISP^FN^^ (28 samples, 0.66%)</title><rect x="415.3" y="277" width="7.8" height="15.0" fill="rgb(68,181,181)" rx="2" ry="2" />
<text  x="418.26" y="287.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (5 samples, 0.12%)</title><rect x="495.5" y="277" width="1.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="498.47" y="287.5" ></text>
</g>
<g >
<title>`READ-WITH-READTABLE-SYNCED^ECLECTOR.READTABLE^FN^^ (4,151 samples, 98.32%)</title><rect x="24.0" y="469" width="1160.1" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="26.97" y="479.5" >`READ-WITH-READTABLE-SYNCED^ECLECTOR.READTABLE^FN^^</text>
</g>
<g >
<title>`_Unwind_GetRegionStart (2 samples, 0.05%)</title><rect x="996.0" y="245" width="0.6" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="999.04" y="255.5" ></text>
</g>
<g >
<title>`core::cl__make_hash_table(gctools::smart_ptr&lt;core::T_O&gt;, gctool (77 samples, 1.82%)</title><rect x="1140.8" y="389" width="21.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="1143.81" y="399.5" >`..</text>
</g>
<g >
<title>`core::cl__lower_case_p(gctools::smart_ptr&lt;core::Character_I&gt;) (14 samples, 0.33%)</title><rect x="503.6" y="277" width="3.9" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="506.58" y="287.5" ></text>
</g>
<g >
<title>`unw_get_reg (1 samples, 0.02%)</title><rect x="965.6" y="229" width="0.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="968.57" y="239.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.05%)</title><rect x="961.4" y="293" width="0.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="964.38" y="303.5" ></text>
</g>
<g >
<title>`core::cl__char_code(gctools::smart_ptr&lt;core::Character_I&gt;) (9 samples, 0.21%)</title><rect x="360.2" y="277" width="2.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="363.20" y="287.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (27 samples, 0.64%)</title><rect x="992.7" y="277" width="7.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="995.68" y="287.5" ></text>
</g>
<g >
<title>`unw_get_reg (1 samples, 0.02%)</title><rect x="986.3" y="277" width="0.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="989.25" y="287.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="486.0" y="229" width="0.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="488.97" y="239.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (2 samples, 0.05%)</title><rect x="1154.8" y="309" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1157.78" y="319.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="352.1" y="277" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="355.09" y="287.5" ></text>
</g>
<g >
<title>`REPL-EVAL^SWANK-REPL^FN^^ (4,188 samples, 99.19%)</title><rect x="19.2" y="709" width="1170.5" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="22.22" y="719.5" >`REPL-EVAL^SWANK-REPL^FN^^</text>
</g>
<g >
<title>`funlockfile (1 samples, 0.02%)</title><rect x="69.5" y="245" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="72.53" y="255.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CORE^FN^^ (2 samples, 0.05%)</title><rect x="10.3" y="485" width="0.5" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="13.28" y="495.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (26 samples, 0.62%)</title><rect x="214.9" y="261" width="7.2" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="217.86" y="271.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (2 samples, 0.05%)</title><rect x="1184.7" y="469" width="0.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1187.69" y="479.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (20 samples, 0.47%)</title><rect x="1046.3" y="229" width="5.6" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1049.34" y="239.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::create(unsigned int, gctools::smart_ptr&lt;c (1 samples, 0.02%)</title><rect x="1140.5" y="389" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="1143.53" y="399.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="1085.5" y="181" width="0.3" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="1088.47" y="191.5" ></text>
</g>
<g >
<title>`TRACK-PACKAGE^SWANK-REPL^FN^^ (4,188 samples, 99.19%)</title><rect x="19.2" y="645" width="1170.5" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="22.22" y="655.5" >`TRACK-PACKAGE^SWANK-REPL^FN^^</text>
</g>
<g >
<title>`GC_new_hblk (23 samples, 0.54%)</title><rect x="1147.5" y="245" width="6.4" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="1150.52" y="255.5" ></text>
</g>
<g >
<title>`READ-WITH-READTABLE-SYNCED^ECLECTOR.READTABLE^FN^^ (2 samples, 0.05%)</title><rect x="20.6" y="485" width="0.6" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="23.62" y="495.5" ></text>
</g>
<g >
<title>`INTERPRET-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^ (2,318 samples, 54.90%)</title><rect x="305.1" y="325" width="647.9" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="308.14" y="335.5" >`INTERPRET-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^</text>
</g>
<g >
<title>`GC_build_fl (6 samples, 0.14%)</title><rect x="556.4" y="229" width="1.7" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="559.40" y="239.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="1024.5" y="197" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="1027.54" y="207.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.02%)</title><rect x="914.4" y="261" width="0.3" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text  x="917.42" y="271.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="484.0" y="37" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="487.01" y="47.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__malloc_with_fallback(unsigned long) (1 samples, 0.02%)</title><rect x="718.8" y="277" width="0.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="721.78" y="287.5" ></text>
</g>
<g >
<title>`wrapped_cl__make_hash_table_T_spFixnum_spNumber_spReal_spSymbol (79 samples, 1.87%)</title><rect x="1140.5" y="405" width="22.1" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="1143.53" y="415.5" >`..</text>
</g>
<g >
<title>`wrapped_core__make_vector_T_sp_________________________________ (56 samples, 1.33%)</title><rect x="92.4" y="293" width="15.7" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="95.45" y="303.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.02%)</title><rect x="621.0" y="197" width="0.2" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="623.96" y="207.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (3 samples, 0.07%)</title><rect x="707.9" y="213" width="0.8" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="710.88" y="223.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.02%)</title><rect x="1137.2" y="389" width="0.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="1140.18" y="399.5" ></text>
</g>
<g >
<title>`READ-CHAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="297.6" y="341" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="300.59" y="351.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (6 samples, 0.14%)</title><rect x="1157.9" y="341" width="1.6" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="1160.86" y="351.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (10 samples, 0.24%)</title><rect x="1027.1" y="229" width="2.8" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="1030.06" y="239.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.05%)</title><rect x="353.5" y="277" width="0.6" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="356.49" y="287.5" ></text>
</g>
<g >
<title>`__srefill1 (1 samples, 0.02%)</title><rect x="258.2" y="213" width="0.3" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="261.19" y="223.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (1 samples, 0.02%)</title><rect x="594.1" y="245" width="0.3" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="597.13" y="255.5" ></text>
</g>
<g >
<title>`__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan (11 samples, 0.26%)</title><rect x="629.1" y="229" width="3.0" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="632.07" y="239.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (3 samples, 0.07%)</title><rect x="750.4" y="213" width="0.8" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="753.36" y="223.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::keyTest(gctools::smart_ptr&lt;core::T_O&gt;, gc (1 samples, 0.02%)</title><rect x="1117.3" y="277" width="0.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="1120.33" y="287.5" ></text>
</g>
<g >
<title>`NEXT^ECLECTOR.READER^FN^^ (4 samples, 0.09%)</title><rect x="956.1" y="325" width="1.1" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="959.07" y="335.5" ></text>
</g>
<g >
<title>`core::apply0_inner_list(gctools::smart_ptr&lt;core::Function_O&gt;, g (4,188 samples, 99.19%)</title><rect x="19.2" y="741" width="1170.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="22.22" y="751.5" >`core::apply0_inner_list(gctools::smart_ptr&lt;core::Function_O&gt;, g</text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (24 samples, 0.57%)</title><rect x="975.4" y="213" width="6.7" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="978.35" y="223.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.02%)</title><rect x="566.2" y="229" width="0.3" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="569.18" y="239.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (6 samples, 0.14%)</title><rect x="649.5" y="181" width="1.6" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="652.47" y="191.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="1085.5" y="197" width="0.3" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="1088.47" y="207.5" ></text>
</g>
<g >
<title>`_Unwind_GetIP (1 samples, 0.02%)</title><rect x="965.6" y="245" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="968.57" y="255.5" ></text>
</g>
<g >
<title>`default_zone_malloc (1 samples, 0.02%)</title><rect x="652.0" y="213" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="654.98" y="223.5" ></text>
</g>
<g >
<title>`GC_allocobj (24 samples, 0.57%)</title><rect x="1147.2" y="261" width="6.7" height="15.0" fill="rgb(225,87,87)" rx="2" ry="2" />
<text  x="1150.24" y="271.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (1 samples, 0.02%)</title><rect x="601.7" y="261" width="0.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="604.68" y="271.5" ></text>
</g>
<g >
<title>`core::cl__zerop(gctools::smart_ptr&lt;core::Number_O&gt;) (1 samples, 0.02%)</title><rect x="344.8" y="261" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="347.83" y="271.5" ></text>
</g>
<g >
<title>`__gmpz_cdiv_qr (19 samples, 0.45%)</title><rect x="816.0" y="245" width="5.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="819.04" y="255.5" ></text>
</g>
<g >
<title>`__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan (25 samples, 0.59%)</title><rect x="993.2" y="261" width="7.0" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="996.24" y="271.5" ></text>
</g>
<g >
<title>`__gmpz_get_si (1 samples, 0.02%)</title><rect x="787.8" y="245" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="790.82" y="255.5" ></text>
</g>
<g >
<title>`GC_clear_stack (1 samples, 0.02%)</title><rect x="1098.9" y="293" width="0.3" height="15.0" fill="rgb(223,83,83)" rx="2" ry="2" />
<text  x="1101.89" y="303.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eql(core::HashGenerator&amp;, gctools::sm (2 samples, 0.05%)</title><rect x="214.3" y="261" width="0.6" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="217.31" y="271.5" ></text>
</g>
<g >
<title>`__gmpz_init (1 samples, 0.02%)</title><rect x="778.9" y="261" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="781.87" y="271.5" ></text>
</g>
<g >
<title>`GC_allochblk (4 samples, 0.09%)</title><rect x="913.3" y="261" width="1.1" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="916.31" y="271.5" ></text>
</g>
<g >
<title>`free (5 samples, 0.12%)</title><rect x="847.3" y="261" width="1.4" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="850.35" y="271.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (13 samples, 0.31%)</title><rect x="1031.0" y="245" width="3.6" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="1033.97" y="255.5" ></text>
</g>
<g >
<title>`GC_get_first_part (1 samples, 0.02%)</title><rect x="895.7" y="213" width="0.3" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="898.70" y="223.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (7 samples, 0.17%)</title><rect x="861.0" y="165" width="2.0" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="864.04" y="175.5" ></text>
</g>
<g >
<title>`GC_notify_or_invoke_finalizers (1 samples, 0.02%)</title><rect x="790.3" y="213" width="0.3" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="793.33" y="223.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="558.1" y="117" width="0.3" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="561.08" y="127.5" ></text>
</g>
<g >
<title>`core::eformat_read_char(gctools::smart_ptr&lt;core::T_O&gt;) (5 samples, 0.12%)</title><rect x="71.8" y="325" width="1.4" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="74.77" y="335.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (12 samples, 0.28%)</title><rect x="1134.4" y="405" width="3.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1137.38" y="415.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (13 samples, 0.31%)</title><rect x="967.0" y="229" width="3.6" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="969.97" y="239.5" ></text>
</g>
<g >
<title>`GC_clear_stack (1 samples, 0.02%)</title><rect x="1097.5" y="309" width="0.3" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="1100.49" y="319.5" ></text>
</g>
<g >
<title>`wrapped_core__vref_AbstractSimpleVector_spsize_t (16 samples, 0.38%)</title><rect x="516.7" y="277" width="4.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="519.71" y="287.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (23 samples, 0.54%)</title><rect x="740.6" y="229" width="6.4" height="15.0" fill="rgb(87,233,87)" rx="2" ry="2" />
<text  x="743.58" y="239.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (5 samples, 0.12%)</title><rect x="594.4" y="229" width="1.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="597.41" y="239.5" ></text>
</g>
<g >
<title>`core::HashGenerator::rawhash() const (2 samples, 0.05%)</title><rect x="114.8" y="277" width="0.6" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="117.81" y="287.5" ></text>
</g>
<g >
<title>`CALL-WITH-DEBUGGER-HOOK^SWANK/BACKEND^FN^^ (4,188 samples, 99.19%)</title><rect x="19.2" y="853" width="1170.5" height="15.0" fill="rgb(79,192,192)" rx="2" ry="2" />
<text  x="22.22" y="863.5" >`CALL-WITH-DEBUGGER-HOOK^SWANK/BACKEND^FN^^</text>
</g>
<g >
<title>`cc_safe_symbol_value (4 samples, 0.09%)</title><rect x="118.2" y="309" width="1.1" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="121.16" y="319.5" ></text>
</g>
<g >
<title>`core::core__vref(gctools::smart_ptr&lt;core::AbstractSimpleVector_ (7 samples, 0.17%)</title><rect x="519.2" y="261" width="2.0" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="522.23" y="271.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="958.9" y="325" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="961.86" y="335.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="96.1" y="229" width="0.3" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="99.08" y="239.5" ></text>
</g>
<g >
<title>`core::contagen_mul(gctools::smart_ptr&lt;core::Number_O&gt;, gctools: (34 samples, 0.81%)</title><rect x="943.5" y="293" width="9.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="946.49" y="303.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (12 samples, 0.28%)</title><rect x="913.3" y="277" width="3.4" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="916.31" y="287.5" ></text>
</g>
<g >
<title>`GC_malloc (2 samples, 0.05%)</title><rect x="539.1" y="309" width="0.5" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="542.07" y="319.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="621.8" y="229" width="0.3" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="624.80" y="239.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::SimpleCharacterString_O&gt; gctools::GCOb (1 samples, 0.02%)</title><rect x="10.8" y="869" width="0.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="13.84" y="879.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.05%)</title><rect x="498.8" y="245" width="0.6" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="501.83" y="255.5" ></text>
</g>
<g >
<title>`malloc (8 samples, 0.19%)</title><rect x="655.3" y="261" width="2.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="658.34" y="271.5" ></text>
</g>
<g >
<title>`realloc (3 samples, 0.07%)</title><rect x="858.5" y="229" width="0.9" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="861.53" y="239.5" ></text>
</g>
<g >
<title>`MAKE-ARRAY-WITH-INITIAL-ELEMENT^CORE^FN^^ (81 samples, 1.92%)</title><rect x="85.7" y="325" width="22.7" height="15.0" fill="rgb(64,177,177)" rx="2" ry="2" />
<text  x="88.74" y="335.5" >`..</text>
</g>
<g >
<title>`__gmpz_sub (1 samples, 0.02%)</title><rect x="864.4" y="245" width="0.3" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="867.40" y="255.5" ></text>
</g>
<g >
<title>`_Unwind_GetLanguageSpecificData (1 samples, 0.02%)</title><rect x="699.2" y="197" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="702.22" y="207.5" ></text>
</g>
<g >
<title>`core::cl__numberp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="116.5" y="245" width="0.3" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="119.49" y="255.5" ></text>
</g>
<g >
<title>`mp::do_start_thread_inner(gctools::smart_ptr&lt;mp::Process_O&gt;, gc (4,222 samples, 100.00%)</title><rect x="10.0" y="1061" width="1180.0" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="13.00" y="1071.5" >`mp::do_start_thread_inner(gctools::smart_ptr&lt;mp::Process_O&gt;, gc</text>
</g>
<g >
<title>`clock_gettime_nsec_np (4 samples, 0.09%)</title><rect x="1091.1" y="293" width="1.1" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="1094.06" y="303.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.05%)</title><rect x="916.9" y="277" width="0.6" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="919.94" y="287.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (3 samples, 0.07%)</title><rect x="1031.3" y="197" width="0.8" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="1034.25" y="207.5" ></text>
</g>
<g >
<title>`_pthread_mutex_firstfit_lock_slow (1 samples, 0.02%)</title><rect x="68.4" y="245" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="71.41" y="255.5" ></text>
</g>
<g >
<title>`core::cl__eval(gctools::smart_ptr&lt;core::T_O&gt;) (4,188 samples, 99.19%)</title><rect x="19.2" y="789" width="1170.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="22.22" y="799.5" >`core::cl__eval(gctools::smart_ptr&lt;core::T_O&gt;)</text>
</g>
<g >
<title>`free_tiny (4 samples, 0.09%)</title><rect x="1067.0" y="325" width="1.1" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1070.03" y="335.5" ></text>
</g>
<g >
<title>`cc_makeCell (59 samples, 1.40%)</title><rect x="905.2" y="309" width="16.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="908.20" y="319.5" ></text>
</g>
<g >
<title>`wrapped_cl__make_string_output_stream_Symbol_sp (1 samples, 0.02%)</title><rect x="10.8" y="917" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="13.84" y="927.5" ></text>
</g>
<g >
<title>`tlv_get_addr (6 samples, 0.14%)</title><rect x="493.0" y="245" width="1.6" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="495.96" y="255.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$_dyld_find_unwind_sections (1 samples, 0.02%)</title><rect x="1001.3" y="261" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="1004.35" y="271.5" ></text>
</g>
<g >
<title>`NUMBERP^COMMON-LISP^FN^^ (3 samples, 0.07%)</title><rect x="414.4" y="277" width="0.9" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="417.42" y="287.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.02%)</title><rect x="1108.4" y="341" width="0.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1111.39" y="351.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="640.2" y="197" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="643.25" y="207.5" ></text>
</g>
<g >
<title>`core::cl__lower_case_p(gctools::smart_ptr&lt;core::Character_I&gt;) (9 samples, 0.21%)</title><rect x="513.1" y="261" width="2.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="516.08" y="271.5" ></text>
</g>
<g >
<title>`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc (2 samples, 0.05%)</title><rect x="10.3" y="709" width="0.5" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="13.28" y="719.5" ></text>
</g>
<g >
<title>`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc (2 samples, 0.05%)</title><rect x="10.3" y="901" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="13.28" y="911.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (4 samples, 0.09%)</title><rect x="854.9" y="229" width="1.1" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="857.89" y="239.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="558.4" y="197" width="0.2" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="561.36" y="207.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.05%)</title><rect x="498.8" y="261" width="0.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="501.83" y="271.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (4 samples, 0.09%)</title><rect x="705.6" y="197" width="1.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="708.65" y="207.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$cc_makeCell (1 samples, 0.02%)</title><rect x="56.1" y="357" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="59.12" y="367.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.05%)</title><rect x="923.1" y="277" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="926.09" y="287.5" ></text>
</g>
<g >
<title>`dyld::findImageContainingAddress(void const*) (3 samples, 0.07%)</title><rect x="754.6" y="213" width="0.8" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="757.56" y="223.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="867.7" y="213" width="0.3" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="870.75" y="223.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (18 samples, 0.43%)</title><rect x="1036.3" y="197" width="5.0" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="1039.28" y="207.5" ></text>
</g>
<g >
<title>`GC_clear_stack (1 samples, 0.02%)</title><rect x="1085.5" y="277" width="0.3" height="15.0" fill="rgb(212,67,67)" rx="2" ry="2" />
<text  x="1088.47" y="287.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="558.1" y="53" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="561.08" y="63.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="705.9" y="165" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="708.93" y="175.5" ></text>
</g>
<g >
<title>`MAKE-HASH-TABLE^COMMON-LISP^FN^^ (85 samples, 2.01%)</title><rect x="1138.9" y="421" width="23.7" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="1141.85" y="431.5" >`..</text>
</g>
<g >
<title>`unw_get_proc_info (1 samples, 0.02%)</title><rect x="1042.4" y="293" width="0.3" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="1045.43" y="303.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__class_type_info::can_catch(__cxxabiv1::__shim_typ (1 samples, 0.02%)</title><rect x="660.4" y="229" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="663.37" y="239.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (25 samples, 0.59%)</title><rect x="1045.2" y="261" width="7.0" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="1048.23" y="271.5" ></text>
</g>
<g >
<title>`core::clasp_gcd(gctools::smart_ptr&lt;core::Integer_O&gt;, gctools::s (21 samples, 0.50%)</title><rect x="829.2" y="213" width="5.8" height="15.0" fill="rgb(72,221,72)" rx="2" ry="2" />
<text  x="832.18" y="223.5" ></text>
</g>
<g >
<title>`ValuesFromCons(gctools::smart_ptr&lt;core::List_V&gt;) (5 samples, 0.12%)</title><rect x="1179.1" y="437" width="1.4" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="1182.10" y="447.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (178 samples, 4.22%)</title><rect x="992.4" y="293" width="49.8" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="995.40" y="303.5" >`_Unw..</text>
</g>
<g >
<title>`tlv_get_addr (3 samples, 0.07%)</title><rect x="351.3" y="261" width="0.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="354.26" y="271.5" ></text>
</g>
<g >
<title>`core::core__make_vector(gctools::smart_ptr&lt;core::T_O&gt;, unsigned (1 samples, 0.02%)</title><rect x="92.2" y="293" width="0.2" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="95.17" y="303.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="1181.6" y="437" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1184.62" y="447.5" ></text>
</g>
<g >
<title>`__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned  (4 samples, 0.09%)</title><rect x="1024.8" y="229" width="1.1" height="15.0" fill="rgb(75,222,75)" rx="2" ry="2" />
<text  x="1027.82" y="239.5" ></text>
</g>
<g >
<title>`wrapped_core__logand_2op_Integer_spInteger_sp (4 samples, 0.09%)</title><rect x="122.9" y="309" width="1.1" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="125.91" y="319.5" ></text>
</g>
<g >
<title>`CCLASP-EVAL^CLASP-CLEAVIR^FN^^ (4,188 samples, 99.19%)</title><rect x="19.2" y="597" width="1170.5" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="22.22" y="607.5" >`CCLASP-EVAL^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.02%)</title><rect x="1120.4" y="357" width="0.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="1123.41" y="367.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="1167.6" y="405" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1170.64" y="415.5" ></text>
</g>
<g >
<title>`core::Ratio_O::setf_numerator_denominator(gctools::smart_ptr&lt;co (20 samples, 0.47%)</title><rect x="790.9" y="229" width="5.6" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="793.89" y="239.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (2 samples, 0.05%)</title><rect x="329.5" y="293" width="0.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="332.46" y="303.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (24 samples, 0.57%)</title><rect x="709.6" y="197" width="6.7" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="712.56" y="207.5" ></text>
</g>
<g >
<title>`unw_init_local (46 samples, 1.09%)</title><rect x="748.1" y="261" width="12.9" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="751.13" y="271.5" ></text>
</g>
<g >
<title>`core::coerce::inputStreamDesignator(gctools::smart_ptr&lt;core::T_ (2 samples, 0.05%)</title><rect x="71.2" y="325" width="0.6" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="74.21" y="335.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (14 samples, 0.33%)</title><rect x="1100.0" y="341" width="3.9" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="1103.00" y="351.5" ></text>
</g>
<g >
<title>`fread (102 samples, 2.42%)</title><rect x="250.6" y="245" width="28.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="253.64" y="255.5" >`f..</text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (10 samples, 0.24%)</title><rect x="1018.1" y="229" width="2.8" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1021.11" y="239.5" ></text>
</g>
<g >
<title>`gctools::GCObjectDefaultConstructorAllocator&lt;core::DoubleFloat_ (10 samples, 0.24%)</title><rect x="878.9" y="261" width="2.8" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="881.93" y="271.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="1006.7" y="213" width="0.2" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1009.66" y="223.5" ></text>
</g>
<g >
<title>`free (12 samples, 0.28%)</title><rect x="802.3" y="261" width="3.4" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="805.35" y="271.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="780.8" y="245" width="0.3" height="15.0" fill="rgb(208,61,61)" rx="2" ry="2" />
<text  x="783.83" y="255.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.02%)</title><rect x="597.2" y="229" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="600.21" y="239.5" ></text>
</g>
<g >
<title>`clock_gettime (7 samples, 0.17%)</title><rect x="903.2" y="277" width="2.0" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="906.24" y="287.5" ></text>
</g>
<g >
<title>`SYNTAX-TYPE^CORE^FN^^ (3 samples, 0.07%)</title><rect x="1111.2" y="357" width="0.8" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="1114.18" y="367.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_core__sl_boundp_T_sp (1 samples, 0.02%)</title><rect x="16.4" y="901" width="0.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="19.43" y="911.5" ></text>
</g>
<g >
<title>`U25-FORMAT-INTERPRETER^CORE^FN^^ (1 samples, 0.02%)</title><rect x="10.6" y="389" width="0.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="13.56" y="399.5" ></text>
</g>
<g >
<title>`__gmp_default_allocate (4 samples, 0.09%)</title><rect x="854.9" y="261" width="1.1" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="857.89" y="271.5" ></text>
</g>
<g >
<title>`HANDLE-REQUESTS^SWANK^FN^^ (4,188 samples, 99.19%)</title><rect x="19.2" y="949" width="1170.5" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="22.22" y="959.5" >`HANDLE-REQUESTS^SWANK^FN^^</text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.02%)</title><rect x="901.3" y="293" width="0.3" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="904.29" y="303.5" ></text>
</g>
<g >
<title>`GC_end_stubborn_change (1 samples, 0.02%)</title><rect x="1097.8" y="309" width="0.2" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="1100.77" y="319.5" ></text>
</g>
<g >
<title>`pthread_getspecific (2 samples, 0.05%)</title><rect x="491.6" y="245" width="0.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="494.56" y="255.5" ></text>
</g>
<g >
<title>`GC_install_counts (1 samples, 0.02%)</title><rect x="866.1" y="165" width="0.3" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="869.07" y="175.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="1085.5" y="229" width="0.3" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="1088.47" y="239.5" ></text>
</g>
<g >
<title>`wrapped_cl__list_T_sp (1 samples, 0.02%)</title><rect x="1138.6" y="405" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="1141.57" y="415.5" ></text>
</g>
<g >
<title>`GC_clear_stack (2 samples, 0.05%)</title><rect x="462.5" y="229" width="0.6" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="465.49" y="239.5" ></text>
</g>
<g >
<title>`tiny_size (9 samples, 0.21%)</title><rect x="803.2" y="245" width="2.5" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="806.19" y="255.5" ></text>
</g>
<g >
<title>`SYNTAX-TYPE^ECLECTOR.READTABLE^((READTABLE T))^METHOD^^ (178 samples, 4.22%)</title><rect x="180.5" y="325" width="49.7" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="183.49" y="335.5" >`SYNT..</text>
</g>
<g >
<title>`CALL-WITH-SYNTAX-HOOKS^SWANK/BACKEND^FN^^ (4,188 samples, 99.19%)</title><rect x="19.2" y="677" width="1170.5" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="22.22" y="687.5" >`CALL-WITH-SYNTAX-HOOKS^SWANK/BACKEND^FN^^</text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.05%)</title><rect x="330.0" y="277" width="0.6" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="333.01" y="287.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (5 samples, 0.12%)</title><rect x="303.7" y="325" width="1.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="306.74" y="335.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.05%)</title><rect x="1122.4" y="325" width="0.5" height="15.0" fill="rgb(204,57,57)" rx="2" ry="2" />
<text  x="1125.36" y="335.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$mach_timebase_info (1 samples, 0.02%)</title><rect x="903.2" y="261" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="906.24" y="271.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.02%)</title><rect x="1119.8" y="357" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1122.85" y="367.5" ></text>
</g>
<g >
<title>`wrapped_core__vset_T_spAbstractSimpleVector_spsize_t (1 samples, 0.02%)</title><rect x="521.2" y="277" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="524.18" y="287.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (2 samples, 0.05%)</title><rect x="709.8" y="165" width="0.6" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="712.84" y="175.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (6 samples, 0.14%)</title><rect x="543.8" y="277" width="1.7" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="546.82" y="287.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.02%)</title><rect x="1155.9" y="325" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1158.90" y="335.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$cc_multipleValuesArrayAddress (1 samples, 0.02%)</title><rect x="82.1" y="341" width="0.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="85.11" y="351.5" ></text>
</g>
<g >
<title>`core::clasp_to_mpz(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.05%)</title><rect x="801.8" y="261" width="0.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="804.79" y="271.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (67 samples, 1.59%)</title><rect x="672.1" y="245" width="18.7" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="675.11" y="255.5" ></text>
</g>
<g >
<title>`__fread (3 samples, 0.07%)</title><rect x="67.6" y="245" width="0.8" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="70.57" y="255.5" ></text>
</g>
<g >
<title>`core::cl__make_string_output_stream(gctools::smart_ptr&lt;core::Sy (1 samples, 0.02%)</title><rect x="10.8" y="901" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="13.84" y="911.5" ></text>
</g>
<g >
<title>`core::Symbol_O::fboundp() const (2 samples, 0.05%)</title><rect x="612.3" y="229" width="0.6" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="615.30" y="239.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (3 samples, 0.07%)</title><rect x="483.7" y="165" width="0.9" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="486.73" y="175.5" ></text>
</g>
<g >
<title>`GC_install_header (1 samples, 0.02%)</title><rect x="895.7" y="197" width="0.3" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="898.70" y="207.5" ></text>
</g>
<g >
<title>`GC_build_fl (12 samples, 0.28%)</title><rect x="1150.3" y="229" width="3.4" height="15.0" fill="rgb(225,87,87)" rx="2" ry="2" />
<text  x="1153.31" y="239.5" ></text>
</g>
<g >
<title>`__cxa_allocate_exception (22 samples, 0.52%)</title><rect x="651.4" y="277" width="6.2" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="654.43" y="287.5" ></text>
</g>
<g >
<title>`GC_inner_start_routine (4,222 samples, 100.00%)</title><rect x="10.0" y="1189" width="1180.0" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="13.00" y="1199.5" >`GC_inner_start_routine</text>
</g>
<g >
<title>`GC_build_fl (3 samples, 0.07%)</title><rect x="102.2" y="197" width="0.9" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="105.23" y="207.5" ></text>
</g>
<g >
<title>`NEXT^ECLECTOR.READER^FN^^ (57 samples, 1.35%)</title><rect x="569.8" y="309" width="15.9" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="572.82" y="319.5" ></text>
</g>
<g >
<title>`wrapped_contagen_div_Number_spNumber_sp (2 samples, 0.05%)</title><rect x="940.4" y="309" width="0.6" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="943.42" y="319.5" ></text>
</g>
<g >
<title>`__cxa_get_globals (1 samples, 0.02%)</title><rect x="1065.3" y="325" width="0.3" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="1068.35" y="335.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (4 samples, 0.09%)</title><rect x="73.2" y="325" width="1.1" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="76.16" y="335.5" ></text>
</g>
<g >
<title>`__toupper (2 samples, 0.05%)</title><rect x="512.2" y="245" width="0.6" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="515.24" y="255.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="889.5" y="277" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="892.55" y="287.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="106.4" y="229" width="0.3" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="109.42" y="239.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (4 samples, 0.09%)</title><rect x="854.9" y="213" width="1.1" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="857.89" y="223.5" ></text>
</g>
<g >
<title>`core::lisp_true() (3 samples, 0.07%)</title><rect x="1173.0" y="421" width="0.8" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="1175.95" y="431.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (3 samples, 0.07%)</title><rect x="1058.1" y="261" width="0.8" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1061.08" y="271.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (34 samples, 0.81%)</title><rect x="731.1" y="213" width="9.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="734.08" y="223.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Nehalem (1 samples, 0.02%)</title><rect x="749.5" y="245" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="752.53" y="255.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (207 samples, 4.90%)</title><rect x="658.7" y="261" width="57.8" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="661.69" y="271.5" >`_Unwi..</text>
</g>
<g >
<title>`DYLD-STUB$$_platform_memmove (5 samples, 0.12%)</title><rect x="64.2" y="245" width="1.4" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="67.22" y="255.5" ></text>
</g>
<g >
<title>`tlv_get_addr (3 samples, 0.07%)</title><rect x="113.4" y="277" width="0.8" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="116.41" y="287.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="1086.6" y="309" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="1089.59" y="319.5" ></text>
</g>
<g >
<title>`thread_start (4,222 samples, 100.00%)</title><rect x="10.0" y="1253" width="1180.0" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="13.00" y="1263.5" >`thread_start</text>
</g>
<g >
<title>`cc_rewind_va_list (3 samples, 0.07%)</title><rect x="1165.4" y="421" width="0.8" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="1168.41" y="431.5" ></text>
</g>
<g >
<title>`unw_init_local (21 samples, 0.50%)</title><rect x="691.7" y="245" width="5.8" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="694.67" y="255.5" ></text>
</g>
<g >
<title>`SYMBOLP^COMMON-LISP^FN^^ (3 samples, 0.07%)</title><rect x="603.6" y="277" width="0.9" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="606.63" y="287.5" ></text>
</g>
<g >
<title>`core::frame_check(unsigned long) (58 samples, 1.37%)</title><rect x="1042.7" y="309" width="16.2" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1045.71" y="319.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Nehalem (2 samples, 0.05%)</title><rect x="691.7" y="229" width="0.5" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="694.67" y="239.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.02%)</title><rect x="1146.4" y="309" width="0.3" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="1149.40" y="319.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (1 samples, 0.02%)</title><rect x="1145.0" y="325" width="0.3" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="1148.00" y="335.5" ></text>
</g>
<g >
<title>`tlv_get_addr (10 samples, 0.24%)</title><rect x="235.5" y="293" width="2.8" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="238.55" y="303.5" ></text>
</g>
<g >
<title>`NSTRING-UPCASE^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="585.7" y="309" width="1.2" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="588.75" y="319.5" ></text>
</g>
<g >
<title>`std::__1::chrono::steady_clock::now() (2 samples, 0.05%)</title><rect x="931.8" y="309" width="0.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="934.75" y="319.5" ></text>
</g>
<g >
<title>`CHAR-CODE^COMMON-LISP^FN^^ (3 samples, 0.07%)</title><rect x="328.1" y="309" width="0.8" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="331.06" y="319.5" ></text>
</g>
<g >
<title>`tlv_get_addr (3 samples, 0.07%)</title><rect x="899.6" y="277" width="0.9" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="902.61" y="287.5" ></text>
</g>
<g >
<title>`GC_add_map_entry (1 samples, 0.02%)</title><rect x="1136.6" y="325" width="0.3" height="15.0" fill="rgb(208,61,61)" rx="2" ry="2" />
<text  x="1139.62" y="335.5" ></text>
</g>
<g >
<title>`GC_install_counts (1 samples, 0.02%)</title><rect x="472.3" y="181" width="0.3" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="475.27" y="191.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="965.6" y="213" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="968.57" y="223.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="1069.0" y="325" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="1071.98" y="335.5" ></text>
</g>
<g >
<title>`wrapped_cl__unread_char_Character_spT_sp (1 samples, 0.02%)</title><rect x="1130.5" y="373" width="0.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1133.47" y="383.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="1104.2" y="309" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="1107.20" y="319.5" ></text>
</g>
<g >
<title>`__error (9 samples, 0.21%)</title><rect x="252.6" y="229" width="2.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="255.60" y="239.5" ></text>
</g>
<g >
<title>`CALL-WITH-LOCK-HELD^SWANK/BACKEND^FN^^ (4 samples, 0.09%)</title><rect x="14.2" y="885" width="1.1" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="17.19" y="895.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::set_thread_local_value(gctools::smar (3 samples, 0.07%)</title><rect x="1182.5" y="453" width="0.8" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="1185.45" y="463.5" ></text>
</g>
<g >
<title>`READER-FLOAT-FORMAT^ECLECTOR.READER^FN^^ (1 samples, 0.02%)</title><rect x="624.9" y="293" width="0.3" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="627.87" y="303.5" ></text>
</g>
<g >
<title>`core::eformat_unread_char(gctools::smart_ptr&lt;core::T_O&gt;, int) (4 samples, 0.09%)</title><rect x="1126.6" y="341" width="1.1" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="1129.56" y="351.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="617.6" y="245" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="620.61" y="255.5" ></text>
</g>
<g >
<title>`free_tiny (12 samples, 0.28%)</title><rect x="805.7" y="261" width="3.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="808.70" y="271.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (1 samples, 0.02%)</title><rect x="699.2" y="181" width="0.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="702.22" y="191.5" ></text>
</g>
<g >
<title>`GC_install_header (1 samples, 0.02%)</title><rect x="141.1" y="181" width="0.3" height="15.0" fill="rgb(237,103,103)" rx="2" ry="2" />
<text  x="144.08" y="191.5" ></text>
</g>
<g >
<title>`core::Cons_O::length() const (5 samples, 0.12%)</title><rect x="1167.9" y="421" width="1.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="1170.92" y="431.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="1024.3" y="197" width="0.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="1027.26" y="207.5" ></text>
</g>
<g >
<title>`CHAR-INVALID-P^ECLECTOR.READER^FN^^ (126 samples, 2.98%)</title><rect x="330.9" y="309" width="35.2" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="333.85" y="319.5" >`C..</text>
</g>
<g >
<title>`tlv_get_addr (8 samples, 0.19%)</title><rect x="580.2" y="261" width="2.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="583.16" y="271.5" ></text>
</g>
<g >
<title>`wrapped_core__syntax_type_T_spCharacter_sp (166 samples, 3.93%)</title><rect x="183.8" y="309" width="46.4" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="186.84" y="319.5" >`wra..</text>
</g>
<g >
<title>`DYLD-STUB$$__gmpz_init_set_si (1 samples, 0.02%)</title><rect x="811.0" y="261" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="814.01" y="271.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.02%)</title><rect x="104.5" y="213" width="0.2" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="107.47" y="223.5" ></text>
</g>
<g >
<title>`VECTOR-PUSH-EXTEND^COMMON-LISP^FN^^ (2 samples, 0.05%)</title><rect x="125.1" y="325" width="0.6" height="15.0" fill="rgb(76,189,189)" rx="2" ry="2" />
<text  x="128.15" y="335.5" ></text>
</g>
<g >
<title>`TYPE-EXPANDER^EXT^FN^^ (29 samples, 0.69%)</title><rect x="593.6" y="261" width="8.1" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="596.57" y="271.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_contagen_add_Number_spNumber_sp (1 samples, 0.02%)</title><rect x="534.9" y="309" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="537.88" y="319.5" ></text>
</g>
<g >
<title>`wrapped_cl__lower_case_p_Character_sp (2 samples, 0.05%)</title><rect x="530.7" y="293" width="0.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="533.69" y="303.5" ></text>
</g>
<g >
<title>`wrapped_cl__fdefinition_T_sp (7 samples, 0.17%)</title><rect x="610.9" y="261" width="2.0" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="613.90" y="271.5" ></text>
</g>
<g >
<title>`wrapped_core__hash_eql_List_sp (11 samples, 0.26%)</title><rect x="114.8" y="293" width="3.1" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="117.81" y="303.5" ></text>
</g>
<g >
<title>`realloc (4 samples, 0.09%)</title><rect x="781.4" y="229" width="1.1" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="784.39" y="239.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.02%)</title><rect x="564.5" y="277" width="0.3" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="567.50" y="287.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (2 samples, 0.05%)</title><rect x="916.1" y="165" width="0.6" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="919.10" y="175.5" ></text>
</g>
<g >
<title>`libunwind::CompactUnwinder_x86_64&lt;libunwind::LocalAddressSpace&gt; (9 samples, 0.21%)</title><rect x="972.0" y="261" width="2.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="975.00" y="271.5" ></text>
</g>
<g >
<title>`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="850.1" y="245" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="853.14" y="255.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="558.1" y="197" width="0.3" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="561.08" y="207.5" ></text>
</g>
<g >
<title>`default_zone_free_definite_size (1 samples, 0.02%)</title><rect x="1066.2" y="325" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1069.19" y="335.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (8 samples, 0.19%)</title><rect x="350.1" y="293" width="2.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="353.14" y="303.5" ></text>
</g>
<g >
<title>`core::MDArray_O::set_data(gctools::smart_ptr&lt;core::Array_O&gt;) (1 samples, 0.02%)</title><rect x="134.4" y="293" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="137.37" y="303.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="1155.3" y="309" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="1158.34" y="319.5" ></text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (2 samples, 0.05%)</title><rect x="295.4" y="325" width="0.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="298.36" y="335.5" ></text>
</g>
<g >
<title>`cc_makeCell (1 samples, 0.02%)</title><rect x="959.1" y="325" width="0.3" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="962.14" y="335.5" ></text>
</g>
<g >
<title>`unw_get_reg (1 samples, 0.02%)</title><rect x="699.8" y="197" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="702.78" y="207.5" ></text>
</g>
<g >
<title>`__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned  (18 samples, 0.43%)</title><rect x="666.5" y="213" width="5.0" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="669.52" y="223.5" ></text>
</g>
<g >
<title>`GC_add_map_entry (1 samples, 0.02%)</title><rect x="894.9" y="229" width="0.2" height="15.0" fill="rgb(237,103,103)" rx="2" ry="2" />
<text  x="897.86" y="239.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.07%)</title><rect x="880.3" y="245" width="0.9" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="883.33" y="255.5" ></text>
</g>
<g >
<title>`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc (2 samples, 0.05%)</title><rect x="10.3" y="693" width="0.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="13.28" y="703.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="484.3" y="101" width="0.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="487.29" y="111.5" ></text>
</g>
<g >
<title>`unw_step (1 samples, 0.02%)</title><rect x="1060.6" y="309" width="0.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1063.60" y="319.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="430.6" y="261" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="433.63" y="271.5" ></text>
</g>
<g >
<title>`clock_gettime (5 samples, 0.12%)</title><rect x="1091.1" y="309" width="1.4" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1094.06" y="319.5" ></text>
</g>
<g >
<title>`core::frame_check(unsigned long) (2 samples, 0.05%)</title><rect x="771.9" y="293" width="0.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="774.89" y="303.5" ></text>
</g>
<g >
<title>`CALL-WITH-RETRY-RESTART^SWANK^FN^^ (4,188 samples, 99.19%)</title><rect x="19.2" y="661" width="1170.5" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="22.22" y="671.5" >`CALL-WITH-RETRY-RESTART^SWANK^FN^^</text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.02%)</title><rect x="1129.6" y="373" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1132.63" y="383.5" ></text>
</g>
<g >
<title>`free_tiny (6 samples, 0.14%)</title><rect x="870.8" y="245" width="1.7" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="873.82" y="255.5" ></text>
</g>
<g >
<title>`__gmpz_sub (3 samples, 0.07%)</title><rect x="822.2" y="245" width="0.8" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="825.19" y="255.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (3 samples, 0.07%)</title><rect x="700.1" y="197" width="0.8" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="703.06" y="207.5" ></text>
</g>
<g >
<title>`GC_end_stubborn_change (1 samples, 0.02%)</title><rect x="564.2" y="277" width="0.3" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text  x="567.23" y="287.5" ></text>
</g>
<g >
<title>`core::clasp_to_mpz(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="776.9" y="277" width="0.3" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="779.92" y="287.5" ></text>
</g>
<g >
<title>`cc_rewind_va_list (3 samples, 0.07%)</title><rect x="499.4" y="277" width="0.8" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="502.38" y="287.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.02%)</title><rect x="889.3" y="293" width="0.2" height="15.0" fill="rgb(230,93,93)" rx="2" ry="2" />
<text  x="892.27" y="303.5" ></text>
</g>
<g >
<title>`malloc (10 samples, 0.24%)</title><rect x="816.3" y="213" width="2.8" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="819.32" y="223.5" ></text>
</g>
<g >
<title>`__cxa_throw (219 samples, 5.19%)</title><rect x="657.6" y="277" width="61.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="660.57" y="287.5" >`__cxa..</text>
</g>
<g >
<title>`unw_get_proc_info (1 samples, 0.02%)</title><rect x="1024.5" y="213" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1027.54" y="223.5" ></text>
</g>
<g >
<title>`GC_get_first_part (2 samples, 0.05%)</title><rect x="913.9" y="229" width="0.5" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="916.87" y="239.5" ></text>
</g>
<g >
<title>`GC_add_map_entry (1 samples, 0.02%)</title><rect x="465.8" y="197" width="0.3" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="468.85" y="207.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="1027.3" y="181" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="1030.34" y="191.5" ></text>
</g>
<g >
<title>`libunwind::CompactUnwinder_x86_64&lt;libunwind::LocalAddressSpace&gt; (13 samples, 0.31%)</title><rect x="673.2" y="229" width="3.7" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="676.23" y="239.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (4 samples, 0.09%)</title><rect x="913.3" y="245" width="1.1" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="916.31" y="255.5" ></text>
</g>
<g >
<title>`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc (2 samples, 0.05%)</title><rect x="10.3" y="773" width="0.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="13.28" y="783.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (7 samples, 0.17%)</title><rect x="1083.5" y="261" width="2.0" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="1086.51" y="271.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (23 samples, 0.54%)</title><rect x="1006.1" y="245" width="6.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1009.10" y="255.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (28 samples, 0.66%)</title><rect x="963.6" y="277" width="7.8" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="966.61" y="287.5" ></text>
</g>
<g >
<title>`default_zone_free_definite_size (1 samples, 0.02%)</title><rect x="873.3" y="261" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="876.34" y="271.5" ></text>
</g>
<g >
<title>`GC_build_fl (1 samples, 0.02%)</title><rect x="1136.9" y="357" width="0.3" height="15.0" fill="rgb(225,86,86)" rx="2" ry="2" />
<text  x="1139.90" y="367.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (28 samples, 0.66%)</title><rect x="678.0" y="197" width="7.8" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="680.98" y="207.5" ></text>
</g>
<g >
<title>`AUTO-FLUSH-LOOP^SWANK/BACKEND^FN^^ (33 samples, 0.78%)</title><rect x="10.0" y="981" width="9.2" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="13.00" y="991.5" ></text>
</g>
<g >
<title>`core::eformat_read_char(gctools::smart_ptr&lt;core::T_O&gt;) (39 samples, 0.92%)</title><rect x="60.3" y="309" width="10.9" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="63.31" y="319.5" ></text>
</g>
<g >
<title>`libunwind::CompactUnwinder_x86_64&lt;libunwind::LocalAddressSpace&gt; (10 samples, 0.24%)</title><rect x="727.4" y="245" width="2.8" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="730.45" y="255.5" ></text>
</g>
<g >
<title>`std::__1::chrono::steady_clock::now() (6 samples, 0.14%)</title><rect x="1058.9" y="309" width="1.7" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="1061.92" y="319.5" ></text>
</g>
<g >
<title>`_Unwind_SetGR (1 samples, 0.02%)</title><rect x="963.6" y="261" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="966.61" y="271.5" ></text>
</g>
<g >
<title>`_Unwind_GetIP (1 samples, 0.02%)</title><rect x="629.9" y="213" width="0.3" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="632.91" y="223.5" ></text>
</g>
<g >
<title>`GC_install_header (2 samples, 0.05%)</title><rect x="913.9" y="213" width="0.5" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="916.87" y="223.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (114 samples, 2.70%)</title><rect x="196.7" y="277" width="31.9" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="199.70" y="287.5" >`c..</text>
</g>
<g >
<title>`SYNTAX-TYPE^ECLECTOR.READTABLE^((READTABLE T))^METHOD^^ (24 samples, 0.57%)</title><rect x="1112.0" y="357" width="6.7" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="1115.02" y="367.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (3 samples, 0.07%)</title><rect x="707.9" y="229" width="0.8" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="710.88" y="239.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="823.0" y="245" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="826.03" y="255.5" ></text>
</g>
<g >
<title>`GC_build_fl (3 samples, 0.07%)</title><rect x="1158.4" y="309" width="0.9" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="1161.42" y="319.5" ></text>
</g>
<g >
<title>`core::StrWNs_O::make(unsigned long, int, bool, gctools::smart_p (5 samples, 0.12%)</title><rect x="92.4" y="277" width="1.4" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="95.45" y="287.5" ></text>
</g>
<g >
<title>`CHAR-INVALID-P^ECLECTOR.READER^FN^^ (4 samples, 0.09%)</title><rect x="301.8" y="325" width="1.1" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="304.79" y="335.5" ></text>
</g>
<g >
<title>`cc_TLSymbolValue (1 samples, 0.02%)</title><rect x="1181.6" y="453" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1184.62" y="463.5" ></text>
</g>
<g >
<title>`__gmpz_cmp_ui (1 samples, 0.02%)</title><rect x="821.4" y="245" width="0.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="824.35" y="255.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.02%)</title><rect x="1158.1" y="293" width="0.3" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="1161.14" y="303.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="716.3" y="197" width="0.2" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="719.27" y="207.5" ></text>
</g>
<g >
<title>`GC_allochblk (3 samples, 0.07%)</title><rect x="101.4" y="197" width="0.8" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="104.39" y="207.5" ></text>
</g>
<g >
<title>`cc_unwind (2 samples, 0.05%)</title><rect x="1106.4" y="341" width="0.6" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="1109.43" y="351.5" ></text>
</g>
<g >
<title>`core::coerce::inputStreamDesignator(gctools::smart_ptr&lt;core::T_ (4 samples, 0.09%)</title><rect x="290.6" y="309" width="1.1" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="293.61" y="319.5" ></text>
</g>
<g >
<title>`flockfile (2 samples, 0.05%)</title><rect x="63.4" y="261" width="0.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="66.38" y="271.5" ></text>
</g>
<g >
<title>`CONVERT-ACCORDING-TO-READTABLE-CASE^ECLECTOR.READER^FN^^ (587 samples, 13.90%)</title><rect x="367.5" y="309" width="164.0" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="370.47" y="319.5" >`CONVERT-ACCORDING-TO..</text>
</g>
<g >
<title>`core::clasp_gcd(gctools::smart_ptr&lt;core::Integer_O&gt;, gctools::s (2 samples, 0.05%)</title><rect x="866.6" y="213" width="0.6" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="869.63" y="223.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="49.1" y="373" width="0.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="52.13" y="383.5" ></text>
</g>
<g >
<title>`wrapped_cl__float_Real_spT_sp (36 samples, 0.85%)</title><rect x="614.3" y="277" width="10.0" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="617.25" y="287.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.05%)</title><rect x="559.2" y="261" width="0.6" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="562.19" y="271.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.05%)</title><rect x="868.3" y="229" width="0.6" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="871.31" y="239.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$__gmpz_cmp_si (1 samples, 0.02%)</title><rect x="858.0" y="245" width="0.2" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="860.97" y="255.5" ></text>
</g>
<g >
<title>`malloc (4 samples, 0.09%)</title><rect x="991.3" y="277" width="1.1" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="994.28" y="287.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.02%)</title><rect x="790.1" y="197" width="0.2" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="793.05" y="207.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (16 samples, 0.38%)</title><rect x="1030.1" y="261" width="4.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="1033.13" y="271.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (1 samples, 0.02%)</title><rect x="1001.6" y="261" width="0.3" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="1004.62" y="271.5" ></text>
</g>
<g >
<title>`core::Cons_O::length() const (2 samples, 0.05%)</title><rect x="1163.2" y="405" width="0.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="1166.17" y="415.5" ></text>
</g>
<g >
<title>`core::Ratio_O::as_double_() const (4 samples, 0.09%)</title><rect x="617.9" y="245" width="1.1" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="620.89" y="255.5" ></text>
</g>
<g >
<title>`__gmpz_clear (1 samples, 0.02%)</title><rect x="809.9" y="277" width="0.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="812.90" y="287.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (2 samples, 0.05%)</title><rect x="498.8" y="277" width="0.6" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="501.83" y="287.5" ></text>
</g>
<g >
<title>`wrapped_cl__char_upcase_Character_sp (6 samples, 0.14%)</title><rect x="511.1" y="277" width="1.7" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="514.12" y="287.5" ></text>
</g>
<g >
<title>`GC_end_stubborn_change (1 samples, 0.02%)</title><rect x="457.5" y="245" width="0.2" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="460.46" y="255.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (214 samples, 5.07%)</title><rect x="434.8" y="261" width="59.8" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="437.82" y="271.5" >`gctoo..</text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="889.5" y="293" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="892.55" y="303.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (4 samples, 0.09%)</title><rect x="755.4" y="213" width="1.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="758.40" y="223.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="1006.1" y="229" width="0.3" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="1009.10" y="239.5" ></text>
</g>
<g >
<title>`tiny_malloc_from_free_list (2 samples, 0.05%)</title><rect x="818.6" y="149" width="0.5" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="821.56" y="159.5" ></text>
</g>
<g >
<title>`unw_get_reg (1 samples, 0.02%)</title><rect x="1035.2" y="261" width="0.2" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="1038.16" y="271.5" ></text>
</g>
<g >
<title>`free (5 samples, 0.12%)</title><rect x="885.9" y="293" width="1.4" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="888.92" y="303.5" ></text>
</g>
<g >
<title>`PROCESS-REQUESTS^SWANK^FN^^ (4,188 samples, 99.19%)</title><rect x="19.2" y="837" width="1170.5" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="22.22" y="847.5" >`PROCESS-REQUESTS^SWANK^FN^^</text>
</g>
<g >
<title>`core::log_operation_2op(core::boole_ops, gctools::smart_ptr&lt;cor (2 samples, 0.05%)</title><rect x="328.9" y="261" width="0.6" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="331.90" y="271.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (35 samples, 0.83%)</title><rect x="730.8" y="229" width="9.8" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="733.80" y="239.5" ></text>
</g>
<g >
<title>`MAKE-VECTOR^CORE^FN^^ (4 samples, 0.09%)</title><rect x="108.4" y="325" width="1.1" height="15.0" fill="rgb(57,171,171)" rx="2" ry="2" />
<text  x="111.38" y="335.5" ></text>
</g>
<g >
<title>`INTERPRET-DTREE-PROGRAM^CLOS^FN^^ (1 samples, 0.02%)</title><rect x="1133.3" y="421" width="0.2" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="1136.26" y="431.5" ></text>
</g>
<g >
<title>`core::core__vset(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_ (1 samples, 0.02%)</title><rect x="411.1" y="261" width="0.2" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="414.07" y="271.5" ></text>
</g>
<g >
<title>`core::core__sl_boundp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="17.5" y="885" width="0.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="20.55" y="895.5" ></text>
</g>
<g >
<title>`unw_init_local (17 samples, 0.40%)</title><rect x="986.5" y="277" width="4.8" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="989.53" y="287.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$__gmpz_clear (1 samples, 0.02%)</title><rect x="851.8" y="277" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="854.82" y="287.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="701.2" y="213" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="704.17" y="223.5" ></text>
</g>
<g >
<title>`core::cl__read_char(gctools::smart_ptr&lt;core::T_O&gt;, gctools::sma (4 samples, 0.09%)</title><rect x="239.5" y="325" width="1.1" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="242.46" y="335.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (1 samples, 0.02%)</title><rect x="1184.1" y="469" width="0.3" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="1187.13" y="479.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (6 samples, 0.14%)</title><rect x="279.4" y="261" width="1.7" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="282.43" y="271.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.02%)</title><rect x="1066.7" y="309" width="0.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1069.75" y="319.5" ></text>
</g>
<g >
<title>`libunwind::CompactUnwinder_x86_64&lt;libunwind::LocalAddressSpace&gt; (1 samples, 0.02%)</title><rect x="971.4" y="277" width="0.3" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="974.44" y="287.5" ></text>
</g>
<g >
<title>`NORMALIZE-TYPE^CORE^FN^^ (44 samples, 1.04%)</title><rect x="590.5" y="277" width="12.3" height="15.0" fill="rgb(103,213,213)" rx="2" ry="2" />
<text  x="593.50" y="287.5" ></text>
</g>
<g >
<title>`libunwind::CompactUnwinder_x86_64&lt;libunwind::LocalAddressSpace&gt; (11 samples, 0.26%)</title><rect x="1001.9" y="261" width="3.1" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="1004.90" y="271.5" ></text>
</g>
<g >
<title>`tlv_get_addr (3 samples, 0.07%)</title><rect x="1099.2" y="325" width="0.8" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1102.17" y="335.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (26 samples, 0.62%)</title><rect x="733.3" y="197" width="7.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="736.32" y="207.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.05%)</title><rect x="409.7" y="229" width="0.5" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="412.67" y="239.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (23 samples, 0.54%)</title><rect x="1035.7" y="245" width="6.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="1038.72" y="255.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.02%)</title><rect x="622.9" y="245" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="625.92" y="255.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.05%)</title><rect x="142.2" y="261" width="0.6" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="145.20" y="271.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="698.9" y="181" width="0.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="701.94" y="191.5" ></text>
</g>
<g >
<title>`GC_build_fl (2 samples, 0.05%)</title><rect x="566.7" y="245" width="0.6" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="569.74" y="255.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (10 samples, 0.24%)</title><rect x="579.6" y="277" width="2.8" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="582.60" y="287.5" ></text>
</g>
<g >
<title>`GC_is_black_listed (5 samples, 0.12%)</title><rect x="472.6" y="181" width="1.4" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="475.55" y="191.5" ></text>
</g>
<g >
<title>`__cxa_decrement_exception_refcount (1 samples, 0.02%)</title><rect x="958.3" y="325" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="961.30" y="335.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="975.1" y="213" width="0.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="978.07" y="223.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_value(core::Symbol_O co (2 samples, 0.05%)</title><rect x="1105.9" y="325" width="0.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="1108.87" y="335.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (2 samples, 0.05%)</title><rect x="916.1" y="245" width="0.6" height="15.0" fill="rgb(225,86,86)" rx="2" ry="2" />
<text  x="919.10" y="255.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$cm_vref (1 samples, 0.02%)</title><rect x="534.0" y="309" width="0.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="537.04" y="319.5" ></text>
</g>
<g >
<title>`unw_set_reg (1 samples, 0.02%)</title><rect x="700.9" y="197" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="703.90" y="207.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (7 samples, 0.17%)</title><rect x="783.6" y="181" width="2.0" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="786.62" y="191.5" ></text>
</g>
<g >
<title>`core::contagen_mul(gctools::smart_ptr&lt;core::Number_O&gt;, gctools: (1 samples, 0.02%)</title><rect x="771.6" y="293" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="774.61" y="303.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (6 samples, 0.14%)</title><rect x="649.5" y="197" width="1.6" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="652.47" y="207.5" ></text>
</g>
<g >
<title>`__cxxabiv1::set_registers(_Unwind_Exception*, _Unwind_Context*, (4 samples, 0.09%)</title><rect x="700.1" y="213" width="1.1" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="703.06" y="223.5" ></text>
</g>
<g >
<title>`READ-CHAR-HANDLING-EOF^ECLECTOR.READER^FN^^ (3 samples, 0.07%)</title><rect x="57.5" y="357" width="0.9" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="60.51" y="367.5" ></text>
</g>
<g >
<title>`core::apply1_inner_valist(gctools::smart_ptr&lt;core::Function_O&gt;, (3,884 samples, 91.99%)</title><rect x="45.5" y="405" width="1085.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="48.50" y="415.5" >`core::apply1_inner_valist(gctools::smart_ptr&lt;core::Function_O&gt;,</text>
</g>
<g >
<title>`READTABLE-CASE^ECLECTOR.READTABLE^((READTABLE))^METHOD^^ (4 samples, 0.09%)</title><rect x="522.0" y="293" width="1.1" height="15.0" fill="rgb(81,194,194)" rx="2" ry="2" />
<text  x="525.02" y="303.5" ></text>
</g>
<g >
<title>`NCONC^COMMON-LISP^FN^^ (8 samples, 0.19%)</title><rect x="11.1" y="933" width="2.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="14.12" y="943.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleCharacterString_O, int, (1 samples, 0.02%)</title><rect x="583.8" y="277" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="586.79" y="287.5" ></text>
</g>
<g >
<title>`core::core__vref(gctools::smart_ptr&lt;core::AbstractSimpleVector_ (2 samples, 0.05%)</title><rect x="507.8" y="277" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="510.77" y="287.5" ></text>
</g>
<g >
<title>`__gmpn_mul_1 (1 samples, 0.02%)</title><rect x="777.8" y="261" width="0.2" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="780.75" y="271.5" ></text>
</g>
<g >
<title>`core::maybeFixRehashThreshold(double) (2 samples, 0.05%)</title><rect x="1156.2" y="357" width="0.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="1159.18" y="367.5" ></text>
</g>
<g >
<title>`wrapped_core__logand_2op_Integer_spInteger_sp (2 samples, 0.05%)</title><rect x="328.9" y="277" width="0.6" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="331.90" y="287.5" ></text>
</g>
<g >
<title>`core::core__make_vector(gctools::smart_ptr&lt;core::T_O&gt;, unsigned (51 samples, 1.21%)</title><rect x="93.8" y="277" width="14.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="96.85" y="287.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (3 samples, 0.07%)</title><rect x="101.4" y="181" width="0.8" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="104.39" y="191.5" ></text>
</g>
<g >
<title>`core::apply1_inner_valist(gctools::smart_ptr&lt;core::Function_O&gt;, (2 samples, 0.05%)</title><rect x="1170.2" y="421" width="0.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="1173.16" y="431.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (3 samples, 0.07%)</title><rect x="648.4" y="229" width="0.8" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="651.35" y="239.5" ></text>
</g>
<g >
<title>`_Unwind_GetLanguageSpecificData (2 samples, 0.05%)</title><rect x="665.7" y="213" width="0.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="668.68" y="223.5" ></text>
</g>
<g >
<title>`malloc (4 samples, 0.09%)</title><rect x="854.9" y="245" width="1.1" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="857.89" y="255.5" ></text>
</g>
<g >
<title>`core::clasp_expt(gctools::smart_ptr&lt;core::Number_O&gt;, gctools::s (3 samples, 0.07%)</title><rect x="773.6" y="277" width="0.8" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="776.56" y="287.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (8 samples, 0.19%)</title><rect x="100.8" y="213" width="2.3" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="103.83" y="223.5" ></text>
</g>
<g >
<title>`_Unwind_GetLanguageSpecificData (2 samples, 0.05%)</title><rect x="1024.0" y="229" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="1026.98" y="239.5" ></text>
</g>
<g >
<title>`core::Rational_O::create(__gmp_expr&lt;__mpz_struct [1], __mpz_str (54 samples, 1.28%)</title><rect x="858.0" y="261" width="15.1" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="860.97" y="271.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.02%)</title><rect x="567.9" y="277" width="0.2" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="570.86" y="287.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$unw_init_local (1 samples, 0.02%)</title><rect x="962.5" y="309" width="0.3" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="965.50" y="319.5" ></text>
</g>
<g >
<title>`wrapped_cl__read_T_spT_spT_spT_sp (4,179 samples, 98.98%)</title><rect x="20.6" y="501" width="1168.0" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="23.62" y="511.5" >`wrapped_cl__read_T_spT_spT_spT_sp</text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="1108.7" y="341" width="0.2" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="1111.67" y="351.5" ></text>
</g>
<g >
<title>`GC_clear_stack (2 samples, 0.05%)</title><rect x="916.1" y="261" width="0.6" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="919.10" y="271.5" ></text>
</g>
<g >
<title>`tlv_get_addr (6 samples, 0.14%)</title><rect x="837.8" y="229" width="1.7" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="840.84" y="239.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (4 samples, 0.09%)</title><rect x="753.4" y="197" width="1.2" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="756.44" y="207.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (19 samples, 0.45%)</title><rect x="1133.5" y="421" width="5.4" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="1136.54" y="431.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Nehalem (1 samples, 0.02%)</title><rect x="141.9" y="261" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="144.92" y="271.5" ></text>
</g>
<g >
<title>`free_tiny (18 samples, 0.43%)</title><rect x="842.3" y="245" width="5.0" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="845.32" y="255.5" ></text>
</g>
<g >
<title>`unw_init_local (8 samples, 0.19%)</title><rect x="1056.7" y="293" width="2.2" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="1059.68" y="303.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (12 samples, 0.28%)</title><rect x="640.5" y="197" width="3.4" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="643.53" y="207.5" ></text>
</g>
<g >
<title>`GC_malloc_atomic (1 samples, 0.02%)</title><rect x="95.5" y="245" width="0.3" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="98.52" y="255.5" ></text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="624.6" y="293" width="0.3" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="627.59" y="303.5" ></text>
</g>
<g >
<title>`core::cl__values(gctools::smart_ptr&lt;core::Vaslist&gt;) (16 samples, 0.38%)</title><rect x="418.6" y="261" width="4.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="421.61" y="271.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (22 samples, 0.52%)</title><rect x="1006.4" y="229" width="6.1" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="1009.38" y="239.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$memcpy (1 samples, 0.02%)</title><rect x="697.8" y="229" width="0.3" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="700.82" y="239.5" ></text>
</g>
<g >
<title>`unwind_phase2 (73 samples, 1.73%)</title><rect x="1021.7" y="277" width="20.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1024.75" y="287.5" ></text>
</g>
<g >
<title>`gctools::multiple_values&lt;core::T_O&gt; core::eval::applyLastArgsPL (4,222 samples, 100.00%)</title><rect x="10.0" y="997" width="1180.0" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" >`gctools::multiple_values&lt;core::T_O&gt; core::eval::applyLastArgsPL</text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (11 samples, 0.26%)</title><rect x="536.0" y="309" width="3.1" height="15.0" fill="rgb(59,173,173)" rx="2" ry="2" />
<text  x="539.00" y="319.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.05%)</title><rect x="621.0" y="213" width="0.5" height="15.0" fill="rgb(235,100,100)" rx="2" ry="2" />
<text  x="623.96" y="223.5" ></text>
</g>
<g >
<title>`clock_gettime_nsec_np (5 samples, 0.12%)</title><rect x="903.5" y="261" width="1.4" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="906.52" y="271.5" ></text>
</g>
<g >
<title>`core::clasp_integer_divide(gctools::smart_ptr&lt;core::Integer_O&gt;, (3 samples, 0.07%)</title><rect x="835.0" y="213" width="0.9" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="838.05" y="223.5" ></text>
</g>
<g >
<title>`MAKE-INTEGER-ACCUMULATOR^ECLECTOR.READER^FN^^ (11 samples, 0.26%)</title><rect x="953.0" y="325" width="3.1" height="15.0" fill="rgb(62,176,176)" rx="2" ry="2" />
<text  x="955.99" y="335.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.02%)</title><rect x="880.9" y="213" width="0.3" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="883.89" y="223.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (26 samples, 0.62%)</title><rect x="974.8" y="245" width="7.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="977.79" y="255.5" ></text>
</g>
<g >
<title>`core::Integer_O::create(long long) (3 samples, 0.07%)</title><rect x="942.7" y="293" width="0.8" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="945.65" y="303.5" ></text>
</g>
<g >
<title>`core::eformat_read_char(gctools::smart_ptr&lt;core::T_O&gt;) (157 samples, 3.72%)</title><rect x="244.2" y="293" width="43.9" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="247.21" y="303.5" >`cor..</text>
</g>
<g >
<title>`core::Ratio_O::as_double_() const (2 samples, 0.05%)</title><rect x="614.8" y="261" width="0.6" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="617.81" y="271.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="785.6" y="197" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="788.58" y="207.5" ></text>
</g>
<g >
<title>`MAKE-ARRAY^COMMON-LISP^FN^^ (149 samples, 3.53%)</title><rect x="82.7" y="341" width="41.6" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="85.67" y="351.5" >`MA..</text>
</g>
<g >
<title>`unw_get_proc_info (2 samples, 0.05%)</title><rect x="717.7" y="261" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="720.66" y="271.5" ></text>
</g>
<g >
<title>`_Unwind_GetIP (2 samples, 0.05%)</title><rect x="994.9" y="245" width="0.6" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="997.92" y="255.5" ></text>
</g>
<g >
<title>all (4,222 samples, 100%)</title><rect x="10.0" y="1269" width="1180.0" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="13.00" y="1279.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.07%)</title><rect x="1136.3" y="389" width="0.9" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="1139.34" y="399.5" ></text>
</g>
<g >
<title>`PUSH-CHAR^ECLECTOR.READER^FN^^ (1 samples, 0.02%)</title><rect x="57.2" y="357" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="60.23" y="367.5" ></text>
</g>
<g >
<title>`_pthread_mutex_firstfit_unlock_slow (1 samples, 0.02%)</title><rect x="69.5" y="229" width="0.3" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="72.53" y="239.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (29 samples, 0.69%)</title><rect x="677.7" y="213" width="8.1" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="680.70" y="223.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.02%)</title><rect x="1136.6" y="341" width="0.3" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="1139.62" y="351.5" ></text>
</g>
<g >
<title>`cc_protect_alloca (2 samples, 0.05%)</title><rect x="44.9" y="405" width="0.6" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="47.94" y="415.5" ></text>
</g>
<g >
<title>`wrapped_cl__read_char_T_spT_spT_spT_sp (195 samples, 4.62%)</title><rect x="240.9" y="325" width="54.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="243.86" y="335.5" >`wrap..</text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="494.9" y="261" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="497.91" y="271.5" ></text>
</g>
<g >
<title>`__cxa_allocate_exception (3 samples, 0.07%)</title><rect x="626.6" y="293" width="0.8" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="629.55" y="303.5" ></text>
</g>
<g >
<title>`core::clasp_to_mpz(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="873.1" y="261" width="0.2" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="876.06" y="271.5" ></text>
</g>
<g >
<title>`core::cl__values(gctools::smart_ptr&lt;core::Vaslist&gt;) (1 samples, 0.02%)</title><rect x="507.5" y="277" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="510.49" y="287.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="138.3" y="261" width="0.3" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="141.29" y="271.5" ></text>
</g>
<g >
<title>`dyld::findImageContainingAddress(void const*) (1 samples, 0.02%)</title><rect x="706.5" y="181" width="0.3" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="709.49" y="191.5" ></text>
</g>
<g >
<title>`__cxxabiv1::set_registers(_Unwind_Exception*, _Unwind_Context*, (2 samples, 0.05%)</title><rect x="1026.2" y="245" width="0.6" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="1029.22" y="255.5" ></text>
</g>
<g >
<title>`CONVERT-ACCORDING-TO-READTABLE-CASE^ECLECTOR.READER^FN^^ (2 samples, 0.05%)</title><rect x="302.9" y="325" width="0.6" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="305.90" y="335.5" ></text>
</g>
<g >
<title>`GC_continue_reclaim (1 samples, 0.02%)</title><rect x="1147.2" y="245" width="0.3" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="1150.24" y="255.5" ></text>
</g>
<g >
<title>`_pthread_start (4,222 samples, 100.00%)</title><rect x="10.0" y="1237" width="1180.0" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="13.00" y="1247.5" >`_pthread_start</text>
</g>
<g >
<title>`core::Ratio_O::setf_numerator_denominator(gctools::smart_ptr&lt;co (2 samples, 0.05%)</title><rect x="866.6" y="229" width="0.6" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="869.63" y="239.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="579.9" y="261" width="0.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="582.88" y="271.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="329.7" y="277" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="332.73" y="287.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (3 samples, 0.07%)</title><rect x="990.4" y="245" width="0.9" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="993.45" y="255.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (82 samples, 1.94%)</title><rect x="628.5" y="277" width="22.9" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="631.51" y="287.5" >`..</text>
</g>
<g >
<title>`core::input_stream_read_byte8(gctools::smart_ptr&lt;core::T_O&gt;, un (24 samples, 0.57%)</title><rect x="63.1" y="277" width="6.7" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="66.10" y="287.5" ></text>
</g>
<g >
<title>`FLOAT^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="624.3" y="293" width="0.3" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="627.32" y="303.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="105.9" y="181" width="0.2" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="108.86" y="191.5" ></text>
</g>
<g >
<title>`unw_set_reg (1 samples, 0.02%)</title><rect x="966.4" y="245" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="969.41" y="255.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (10 samples, 0.24%)</title><rect x="1096.4" y="325" width="2.8" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="1099.37" y="335.5" ></text>
</g>
<g >
<title>`free (6 samples, 0.14%)</title><rect x="797.6" y="245" width="1.7" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="800.60" y="255.5" ></text>
</g>
<g >
<title>`szone_realloc (1 samples, 0.02%)</title><rect x="781.9" y="197" width="0.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="784.95" y="207.5" ></text>
</g>
<g >
<title>`wrapped_cl__char_code_Character_sp (3 samples, 0.07%)</title><rect x="932.9" y="309" width="0.8" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="935.87" y="319.5" ></text>
</g>
<g >
<title>`tlv_get_addr (3 samples, 0.07%)</title><rect x="960.5" y="309" width="0.9" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="963.54" y="319.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (1 samples, 0.02%)</title><rect x="644.2" y="197" width="0.2" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="647.16" y="207.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="1017.8" y="229" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1020.84" y="239.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_value(core::Symbol_O co (1 samples, 0.02%)</title><rect x="1166.8" y="405" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="1169.80" y="415.5" ></text>
</g>
<g >
<title>`GC_notify_or_invoke_finalizers (1 samples, 0.02%)</title><rect x="485.4" y="229" width="0.3" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="488.41" y="239.5" ></text>
</g>
<g >
<title>`__cxa_begin_catch (2 samples, 0.05%)</title><rect x="1118.7" y="357" width="0.6" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="1121.73" y="367.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (1 samples, 0.02%)</title><rect x="701.5" y="165" width="0.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="704.45" y="175.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (6 samples, 0.14%)</title><rect x="896.8" y="229" width="1.7" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="899.82" y="239.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$_platform_memmove (1 samples, 0.02%)</title><rect x="697.5" y="229" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="700.54" y="239.5" ></text>
</g>
<g >
<title>`core::cl__force_output(gctools::smart_ptr&lt;core::T_O&gt;) (19 samples, 0.45%)</title><rect x="13.4" y="949" width="5.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="16.35" y="959.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (3 samples, 0.07%)</title><rect x="483.7" y="149" width="0.9" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="486.73" y="159.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleCharacterString_O, int, (18 samples, 0.43%)</title><rect x="146.1" y="309" width="5.0" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="149.11" y="319.5" ></text>
</g>
<g >
<title>`READ-CHAR^ECLECTOR.BASE^FN^^ (56 samples, 1.33%)</title><rect x="58.6" y="357" width="15.7" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="61.63" y="367.5" ></text>
</g>
<g >
<title>`core::Integer_O::create(__gmp_expr&lt;__mpz_struct [1], __mpz_stru (1 samples, 0.02%)</title><rect x="824.1" y="245" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="827.15" y="255.5" ></text>
</g>
<g >
<title>`core::apply0_inner_list(gctools::smart_ptr&lt;core::Function_O&gt;, g (4,188 samples, 99.19%)</title><rect x="19.2" y="821" width="1170.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="22.22" y="831.5" >`core::apply0_inner_list(gctools::smart_ptr&lt;core::Function_O&gt;, g</text>
</g>
<g >
<title>`DYLD-STUB$$cc_multipleValuesArrayAddress (1 samples, 0.02%)</title><rect x="533.8" y="309" width="0.2" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="536.76" y="319.5" ></text>
</g>
<g >
<title>`chem::Chain_O::type() (2 samples, 0.05%)</title><rect x="614.3" y="261" width="0.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="617.25" y="271.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (27 samples, 0.64%)</title><rect x="605.3" y="277" width="7.6" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="608.31" y="287.5" ></text>
</g>
<g >
<title>`cc_enclose (2 samples, 0.05%)</title><rect x="15.6" y="885" width="0.5" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="18.59" y="895.5" ></text>
</g>
<g >
<title>`core::clasp_gcd(gctools::smart_ptr&lt;core::Integer_O&gt;, gctools::s (19 samples, 0.45%)</title><rect x="791.2" y="213" width="5.3" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="794.17" y="223.5" ></text>
</g>
<g >
<title>`tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="816.3" y="165" width="0.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="819.32" y="175.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleVector_O, gctools::smar (8 samples, 0.19%)</title><rect x="120.1" y="309" width="2.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="123.12" y="319.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.02%)</title><rect x="815.5" y="245" width="0.3" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="818.49" y="255.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$_platform_memmove (1 samples, 0.02%)</title><rect x="252.0" y="229" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="255.04" y="239.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (45 samples, 1.07%)</title><rect x="201.7" y="261" width="12.6" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="204.73" y="271.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (2 samples, 0.05%)</title><rect x="692.2" y="197" width="0.6" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="695.23" y="207.5" ></text>
</g>
<g >
<title>`__gmpn_divrem_1 (1 samples, 0.02%)</title><rect x="786.1" y="213" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="789.14" y="223.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (13 samples, 0.31%)</title><rect x="967.0" y="213" width="3.6" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="969.97" y="223.5" ></text>
</g>
<g >
<title>`cc_landingpadUnwindMatchFrameElseRethrow (1 samples, 0.02%)</title><rect x="1120.1" y="357" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1123.13" y="367.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.02%)</title><rect x="119.0" y="293" width="0.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="122.00" y="303.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_core__vref_AbstractSimpleVector_spsize_t (4 samples, 0.09%)</title><rect x="413.3" y="277" width="1.1" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="416.30" y="287.5" ></text>
</g>
<g >
<title>`cc_makeCell (27 samples, 0.64%)</title><rect x="561.2" y="293" width="7.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="564.15" y="303.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="994.9" y="229" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="997.92" y="239.5" ></text>
</g>
<g >
<title>`__cxa_begin_catch (2 samples, 0.05%)</title><rect x="957.7" y="325" width="0.6" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="960.75" y="335.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="485.7" y="229" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="488.69" y="239.5" ></text>
</g>
<g >
<title>`GC_build_fl (1 samples, 0.02%)</title><rect x="105.9" y="197" width="0.2" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="108.86" y="207.5" ></text>
</g>
<g >
<title>`unw_get_reg (1 samples, 0.02%)</title><rect x="1023.7" y="213" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1026.70" y="223.5" ></text>
</g>
<g >
<title>`__cxa_throw (180 samples, 4.26%)</title><rect x="992.4" y="309" width="50.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="995.40" y="319.5" >`__cx..</text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (2 samples, 0.05%)</title><rect x="488.8" y="245" width="0.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="491.76" y="255.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1154.5" y="293" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1157.50" y="303.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (1 samples, 0.02%)</title><rect x="356.6" y="293" width="0.2" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="359.57" y="303.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.05%)</title><rect x="539.6" y="309" width="0.6" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="542.63" y="319.5" ></text>
</g>
<g >
<title>`core::Unwind::Unwind(core::T_O*, unsigned long) (1 samples, 0.02%)</title><rect x="1060.9" y="325" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1063.88" y="335.5" ></text>
</g>
<g >
<title>`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc (2 samples, 0.05%)</title><rect x="10.3" y="549" width="0.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="13.28" y="559.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="484.0" y="85" width="0.3" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="487.01" y="95.5" ></text>
</g>
<g >
<title>`GC_get_first_part (1 samples, 0.02%)</title><rect x="1082.4" y="245" width="0.3" height="15.0" fill="rgb(208,61,61)" rx="2" ry="2" />
<text  x="1085.40" y="255.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (13 samples, 0.31%)</title><rect x="704.2" y="229" width="3.7" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="707.25" y="239.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (18 samples, 0.43%)</title><rect x="1036.3" y="213" width="5.0" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1039.28" y="223.5" ></text>
</g>
<g >
<title>`GC_add_map_entry (1 samples, 0.02%)</title><rect x="1081.8" y="245" width="0.3" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="1084.84" y="255.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.02%)</title><rect x="866.1" y="181" width="0.3" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="869.07" y="191.5" ></text>
</g>
<g >
<title>`free (5 samples, 0.12%)</title><rect x="840.9" y="245" width="1.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="843.92" y="255.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (3 samples, 0.07%)</title><rect x="900.5" y="293" width="0.8" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="903.45" y="303.5" ></text>
</g>
<g >
<title>`szone_size (1 samples, 0.02%)</title><rect x="782.2" y="213" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="785.23" y="223.5" ></text>
</g>
<g >
<title>`std::get_unexpected() (1 samples, 0.02%)</title><rect x="767.1" y="277" width="0.3" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="770.13" y="287.5" ></text>
</g>
<g >
<title>`cm_vref (6 samples, 0.14%)</title><rect x="926.2" y="309" width="1.6" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="929.16" y="319.5" ></text>
</g>
<g >
<title>`FDEFINITION^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="589.4" y="277" width="1.1" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="592.38" y="287.5" ></text>
</g>
<g >
<title>`wrapped_cl__char_code_Character_sp (11 samples, 0.26%)</title><rect x="359.6" y="293" width="3.1" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="362.64" y="303.5" ></text>
</g>
<g >
<title>`CALL-WITH-LOCK-HELD^SWANK/BACKEND^FN^^ (7 samples, 0.17%)</title><rect x="14.2" y="901" width="1.9" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="17.19" y="911.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (1 samples, 0.02%)</title><rect x="637.2" y="229" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="640.17" y="239.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="916.1" y="117" width="0.3" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="919.10" y="127.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (2 samples, 0.05%)</title><rect x="985.7" y="261" width="0.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="988.69" y="271.5" ></text>
</g>
<g >
<title>`unw_set_reg (11 samples, 0.26%)</title><rect x="1026.8" y="245" width="3.1" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1029.78" y="255.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (28 samples, 0.66%)</title><rect x="1146.7" y="293" width="7.8" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="1149.68" y="303.5" ></text>
</g>
<g >
<title>`ZEROP^COMMON-LISP^FN^^ (3 samples, 0.07%)</title><rect x="349.3" y="293" width="0.8" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="352.30" y="303.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::SimpleCharacterString_O&gt; gctools::GCOb (1 samples, 0.02%)</title><rect x="144.2" y="293" width="0.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="147.15" y="303.5" ></text>
</g>
<g >
<title>`READ-CHAR^COMMON-LISP^FN^^ (6 samples, 0.14%)</title><rect x="177.4" y="325" width="1.7" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="180.41" y="335.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (1 samples, 0.02%)</title><rect x="717.4" y="261" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="720.39" y="271.5" ></text>
</g>
<g >
<title>`wrapped_core__syntax_type_T_spCharacter_sp (6 samples, 0.14%)</title><rect x="295.9" y="325" width="1.7" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="298.92" y="335.5" ></text>
</g>
<g >
<title>`core::core__bignump(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="619.0" y="245" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="622.01" y="255.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleVector_O, gctools::smar (1 samples, 0.02%)</title><rect x="119.3" y="293" width="0.3" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="122.28" y="303.5" ></text>
</g>
<g >
<title>`__gmpz_get_si (2 samples, 0.05%)</title><rect x="821.6" y="245" width="0.6" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="824.63" y="255.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.02%)</title><rect x="529.6" y="293" width="0.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="532.57" y="303.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="568.1" y="277" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="571.14" y="287.5" ></text>
</g>
<g >
<title>`__gmpz_cdiv_qr (1 samples, 0.02%)</title><rect x="778.0" y="261" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="781.03" y="271.5" ></text>
</g>
<g >
<title>`rand (4 samples, 0.09%)</title><rect x="142.8" y="277" width="1.1" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="145.76" y="287.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (2 samples, 0.05%)</title><rect x="1125.2" y="325" width="0.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="1128.16" y="335.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="995.2" y="213" width="0.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="998.20" y="223.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Ivybridge (2 samples, 0.05%)</title><rect x="724.1" y="261" width="0.6" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="727.09" y="271.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::create(unsigned int, gctools::smart_ptr&lt;c (71 samples, 1.68%)</title><rect x="1142.2" y="373" width="19.9" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1145.21" y="383.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="1077.4" y="309" width="0.2" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="1080.37" y="319.5" ></text>
</g>
<g >
<title>`wrapped_core__logand_2op_Integer_spInteger_sp (11 samples, 0.26%)</title><rect x="346.2" y="277" width="3.1" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="349.22" y="287.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (17 samples, 0.40%)</title><rect x="986.5" y="261" width="4.8" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="989.53" y="271.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (3 samples, 0.07%)</title><rect x="600.8" y="245" width="0.9" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="603.84" y="255.5" ></text>
</g>
<g >
<title>`core::expt_zero(gctools::smart_ptr&lt;core::Number_O&gt;, gctools::sm (2 samples, 0.05%)</title><rect x="774.4" y="277" width="0.6" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="777.40" y="287.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (50 samples, 1.18%)</title><rect x="676.9" y="229" width="13.9" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="679.86" y="239.5" ></text>
</g>
<g >
<title>`GC_clear_hdr_marks (1 samples, 0.02%)</title><rect x="555.3" y="197" width="0.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="558.28" y="207.5" ></text>
</g>
<g >
<title>`STREAM-FORCE-OUTPUT^GRAY^((SLIME-OUTPUT-STREAM))^METHOD^^ (17 samples, 0.40%)</title><rect x="13.4" y="933" width="4.7" height="15.0" fill="rgb(59,174,174)" rx="2" ry="2" />
<text  x="16.35" y="943.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (12 samples, 0.28%)</title><rect x="579.3" y="293" width="3.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="582.32" y="303.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (11 samples, 0.26%)</title><rect x="594.4" y="245" width="3.1" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="597.41" y="255.5" ></text>
</g>
<g >
<title>`core::cl__fdefinition(gctools::smart_ptr&lt;core::T_O&gt;) (3 samples, 0.07%)</title><rect x="610.1" y="261" width="0.8" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="613.06" y="271.5" ></text>
</g>
<g >
<title>`flockfile (3 samples, 0.07%)</title><rect x="68.7" y="245" width="0.8" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="71.69" y="255.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleCharacterString_O, int, (1 samples, 0.02%)</title><rect x="411.6" y="245" width="0.3" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="414.62" y="255.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (10 samples, 0.24%)</title><rect x="816.3" y="181" width="2.8" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="819.32" y="191.5" ></text>
</g>
<g >
<title>`DIGIT-CHAR-P^COMMON-LISP^FN^^ (7 samples, 0.17%)</title><rect x="531.5" y="309" width="2.0" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="534.53" y="319.5" ></text>
</g>
<g >
<title>`READ-CHAR^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="59.7" y="341" width="0.3" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="62.75" y="351.5" ></text>
</g>
<g >
<title>`unwind_phase2 (100 samples, 2.37%)</title><rect x="963.3" y="293" width="28.0" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="966.33" y="303.5" >`..</text>
</g>
<g >
<title>`__cxxabiv1::__malloc_with_fallback(unsigned long) (4 samples, 0.09%)</title><rect x="991.3" y="293" width="1.1" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="994.28" y="303.5" ></text>
</g>
<g >
<title>`__gmpz_tdiv_qr (7 samples, 0.17%)</title><rect x="819.4" y="229" width="2.0" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="822.40" y="239.5" ></text>
</g>
<g >
<title>`wrapped_cl__gethash_T_spHashTableBase_spT_sp (2 samples, 0.05%)</title><rect x="602.2" y="261" width="0.6" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="605.24" y="271.5" ></text>
</g>
<g >
<title>`cm_vref (1 samples, 0.02%)</title><rect x="330.6" y="293" width="0.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="333.57" y="303.5" ></text>
</g>
<g >
<title>`core::frame_check(unsigned long) (138 samples, 3.27%)</title><rect x="722.4" y="277" width="38.6" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="725.42" y="287.5" >`co..</text>
</g>
<g >
<title>`core::contagen_div(gctools::smart_ptr&lt;core::Number_O&gt;, gctools: (1 samples, 0.02%)</title><rect x="771.3" y="293" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="774.33" y="303.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="558.9" y="261" width="0.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="561.92" y="271.5" ></text>
</g>
<g >
<title>`GC_build_fl (2 samples, 0.05%)</title><rect x="828.1" y="197" width="0.5" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text  x="831.06" y="207.5" ></text>
</g>
<g >
<title>`mach_timebase_info (3 samples, 0.07%)</title><rect x="763.8" y="229" width="0.8" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="766.78" y="239.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::machHeader() const (1 samples, 0.02%)</title><rect x="733.0" y="181" width="0.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="736.04" y="191.5" ></text>
</g>
<g >
<title>`__gmpz_cmp_ui (2 samples, 0.05%)</title><rect x="812.7" y="261" width="0.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="815.69" y="271.5" ></text>
</g>
<g >
<title>`malloc (1 samples, 0.02%)</title><rect x="786.7" y="229" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="789.70" y="239.5" ></text>
</g>
<g >
<title>`unw_get_reg (1 samples, 0.02%)</title><rect x="767.7" y="277" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="770.69" y="287.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (1 samples, 0.02%)</title><rect x="1051.9" y="245" width="0.3" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="1054.93" y="255.5" ></text>
</g>
<g >
<title>`TWO-ARG-*^CORE^FN^^ (6 samples, 0.14%)</title><rect x="882.8" y="309" width="1.7" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="885.84" y="319.5" ></text>
</g>
<g >
<title>`mach_timebase_info (1 samples, 0.02%)</title><rect x="1092.2" y="293" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1095.18" y="303.5" ></text>
</g>
<g >
<title>`_Unwind_GetIP (3 samples, 0.07%)</title><rect x="664.8" y="213" width="0.9" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="667.84" y="223.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_cl__read_T_spT_spT_spT_sp (1 samples, 0.02%)</title><rect x="19.2" y="517" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="22.22" y="527.5" ></text>
</g>
<g >
<title>`core::cl__length(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.05%)</title><rect x="1170.7" y="421" width="0.6" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="1173.72" y="431.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (6 samples, 0.14%)</title><rect x="647.5" y="245" width="1.7" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="650.51" y="255.5" ></text>
</g>
<g >
<title>`CHAR^COMMON-LISP^SETF^^ (2 samples, 0.05%)</title><rect x="373.3" y="293" width="0.6" height="15.0" fill="rgb(77,190,190)" rx="2" ry="2" />
<text  x="376.33" y="303.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (13 samples, 0.31%)</title><rect x="193.1" y="277" width="3.6" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="196.06" y="287.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (2 samples, 0.05%)</title><rect x="1115.7" y="309" width="0.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="1118.66" y="319.5" ></text>
</g>
<g >
<title>`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc (2 samples, 0.05%)</title><rect x="10.3" y="869" width="0.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="13.28" y="879.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (41 samples, 0.97%)</title><rect x="1144.7" y="341" width="11.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1147.72" y="351.5" ></text>
</g>
<g >
<title>`__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned  (1 samples, 0.02%)</title><rect x="699.5" y="197" width="0.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="702.50" y="207.5" ></text>
</g>
<g >
<title>`__gmpz_cmp_si (1 samples, 0.02%)</title><rect x="863.8" y="245" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="866.84" y="255.5" ></text>
</g>
<g >
<title>`__gmpz_cmp_ui (1 samples, 0.02%)</title><rect x="787.5" y="245" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="790.54" y="255.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="558.1" y="85" width="0.3" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="561.08" y="95.5" ></text>
</g>
<g >
<title>`core::template_Vector&lt;core::StrWNs_O, core::SimpleCharacterStri (1 samples, 0.02%)</title><rect x="151.1" y="309" width="0.3" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="154.14" y="319.5" ></text>
</g>
<g >
<title>`UPGRADED-ARRAY-ELEMENT-TYPE^COMMON-LISP^FN^^ (5 samples, 0.12%)</title><rect x="1062.0" y="341" width="1.4" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="1064.99" y="351.5" ></text>
</g>
<g >
<title>`mp::start_thread_inner(gctools::smart_ptr&lt;mp::Process_O&gt;, void* (4,222 samples, 100.00%)</title><rect x="10.0" y="1157" width="1180.0" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="13.00" y="1167.5" >`mp::start_thread_inner(gctools::smart_ptr&lt;mp::Process_O&gt;, void*</text>
</g>
<g >
<title>`HASH-EQL^CORE^FN^^ (23 samples, 0.54%)</title><rect x="111.5" y="309" width="6.4" height="15.0" fill="rgb(88,200,200)" rx="2" ry="2" />
<text  x="114.45" y="319.5" ></text>
</g>
<g >
<title>`szone_size (1 samples, 0.02%)</title><rect x="801.5" y="245" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="804.51" y="255.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.05%)</title><rect x="409.7" y="245" width="0.5" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="412.67" y="255.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.02%)</title><rect x="931.5" y="309" width="0.3" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="934.47" y="319.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleVector_int16_t_O, short (1 samples, 0.02%)</title><rect x="809.3" y="277" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="812.34" y="287.5" ></text>
</g>
<g >
<title>`wrapped_core__apply1_Function_spT_sp___________________________ (4 samples, 0.09%)</title><rect x="1177.4" y="421" width="1.1" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="1180.42" y="431.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.02%)</title><rect x="781.9" y="181" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="784.95" y="191.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (15 samples, 0.36%)</title><rect x="692.8" y="197" width="4.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="695.79" y="207.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (1 samples, 0.02%)</title><rect x="1042.2" y="293" width="0.2" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1045.15" y="303.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::set_thread_local_value(gctools::smar (1 samples, 0.02%)</title><rect x="1184.4" y="469" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="1187.41" y="479.5" ></text>
</g>
<g >
<title>`core::core__syntax_type(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (5 samples, 0.12%)</title><rect x="182.4" y="309" width="1.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="185.44" y="319.5" ></text>
</g>
<g >
<title>`core::contagen_mul(gctools::smart_ptr&lt;core::Number_O&gt;, gctools: (100 samples, 2.37%)</title><rect x="853.8" y="277" width="27.9" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="856.78" y="287.5" >`..</text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::SimpleCharacterString_O&gt; gctools::GCOb (15 samples, 0.36%)</title><rect x="138.6" y="277" width="4.2" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="141.56" y="287.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (5 samples, 0.12%)</title><rect x="277.5" y="229" width="1.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="280.47" y="239.5" ></text>
</g>
<g >
<title>`wrapped_cl__read_char_T_spT_spT_spT_sp (2 samples, 0.05%)</title><rect x="1121.2" y="357" width="0.6" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1124.25" y="367.5" ></text>
</g>
<g >
<title>`realloc (2 samples, 0.05%)</title><rect x="872.5" y="245" width="0.6" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="875.50" y="255.5" ></text>
</g>
<g >
<title>`SYMBOLP^COMMON-LISP^FN^^ (1 samples, 0.02%)</title><rect x="593.3" y="261" width="0.3" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="596.29" y="271.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (10 samples, 0.24%)</title><rect x="860.2" y="197" width="2.8" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="863.20" y="207.5" ></text>
</g>
<g >
<title>`core::cl__readtable_case(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.05%)</title><rect x="522.6" y="277" width="0.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="525.58" y="287.5" ></text>
</g>
<g >
<title>`core::cl__zerop(gctools::smart_ptr&lt;core::Number_O&gt;) (2 samples, 0.05%)</title><rect x="1171.3" y="421" width="0.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="1174.27" y="431.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (22 samples, 0.52%)</title><rect x="183.8" y="293" width="6.2" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="186.84" y="303.5" ></text>
</g>
<g >
<title>`clock_gettime_nsec_np (3 samples, 0.07%)</title><rect x="1058.9" y="277" width="0.9" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1061.92" y="287.5" ></text>
</g>
<g >
<title>`GC_call_with_stack_base (4,222 samples, 100.00%)</title><rect x="10.0" y="1205" width="1180.0" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="13.00" y="1215.5" >`GC_call_with_stack_base</text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (3 samples, 0.07%)</title><rect x="1020.9" y="245" width="0.8" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1023.91" y="255.5" ></text>
</g>
<g >
<title>`COERCE^COMMON-LISP^FN^^ (129 samples, 3.06%)</title><rect x="588.3" y="293" width="36.0" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="591.26" y="303.5" >`CO..</text>
</g>
<g >
<title>`__gmpz_cdiv_qr (15 samples, 0.36%)</title><rect x="782.8" y="245" width="4.2" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="785.79" y="255.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.02%)</title><rect x="106.7" y="229" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="109.70" y="239.5" ></text>
</g>
<g >
<title>`GC_get_first_part (1 samples, 0.02%)</title><rect x="1158.1" y="277" width="0.3" height="15.0" fill="rgb(237,103,103)" rx="2" ry="2" />
<text  x="1161.14" y="287.5" ></text>
</g>
<g >
<title>`EXPT^COMMON-LISP^FN^^ (2 samples, 0.05%)</title><rect x="535.4" y="309" width="0.6" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="538.44" y="319.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (29 samples, 0.69%)</title><rect x="1077.6" y="309" width="8.2" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="1080.65" y="319.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="484.0" y="101" width="0.3" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="487.01" y="111.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (10 samples, 0.24%)</title><rect x="652.3" y="197" width="2.8" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="655.26" y="207.5" ></text>
</g>
<g >
<title>`mach_absolute_time (2 samples, 0.05%)</title><rect x="1091.6" y="277" width="0.6" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1094.62" y="287.5" ></text>
</g>
<g >
<title>`free_tiny (5 samples, 0.12%)</title><rect x="799.3" y="245" width="1.4" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="802.28" y="255.5" ></text>
</g>
<g >
<title>`core::Unwind::Unwind(core::T_O*, unsigned long) (1 samples, 0.02%)</title><rect x="770.2" y="293" width="0.3" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="773.21" y="303.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (27 samples, 0.64%)</title><rect x="709.0" y="213" width="7.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="712.00" y="223.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (27 samples, 0.64%)</title><rect x="476.2" y="197" width="7.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="479.19" y="207.5" ></text>
</g>
<g >
<title>`READTABLE-CASE^COMMON-LISP^FN^^ (2 samples, 0.05%)</title><rect x="521.5" y="293" width="0.5" height="15.0" fill="rgb(68,182,182)" rx="2" ry="2" />
<text  x="524.46" y="303.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (2 samples, 0.05%)</title><rect x="916.1" y="149" width="0.6" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="919.10" y="159.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (13 samples, 0.31%)</title><rect x="224.9" y="261" width="3.7" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="227.93" y="271.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (3 samples, 0.07%)</title><rect x="916.7" y="293" width="0.8" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="919.66" y="303.5" ></text>
</g>
<g >
<title>`core::utf_8_decoder(gctools::smart_ptr&lt;core::T_O&gt;) (32 samples, 0.76%)</title><rect x="62.3" y="293" width="8.9" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="65.26" y="303.5" ></text>
</g>
<g >
<title>`core::cl__streamp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="18.1" y="917" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="21.11" y="927.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="601.7" y="245" width="0.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="604.68" y="255.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.05%)</title><rect x="1136.6" y="373" width="0.6" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="1139.62" y="383.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.02%)</title><rect x="613.1" y="277" width="0.3" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="616.14" y="287.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (5 samples, 0.12%)</title><rect x="1158.1" y="325" width="1.4" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="1161.14" y="335.5" ></text>
</g>
<g >
<title>`cc_setTLSymbolValue (3 samples, 0.07%)</title><rect x="1167.1" y="421" width="0.8" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1170.08" y="431.5" ></text>
</g>
<g >
<title>`pthread_once (1 samples, 0.02%)</title><rect x="1068.7" y="325" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1071.70" y="335.5" ></text>
</g>
<g >
<title>`_Unwind_GetRegionStart (1 samples, 0.02%)</title><rect x="1024.5" y="229" width="0.3" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="1027.54" y="239.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (2 samples, 0.05%)</title><rect x="1124.0" y="309" width="0.6" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="1127.04" y="319.5" ></text>
</g>
<g >
<title>`GC_clear_stack (1 samples, 0.02%)</title><rect x="1159.3" y="309" width="0.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1162.26" y="319.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Ivybridge (7 samples, 0.17%)</title><rect x="258.7" y="229" width="2.0" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="261.74" y="239.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.05%)</title><rect x="961.4" y="309" width="0.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="964.38" y="319.5" ></text>
</g>
<g >
<title>`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc (2 samples, 0.05%)</title><rect x="10.3" y="757" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="13.28" y="767.5" ></text>
</g>
<g >
<title>`INTERPRET-DIRECTIVE-LIST^CORE^FN^^ (1 samples, 0.02%)</title><rect x="10.6" y="437" width="0.2" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="13.56" y="447.5" ></text>
</g>
<g >
<title>`free_tiny (1 samples, 0.02%)</title><rect x="809.6" y="277" width="0.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="812.62" y="287.5" ></text>
</g>
<g >
<title>`LOWER-CASE-P^COMMON-LISP^FN^^ (6 samples, 0.14%)</title><rect x="376.4" y="293" width="1.7" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="379.41" y="303.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (10 samples, 0.24%)</title><rect x="633.0" y="165" width="2.8" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="635.98" y="175.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="17.8" y="869" width="0.3" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="20.83" y="879.5" ></text>
</g>
<g >
<title>`wrapped_cl__read_char_T_spT_spT_spT_sp (1 samples, 0.02%)</title><rect x="1109.5" y="341" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="1112.51" y="351.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::StrWNs_O&gt; gctools::GCObjectAppropriate (12 samples, 0.28%)</title><rect x="103.6" y="245" width="3.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="106.63" y="255.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="1109.2" y="341" width="0.3" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="1112.23" y="351.5" ></text>
</g>
<g >
<title>`core::lisp_true() (4 samples, 0.09%)</title><rect x="345.1" y="261" width="1.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="348.11" y="271.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (3,876 samples, 91.80%)</title><rect x="47.5" y="389" width="1083.2" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="50.45" y="399.5" >`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^</text>
</g>
<g >
<title>`GC_clear_stack_inner (3 samples, 0.07%)</title><rect x="483.7" y="133" width="0.9" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="486.73" y="143.5" ></text>
</g>
<g >
<title>`free (2 samples, 0.05%)</title><rect x="850.7" y="277" width="0.6" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="853.70" y="287.5" ></text>
</g>
<g >
<title>`__cxa_begin_catch (2 samples, 0.05%)</title><rect x="1065.3" y="341" width="0.6" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1068.35" y="351.5" ></text>
</g>
<g >
<title>`_Unwind_SetGR (1 samples, 0.02%)</title><rect x="698.1" y="213" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="701.10" y="223.5" ></text>
</g>
<g >
<title>`core::cl__gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (1 samples, 0.02%)</title><rect x="602.0" y="261" width="0.2" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="604.96" y="271.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.02%)</title><rect x="893.5" y="277" width="0.2" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="896.46" y="287.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (6 samples, 0.14%)</title><rect x="751.2" y="197" width="1.7" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="754.20" y="207.5" ></text>
</g>
<g >
<title>`EVAL-FOR-EMACS^SWANK^FN^^ (4,188 samples, 99.19%)</title><rect x="19.2" y="805" width="1170.5" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="22.22" y="815.5" >`EVAL-FOR-EMACS^SWANK^FN^^</text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.02%)</title><rect x="96.1" y="245" width="0.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="99.08" y="255.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="1085.5" y="213" width="0.3" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="1088.47" y="223.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (60 samples, 1.42%)</title><rect x="730.2" y="245" width="16.8" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="733.24" y="255.5" ></text>
</g>
<g >
<title>`APPLY1^CORE^FN^^ (2 samples, 0.05%)</title><rect x="41.3" y="421" width="0.6" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="44.30" y="431.5" ></text>
</g>
<g >
<title>`mach_timebase_info (4 samples, 0.09%)</title><rect x="765.7" y="245" width="1.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="768.74" y="255.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Nehalem (1 samples, 0.02%)</title><rect x="68.1" y="229" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="71.13" y="239.5" ></text>
</g>
<g >
<title>`malloc (11 samples, 0.26%)</title><rect x="859.9" y="213" width="3.1" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="862.92" y="223.5" ></text>
</g>
<g >
<title>`SIMPLE-EVAL^CLASP-CLEAVIR^FN^^ (4,188 samples, 99.19%)</title><rect x="19.2" y="757" width="1170.5" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="22.22" y="767.5" >`SIMPLE-EVAL^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleVector_int16_t_O, short (3 samples, 0.07%)</title><rect x="623.2" y="261" width="0.8" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="626.20" y="271.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (2 samples, 0.05%)</title><rect x="881.2" y="245" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="884.17" y="255.5" ></text>
</g>
<g >
<title>`wrapped_cl__vector_push_extend_T_spVector_spsize_t (5 samples, 0.12%)</title><rect x="1109.8" y="341" width="1.4" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1112.79" y="351.5" ></text>
</g>
<g >
<title>`CALL-WITH-DEBUGGER-HOOK^SWANK/BACKEND^FN^^ (4,188 samples, 99.19%)</title><rect x="19.2" y="869" width="1170.5" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="22.22" y="879.5" >`CALL-WITH-DEBUGGER-HOOK^SWANK/BACKEND^FN^^</text>
</g>
<g >
<title>`core::coerce::inputStreamDesignator(gctools::smart_ptr&lt;core::T_ (1 samples, 0.02%)</title><rect x="1126.3" y="341" width="0.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="1129.28" y="351.5" ></text>
</g>
<g >
<title>`GC_build_fl (7 samples, 0.17%)</title><rect x="896.5" y="245" width="2.0" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="899.54" y="255.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (1 samples, 0.02%)</title><rect x="1166.5" y="405" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1169.52" y="415.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (20 samples, 0.47%)</title><rect x="1006.9" y="213" width="5.6" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="1009.94" y="223.5" ></text>
</g>
<g >
<title>`tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="876.7" y="245" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="879.69" y="255.5" ></text>
</g>
<g >
<title>`free_tiny (6 samples, 0.14%)</title><rect x="887.3" y="293" width="1.7" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="890.31" y="303.5" ></text>
</g>
<g >
<title>`_Unwind_GetRegionStart (1 samples, 0.02%)</title><rect x="666.2" y="213" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="669.24" y="223.5" ></text>
</g>
<g >
<title>`GC_build_fl (1 samples, 0.02%)</title><rect x="621.2" y="197" width="0.3" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="624.24" y="207.5" ></text>
</g>
<g >
<title>`__gmp_default_reallocate (5 samples, 0.12%)</title><rect x="781.1" y="245" width="1.4" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="784.11" y="255.5" ></text>
</g>
<g >
<title>`HASH-EQL^CORE^FN^^ (2 samples, 0.05%)</title><rect x="85.2" y="325" width="0.5" height="15.0" fill="rgb(93,205,205)" rx="2" ry="2" />
<text  x="88.18" y="335.5" ></text>
</g>
<g >
<title>`tiny_free_list_add_ptr (3 samples, 0.07%)</title><rect x="844.8" y="229" width="0.9" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="847.83" y="239.5" ></text>
</g>
<g >
<title>`__gmpz_init (2 samples, 0.05%)</title><rect x="813.2" y="261" width="0.6" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="816.25" y="271.5" ></text>
</g>
<g >
<title>`core::General_O::initialize() (1 samples, 0.02%)</title><rect x="568.7" y="293" width="0.3" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="571.70" y="303.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="1143.6" y="357" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1146.60" y="367.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (27 samples, 0.64%)</title><rect x="1022.3" y="261" width="7.6" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1025.31" y="271.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.02%)</title><rect x="567.3" y="213" width="0.3" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="570.30" y="223.5" ></text>
</g>
<g >
<title>`_pthread_mutex_unlock_init_slow (3 samples, 0.07%)</title><rect x="276.6" y="213" width="0.9" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="279.63" y="223.5" ></text>
</g>
<g >
<title>`core::coerce::outputStreamDesignator(gctools::smart_ptr&lt;core::T (1 samples, 0.02%)</title><rect x="18.1" y="933" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="21.11" y="943.5" ></text>
</g>
<g >
<title>`unw_init_local (8 samples, 0.19%)</title><rect x="649.2" y="245" width="2.2" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="652.19" y="255.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (2 samples, 0.05%)</title><rect x="898.5" y="261" width="0.6" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="901.49" y="271.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (6 samples, 0.14%)</title><rect x="826.9" y="229" width="1.7" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="829.94" y="239.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleCharacterString_O, int, (7 samples, 0.17%)</title><rect x="134.7" y="293" width="1.9" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="137.65" y="303.5" ></text>
</g>
<g >
<title>`GC_get_first_part (2 samples, 0.05%)</title><rect x="474.2" y="197" width="0.6" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="477.23" y="207.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.02%)</title><rect x="995.5" y="229" width="0.3" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="998.48" y="239.5" ></text>
</g>
<g >
<title>`_pthread_mutex_unlock_init_slow (2 samples, 0.05%)</title><rect x="260.7" y="229" width="0.6" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="263.70" y="239.5" ></text>
</g>
<g >
<title>`GC_continue_reclaim (2 samples, 0.05%)</title><rect x="1153.9" y="261" width="0.6" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="1156.95" y="271.5" ></text>
</g>
<g >
<title>`FIXNUMP^CORE^FN^^ (4 samples, 0.09%)</title><rect x="84.1" y="325" width="1.1" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="87.06" y="335.5" ></text>
</g>
<g >
<title>`tlv_get_addr (4 samples, 0.09%)</title><rect x="1102.5" y="309" width="1.1" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1105.52" y="319.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (28 samples, 0.66%)</title><rect x="466.1" y="197" width="7.9" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="469.13" y="207.5" ></text>
</g>
<g >
<title>`wrapped_core__vset_T_spAbstractSimpleVector_spsize_t (2 samples, 0.05%)</title><rect x="411.3" y="261" width="0.6" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="414.35" y="271.5" ></text>
</g>
<g >
<title>`tlv_get_addr (5 samples, 0.12%)</title><rect x="223.5" y="245" width="1.4" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="226.53" y="255.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="621.5" y="229" width="0.3" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="624.52" y="239.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::machHeader() const (3 samples, 0.07%)</title><rect x="752.0" y="181" width="0.9" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="755.04" y="191.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (10 samples, 0.24%)</title><rect x="652.3" y="213" width="2.8" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="655.26" y="223.5" ></text>
</g>
<g >
<title>`REPL-LOOP^SWANK-REPL^FN^^ (4,188 samples, 99.19%)</title><rect x="19.2" y="965" width="1170.5" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="22.22" y="975.5" >`REPL-LOOP^SWANK-REPL^FN^^</text>
</g>
<g >
<title>`READ^COMMON-LISP^FN^^ (4 samples, 0.09%)</title><rect x="1188.6" y="517" width="1.1" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="1191.60" y="527.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="1155.6" y="309" width="0.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1158.62" y="319.5" ></text>
</g>
<g >
<title>`READ-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^ (3,710 samples, 87.87%)</title><rect x="74.3" y="357" width="1036.9" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="77.28" y="367.5" >`READ-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^</text>
</g>
<g >
<title>`GC_clear_hdr_marks (1 samples, 0.02%)</title><rect x="1082.1" y="245" width="0.3" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="1085.12" y="255.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (6 samples, 0.14%)</title><rect x="140.2" y="261" width="1.7" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="143.24" y="271.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (2 samples, 0.05%)</title><rect x="430.1" y="261" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="433.07" y="271.5" ></text>
</g>
<g >
<title>`wrapped_contagen_mul_Number_spNumber_sp (1 samples, 0.02%)</title><rect x="1061.7" y="325" width="0.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1064.71" y="335.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (5 samples, 0.12%)</title><rect x="1016.4" y="261" width="1.4" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="1019.44" y="271.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (5 samples, 0.12%)</title><rect x="895.1" y="229" width="1.4" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="898.14" y="239.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.02%)</title><rect x="558.6" y="229" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="561.64" y="239.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (41 samples, 0.97%)</title><rect x="1005.0" y="261" width="11.4" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="1007.98" y="271.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (2 samples, 0.05%)</title><rect x="1024.0" y="213" width="0.5" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="1026.98" y="223.5" ></text>
</g>
<g >
<title>`cc_TLSymbolValue (1 samples, 0.02%)</title><rect x="1180.5" y="437" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1183.50" y="447.5" ></text>
</g>
<g >
<title>`core::utf_8_decoder(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.02%)</title><rect x="290.3" y="293" width="0.3" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="293.33" y="303.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_cl__char_code_Character_sp (1 samples, 0.02%)</title><rect x="534.3" y="309" width="0.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="537.32" y="319.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (2 samples, 0.05%)</title><rect x="761.0" y="277" width="0.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="763.99" y="287.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (12 samples, 0.28%)</title><rect x="982.1" y="245" width="3.3" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="985.06" y="255.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (7 samples, 0.17%)</title><rect x="416.4" y="261" width="1.9" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="419.38" y="271.5" ></text>
</g>
<g >
<title>`cc_saveMultipleValue0 (2 samples, 0.05%)</title><rect x="961.4" y="325" width="0.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="964.38" y="335.5" ></text>
</g>
<g >
<title>`unw_get_reg (4 samples, 0.09%)</title><rect x="747.0" y="261" width="1.1" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="750.01" y="271.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.02%)</title><rect x="353.2" y="277" width="0.3" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="356.21" y="287.5" ></text>
</g>
<g >
<title>`core::core__syntax_type(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (14 samples, 0.33%)</title><rect x="1114.8" y="325" width="3.9" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="1117.82" y="335.5" ></text>
</g>
<g >
<title>`core::log_operation_2op(core::boole_ops, gctools::smart_ptr&lt;cor (1 samples, 0.02%)</title><rect x="119.8" y="309" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="122.84" y="319.5" ></text>
</g>
<g >
<title>`core::core__progv_function(gctools::smart_ptr&lt;core::List_V&gt;, gc (2 samples, 0.05%)</title><rect x="10.3" y="725" width="0.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="13.28" y="735.5" ></text>
</g>
</g>
</svg>
