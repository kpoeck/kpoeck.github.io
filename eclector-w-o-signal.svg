<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1030.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1013" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="1013" > </text>
<g id="frames">
<g >
<title>`core::cl__class_of(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.03%)</title><rect x="1162.6" y="405" width="0.3" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="1165.61" y="415.5" ></text>
</g>
<g >
<title>`realloc (4 samples, 0.11%)</title><rect x="735.8" y="229" width="1.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="738.79" y="239.5" ></text>
</g>
<g >
<title>`READ-CHAR^COMMON-LISP^FN^^ (1 samples, 0.03%)</title><rect x="51.3" y="341" width="0.3" height="15.0" fill="rgb(106,217,217)" rx="2" ry="2" />
<text  x="54.26" y="351.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$__bzero (2 samples, 0.06%)</title><rect x="602.9" y="245" width="0.7" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="605.87" y="255.5" ></text>
</g>
<g >
<title>`malloc (3 samples, 0.09%)</title><rect x="815.3" y="277" width="1.0" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="818.27" y="287.5" ></text>
</g>
<g >
<title>`GC_build_fl (1 samples, 0.03%)</title><rect x="1141.6" y="293" width="0.4" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="1144.64" y="303.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (20 samples, 0.57%)</title><rect x="532.9" y="101" width="6.7" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="535.87" y="111.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (2 samples, 0.06%)</title><rect x="1073.0" y="341" width="0.7" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1075.98" y="351.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (42 samples, 1.20%)</title><rect x="792.3" y="261" width="14.2" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="795.27" y="271.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (15 samples, 0.43%)</title><rect x="631.3" y="165" width="5.1" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="634.28" y="175.5" ></text>
</g>
<g >
<title>`default_zone_free_definite_size (1 samples, 0.03%)</title><rect x="717.9" y="261" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="720.86" y="271.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Nehalem (6 samples, 0.17%)</title><rect x="56.3" y="213" width="2.1" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="59.33" y="223.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (1 samples, 0.03%)</title><rect x="517.3" y="133" width="0.3" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="520.31" y="143.5" ></text>
</g>
<g >
<title>`core::cl__zerop(gctools::smart_ptr&lt;core::Number_O&gt;) (2 samples, 0.06%)</title><rect x="478.1" y="261" width="0.7" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="481.08" y="271.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.06%)</title><rect x="458.8" y="229" width="0.7" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="461.80" y="239.5" ></text>
</g>
<g >
<title>`free (4 samples, 0.11%)</title><rect x="718.2" y="261" width="1.4" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="721.20" y="271.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (39 samples, 1.12%)</title><rect x="444.9" y="149" width="13.2" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="447.93" y="159.5" ></text>
</g>
<g >
<title>`core::General_O::initialize() (1 samples, 0.03%)</title><rect x="556.9" y="277" width="0.3" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="559.88" y="287.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (40 samples, 1.15%)</title><rect x="444.6" y="213" width="13.5" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="447.59" y="223.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.03%)</title><rect x="653.9" y="245" width="0.4" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="656.94" y="255.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (2 samples, 0.06%)</title><rect x="825.4" y="213" width="0.7" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="828.41" y="223.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (15 samples, 0.43%)</title><rect x="92.5" y="117" width="5.1" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="95.52" y="127.5" ></text>
</g>
<g >
<title>`tiny_malloc_from_free_list (2 samples, 0.06%)</title><rect x="680.3" y="149" width="0.7" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="683.32" y="159.5" ></text>
</g>
<g >
<title>`pthread_once (1 samples, 0.03%)</title><rect x="885.3" y="261" width="0.3" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="888.28" y="271.5" ></text>
</g>
<g >
<title>`LOGTEST^COMMON-LISP^FN^^ (40 samples, 1.15%)</title><rect x="372.9" y="277" width="13.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="375.89" y="287.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (39 samples, 1.12%)</title><rect x="101.7" y="133" width="13.1" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="104.65" y="143.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (13 samples, 0.37%)</title><rect x="689.8" y="229" width="4.4" height="15.0" fill="rgb(200,51,51)" rx="2" ry="2" />
<text  x="692.79" y="239.5" ></text>
</g>
<g >
<title>`UNREAD-CHAR^COMMON-LISP^FN^^ (1 samples, 0.03%)</title><rect x="1060.1" y="357" width="0.4" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="1063.13" y="367.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (2 samples, 0.06%)</title><rect x="824.7" y="213" width="0.7" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="827.74" y="223.5" ></text>
</g>
<g >
<title>`cc_TLSymbolValue (2 samples, 0.06%)</title><rect x="1049.6" y="341" width="0.7" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1052.64" y="351.5" ></text>
</g>
<g >
<title>`core::contagen_div(gctools::smart_ptr&lt;core::Number_O&gt;, gctools: (2 samples, 0.06%)</title><rect x="610.3" y="293" width="0.7" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="613.32" y="303.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="753.7" y="197" width="0.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="756.71" y="207.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (1 samples, 0.03%)</title><rect x="1183.9" y="421" width="0.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="1186.91" y="431.5" ></text>
</g>
<g >
<title>`GC_clear_stack (1 samples, 0.03%)</title><rect x="587.7" y="245" width="0.3" height="15.0" fill="rgb(211,67,67)" rx="2" ry="2" />
<text  x="590.66" y="255.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (3 samples, 0.09%)</title><rect x="1045.9" y="277" width="1.0" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="1048.92" y="287.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (5 samples, 0.14%)</title><rect x="230.8" y="245" width="1.7" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="233.85" y="255.5" ></text>
</g>
<g >
<title>`wrapped_cl__read_char_T_spT_spT_spT_sp (30 samples, 0.86%)</title><rect x="53.3" y="325" width="10.1" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="56.29" y="335.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (3,486 samples, 99.91%)</title><rect x="10.0" y="629" width="1179.0" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="13.00" y="639.5" >`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo</text>
</g>
<g >
<title>`INTERPRET-DTREE-PROGRAM^CLOS^FN^^ (2 samples, 0.06%)</title><rect x="1062.2" y="405" width="0.6" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="1065.16" y="415.5" ></text>
</g>
<g >
<title>`wrapped_cl__list_T_sp (1 samples, 0.03%)</title><rect x="1170.0" y="405" width="0.4" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1173.05" y="415.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (1 samples, 0.03%)</title><rect x="781.1" y="293" width="0.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="784.11" y="303.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (39 samples, 1.12%)</title><rect x="444.9" y="165" width="13.2" height="15.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="447.93" y="175.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (2 samples, 0.06%)</title><rect x="408.7" y="261" width="0.7" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="411.74" y="271.5" ></text>
</g>
<g >
<title>`SYMBOLP^COMMON-LISP^FN^^ (2 samples, 0.06%)</title><rect x="432.8" y="261" width="0.6" height="15.0" fill="rgb(88,199,199)" rx="2" ry="2" />
<text  x="435.76" y="271.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.03%)</title><rect x="554.5" y="245" width="0.3" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="557.51" y="255.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (6 samples, 0.17%)</title><rect x="593.4" y="117" width="2.0" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="596.40" y="127.5" ></text>
</g>
<g >
<title>`core::log_operation_2op(core::boole_ops, gctools::smart_ptr&lt;cor (1 samples, 0.03%)</title><rect x="126.3" y="277" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="129.34" y="287.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (1 samples, 0.03%)</title><rect x="1076.0" y="309" width="0.4" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="1079.02" y="319.5" ></text>
</g>
<g >
<title>`std::__1::chrono::steady_clock::now() (20 samples, 0.57%)</title><rect x="931.3" y="293" width="6.7" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="934.27" y="303.5" ></text>
</g>
<g >
<title>`_pthread_mutex_unlock_init_slow (1 samples, 0.03%)</title><rect x="278.2" y="213" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="281.20" y="223.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (2 samples, 0.06%)</title><rect x="921.5" y="229" width="0.6" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="924.46" y="239.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (2 samples, 0.06%)</title><rect x="926.5" y="245" width="0.7" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="929.54" y="255.5" ></text>
</g>
<g >
<title>`core::clasp_gcd(gctools::smart_ptr&lt;core::Integer_O&gt;, gctools::s (28 samples, 0.80%)</title><rect x="695.5" y="213" width="9.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="698.54" y="223.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (13 samples, 0.37%)</title><rect x="550.1" y="245" width="4.4" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="553.11" y="255.5" ></text>
</g>
<g >
<title>`NORMALIZE-TYPE^CORE^FN^^ (2 samples, 0.06%)</title><rect x="579.9" y="293" width="0.7" height="15.0" fill="rgb(57,172,172)" rx="2" ry="2" />
<text  x="582.88" y="303.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (32 samples, 0.92%)</title><rect x="900.5" y="245" width="10.8" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="903.50" y="255.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (7 samples, 0.20%)</title><rect x="142.9" y="181" width="2.4" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="145.91" y="191.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.03%)</title><rect x="1024.3" y="293" width="0.3" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="1027.28" y="303.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (37 samples, 1.06%)</title><rect x="794.0" y="245" width="12.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="796.96" y="255.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (8 samples, 0.23%)</title><rect x="769.3" y="165" width="2.7" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="772.27" y="175.5" ></text>
</g>
<g >
<title>`GC_clear_stack (1 samples, 0.03%)</title><rect x="745.6" y="197" width="0.3" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="748.60" y="207.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="1135.9" y="293" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="1138.89" y="303.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.03%)</title><rect x="861.3" y="197" width="0.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="864.26" y="207.5" ></text>
</g>
<g >
<title>`__gmp_default_reallocate (4 samples, 0.11%)</title><rect x="735.8" y="245" width="1.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="738.79" y="255.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (8 samples, 0.23%)</title><rect x="787.9" y="213" width="2.7" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="790.87" y="223.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (9 samples, 0.26%)</title><rect x="572.1" y="261" width="3.0" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="575.10" y="271.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (2 samples, 0.06%)</title><rect x="720.6" y="245" width="0.6" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="723.57" y="255.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (9 samples, 0.26%)</title><rect x="855.5" y="213" width="3.1" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="858.51" y="223.5" ></text>
</g>
<g >
<title>`core::core__bignump(gctools::smart_ptr&lt;core::T_O&gt;) (5 samples, 0.14%)</title><rect x="440.5" y="245" width="1.7" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="443.54" y="255.5" ></text>
</g>
<g >
<title>`GC_allochblk (3 samples, 0.09%)</title><rect x="141.9" y="213" width="1.0" height="15.0" fill="rgb(219,77,77)" rx="2" ry="2" />
<text  x="144.90" y="223.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_value(core::Symbol_O co (1 samples, 0.03%)</title><rect x="1052.7" y="325" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1055.69" y="335.5" ></text>
</g>
<g >
<title>`GC_mark_some (21 samples, 0.60%)</title><rect x="746.3" y="117" width="7.1" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="749.27" y="127.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (2 samples, 0.06%)</title><rect x="624.5" y="229" width="0.7" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="627.52" y="239.5" ></text>
</g>
<g >
<title>`__gmpz_add_ui (2 samples, 0.06%)</title><rect x="675.3" y="245" width="0.6" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="678.25" y="255.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::SimpleCharacterString_O&gt; gctools::GCOb (18 samples, 0.52%)</title><rect x="140.2" y="261" width="6.1" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="143.21" y="271.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (2 samples, 0.06%)</title><rect x="861.9" y="181" width="0.7" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="864.94" y="191.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.03%)</title><rect x="768.9" y="133" width="0.4" height="15.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text  x="771.93" y="143.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (2 samples, 0.06%)</title><rect x="1176.8" y="357" width="0.7" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1179.81" y="367.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (3 samples, 0.09%)</title><rect x="1169.0" y="389" width="1.0" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="1172.03" y="399.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (5 samples, 0.14%)</title><rect x="1130.1" y="165" width="1.7" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="1133.14" y="175.5" ></text>
</g>
<g >
<title>`cm_vref (2 samples, 0.06%)</title><rect x="607.9" y="293" width="0.7" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="610.95" y="303.5" ></text>
</g>
<g >
<title>`core::cl__read_char(gctools::smart_ptr&lt;core::T_O&gt;, gctools::sma (26 samples, 0.75%)</title><rect x="53.3" y="309" width="8.8" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="56.29" y="319.5" ></text>
</g>
<g >
<title>`__gmp_default_allocate (12 samples, 0.34%)</title><rect x="737.8" y="229" width="4.1" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="740.82" y="239.5" ></text>
</g>
<g >
<title>`GC_allocobj (24 samples, 0.69%)</title><rect x="1142.7" y="277" width="8.1" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1145.65" y="287.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (1 samples, 0.03%)</title><rect x="300.9" y="213" width="0.3" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="303.86" y="223.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleCharacterString_O, int, (3 samples, 0.09%)</title><rect x="138.5" y="277" width="1.0" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="141.52" y="287.5" ></text>
</g>
<g >
<title>`core::cl__numberp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.03%)</title><rect x="123.0" y="229" width="0.3" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="125.96" y="239.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (17 samples, 0.49%)</title><rect x="875.8" y="181" width="5.8" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="878.81" y="191.5" ></text>
</g>
<g >
<title>`core::input_stream_read_byte8(gctools::smart_ptr&lt;core::T_O&gt;, un (2 samples, 0.06%)</title><rect x="255.5" y="261" width="0.7" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="258.54" y="271.5" ></text>
</g>
<g >
<title>`unw_init_local (1 samples, 0.03%)</title><rect x="941.4" y="293" width="0.4" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="944.42" y="303.5" ></text>
</g>
<g >
<title>`GC_finish_collection (1 samples, 0.03%)</title><rect x="691.5" y="133" width="0.3" height="15.0" fill="rgb(209,64,64)" rx="2" ry="2" />
<text  x="694.48" y="143.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (2 samples, 0.06%)</title><rect x="1176.8" y="373" width="0.7" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="1179.81" y="383.5" ></text>
</g>
<g >
<title>`GC_add_map_entry (1 samples, 0.03%)</title><rect x="512.2" y="181" width="0.4" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="515.24" y="191.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (3,451 samples, 98.91%)</title><rect x="16.1" y="437" width="1167.1" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="19.09" y="447.5" >`READ^ECLECTOR.READER^FN^^</text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.06%)</title><rect x="62.8" y="309" width="0.6" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="65.76" y="319.5" ></text>
</g>
<g >
<title>`core::Cons_O::length() const (5 samples, 0.14%)</title><rect x="1158.5" y="405" width="1.7" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="1161.55" y="415.5" ></text>
</g>
<g >
<title>`__gmpz_mul (3 samples, 0.09%)</title><rect x="621.8" y="277" width="1.0" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="624.81" y="287.5" ></text>
</g>
<g >
<title>`core::core__syntax_type(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (1 samples, 0.03%)</title><rect x="186.5" y="293" width="0.4" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="189.54" y="303.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (2 samples, 0.06%)</title><rect x="102.0" y="85" width="0.7" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="104.99" y="95.5" ></text>
</g>
<g >
<title>`READER-FLOAT-FORMAT^ECLECTOR.READER^FN^^ (1 samples, 0.03%)</title><rect x="775.7" y="309" width="0.3" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="778.70" y="319.5" ></text>
</g>
<g >
<title>`core::core__syntax_type(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (13 samples, 0.37%)</title><rect x="1044.2" y="309" width="4.4" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="1047.23" y="319.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="681.0" y="181" width="0.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="684.00" y="191.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.03%)</title><rect x="768.9" y="85" width="0.4" height="15.0" fill="rgb(202,54,54)" rx="2" ry="2" />
<text  x="771.93" y="95.5" ></text>
</g>
<g >
<title>`wrapped_contagen_mul_Number_spNumber_sp (156 samples, 4.47%)</title><rect x="721.6" y="293" width="52.7" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="724.58" y="303.5" >`wrap..</text>
</g>
<g >
<title>`rand (1 samples, 0.03%)</title><rect x="717.2" y="245" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="720.19" y="255.5" ></text>
</g>
<g >
<title>`ltvc_toplevel_funcall (3,486 samples, 99.91%)</title><rect x="10.0" y="725" width="1179.0" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="13.00" y="735.5" >`ltvc_toplevel_funcall</text>
</g>
<g >
<title>`mach_timebase_info (2 samples, 0.06%)</title><rect x="934.0" y="245" width="0.7" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="936.98" y="255.5" ></text>
</g>
<g >
<title>`core::cl__char_code(gctools::smart_ptr&lt;core::Character_I&gt;) (2 samples, 0.06%)</title><rect x="397.6" y="277" width="0.7" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="400.58" y="287.5" ></text>
</g>
<g >
<title>`default_zone_malloc (4 samples, 0.11%)</title><rect x="811.9" y="229" width="1.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="814.89" y="239.5" ></text>
</g>
<g >
<title>`GC_clear_hdr_marks (1 samples, 0.03%)</title><rect x="968.5" y="229" width="0.3" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="971.48" y="239.5" ></text>
</g>
<g >
<title>`GC_mark_from (130 samples, 3.73%)</title><rect x="1085.8" y="165" width="44.0" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="1088.83" y="175.5" >`GC_..</text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (1 samples, 0.03%)</title><rect x="1186.6" y="453" width="0.4" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="1189.62" y="463.5" ></text>
</g>
<g >
<title>`core::cl__zerop(gctools::smart_ptr&lt;core::Number_O&gt;) (1 samples, 0.03%)</title><rect x="1163.6" y="405" width="0.4" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="1166.62" y="415.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$cc_multipleValuesArrayAddress (1 samples, 0.03%)</title><rect x="71.9" y="325" width="0.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="74.89" y="335.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$__gmpz_clear (1 samples, 0.03%)</title><rect x="667.1" y="277" width="0.4" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="670.13" y="287.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (1 samples, 0.03%)</title><rect x="445.6" y="117" width="0.3" height="15.0" fill="rgb(241,109,109)" rx="2" ry="2" />
<text  x="448.61" y="127.5" ></text>
</g>
<g >
<title>`libunwind::CompactUnwinder_x86_64&lt;libunwind::LocalAddressSpace&gt; (13 samples, 0.37%)</title><rect x="894.4" y="261" width="4.4" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="897.41" y="271.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="957.3" y="309" width="0.4" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="960.31" y="319.5" ></text>
</g>
<g >
<title>`GC_allocobj (21 samples, 0.60%)</title><rect x="746.3" y="181" width="7.1" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="749.27" y="191.5" ></text>
</g>
<g >
<title>`GC_finish_collection (3 samples, 0.09%)</title><rect x="516.6" y="149" width="1.0" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="519.63" y="159.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.03%)</title><rect x="1142.0" y="229" width="0.3" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="1144.97" y="239.5" ></text>
</g>
<g >
<title>`core::General_O::initialize() (1 samples, 0.03%)</title><rect x="1037.1" y="325" width="0.4" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="1040.13" y="335.5" ></text>
</g>
<g >
<title>`_Unwind_GetLanguageSpecificData (1 samples, 0.03%)</title><rect x="784.8" y="229" width="0.4" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="787.83" y="239.5" ></text>
</g>
<g >
<title>`GC_install_header (1 samples, 0.03%)</title><rect x="589.0" y="181" width="0.3" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="592.01" y="191.5" ></text>
</g>
<g >
<title>`GC_mark_some (142 samples, 4.07%)</title><rect x="1083.8" y="181" width="48.0" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="1086.80" y="191.5" >`GC_..</text>
</g>
<g >
<title>0x11b38024f (3,480 samples, 99.74%)</title><rect x="11.0" y="501" width="1177.0" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="14.01" y="511.5" >0x11b38024f</text>
</g>
<g >
<title>`wrapped_core__vref_AbstractSimpleVector_spsize_t (5 samples, 0.14%)</title><rect x="494.0" y="277" width="1.7" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="496.97" y="287.5" ></text>
</g>
<g >
<title>`GC_mark_from (34 samples, 0.97%)</title><rect x="102.7" y="85" width="11.5" height="15.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text  x="105.67" y="95.5" ></text>
</g>
<g >
<title>`__toupper (5 samples, 0.14%)</title><rect x="482.5" y="229" width="1.7" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="485.47" y="239.5" ></text>
</g>
<g >
<title>`default_zone_malloc (2 samples, 0.06%)</title><rect x="676.6" y="181" width="0.7" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="679.60" y="191.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$__gmpz_init (1 samples, 0.03%)</title><rect x="731.4" y="261" width="0.3" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="734.39" y="271.5" ></text>
</g>
<g >
<title>`wrapped_core__logand_2op_Integer_spInteger_sp (2 samples, 0.06%)</title><rect x="127.0" y="309" width="0.7" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="130.02" y="319.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (1 samples, 0.03%)</title><rect x="691.5" y="117" width="0.3" height="15.0" fill="rgb(241,109,109)" rx="2" ry="2" />
<text  x="694.48" y="127.5" ></text>
</g>
<g >
<title>`GC_install_header (1 samples, 0.03%)</title><rect x="142.6" y="165" width="0.3" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="145.58" y="175.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (11 samples, 0.32%)</title><rect x="738.2" y="197" width="3.7" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="741.16" y="207.5" ></text>
</g>
<g >
<title>`VECTOR-PUSH-EXTEND^COMMON-LISP^FN^^ (3 samples, 0.09%)</title><rect x="130.7" y="309" width="1.1" height="15.0" fill="rgb(58,173,173)" rx="2" ry="2" />
<text  x="133.74" y="319.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.03%)</title><rect x="650.6" y="229" width="0.3" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="653.56" y="239.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (3 samples, 0.09%)</title><rect x="120.3" y="261" width="1.0" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="123.26" y="271.5" ></text>
</g>
<g >
<title>0x11b38044e (1 samples, 0.03%)</title><rect x="1188.3" y="501" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1191.31" y="511.5" ></text>
</g>
<g >
<title>`__cxa_allocate_exception (14 samples, 0.40%)</title><rect x="811.5" y="293" width="4.8" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="814.55" y="303.5" ></text>
</g>
<g >
<title>`__fread (12 samples, 0.34%)</title><rect x="271.1" y="213" width="4.1" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="274.09" y="223.5" ></text>
</g>
<g >
<title>`GC_allochblk (6 samples, 0.17%)</title><rect x="968.1" y="261" width="2.1" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="971.14" y="271.5" ></text>
</g>
<g >
<title>`GC_mark_from (20 samples, 0.57%)</title><rect x="746.6" y="101" width="6.8" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="749.61" y="111.5" ></text>
</g>
<g >
<title>`_Unwind_GetIP (3 samples, 0.09%)</title><rect x="823.7" y="229" width="1.0" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="826.72" y="239.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="540.6" y="245" width="0.4" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="543.64" y="255.5" ></text>
</g>
<g >
<title>`core::utf_8_decoder(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.06%)</title><rect x="61.4" y="293" width="0.7" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="64.41" y="303.5" ></text>
</g>
<g >
<title>`LIST^COMMON-LISP^FN^^ (10 samples, 0.29%)</title><rect x="1062.8" y="405" width="3.4" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="1065.83" y="415.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.03%)</title><rect x="865.0" y="229" width="0.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="867.98" y="239.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.03%)</title><rect x="654.3" y="245" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="657.28" y="255.5" ></text>
</g>
<g >
<title>`READ-CHAR^ECLECTOR.BASE^FN^^ (35 samples, 1.00%)</title><rect x="51.6" y="341" width="11.8" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="54.60" y="351.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.03%)</title><rect x="1048.0" y="277" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1050.95" y="287.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (140 samples, 4.01%)</title><rect x="973.2" y="197" width="47.4" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text  x="976.21" y="207.5" >`GC_..</text>
</g>
<g >
<title>`__gmp_default_allocate (15 samples, 0.43%)</title><rect x="631.3" y="229" width="5.1" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="634.28" y="239.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.03%)</title><rect x="589.7" y="229" width="0.3" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="592.68" y="239.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (1 samples, 0.03%)</title><rect x="865.7" y="165" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="868.66" y="175.5" ></text>
</g>
<g >
<title>`core::contagen_add(gctools::smart_ptr&lt;core::Number_O&gt;, gctools: (125 samples, 3.58%)</title><rect x="623.8" y="277" width="42.3" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="626.84" y="287.5" >`co..</text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.03%)</title><rect x="517.3" y="117" width="0.3" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="520.31" y="127.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="1056.7" y="245" width="0.4" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1059.75" y="255.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^ (3,018 samples, 86.50%)</title><rect x="39.4" y="357" width="1020.7" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="42.42" y="367.5" >`READ-COMMON^ECLECTOR.READER^((T T T T))^METHOD^^</text>
</g>
<g >
<title>`___LAMBDA___epilogue-cclasp.lisp-epilogue-cclasp471^1^24957 (3,486 samples, 99.91%)</title><rect x="10.0" y="709" width="1179.0" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="13.00" y="719.5" >`___LAMBDA___epilogue-cclasp.lisp-epilogue-cclasp471^1^24957</text>
</g>
<g >
<title>`GC_apply_to_all_blocks (3 samples, 0.09%)</title><rect x="1081.8" y="181" width="1.0" height="15.0" fill="rgb(239,106,106)" rx="2" ry="2" />
<text  x="1084.77" y="191.5" ></text>
</g>
<g >
<title>`core::clasp_to_double(gctools::smart_ptr&lt;core::Number_O&gt;) (3 samples, 0.09%)</title><rect x="1152.8" y="373" width="1.0" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="1155.80" y="383.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (8 samples, 0.23%)</title><rect x="769.3" y="213" width="2.7" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="772.27" y="223.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CORE^FN^^.13 (3,486 samples, 99.91%)</title><rect x="10.0" y="613" width="1179.0" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >`CATCH-LAMBDA^CORE^FN^^.13</text>
</g>
<g >
<title>`HASH-EQL^CORE^FN^^ (12 samples, 0.34%)</title><rect x="119.2" y="293" width="4.1" height="15.0" fill="rgb(91,202,202)" rx="2" ry="2" />
<text  x="122.24" y="303.5" ></text>
</g>
<g >
<title>`MAKE-ARRAY-WITH-INITIAL-ELEMENT^CORE^FN^^ (108 samples, 3.10%)</title><rect x="79.7" y="309" width="36.5" height="15.0" fill="rgb(78,190,190)" rx="2" ry="2" />
<text  x="82.67" y="319.5" >`MA..</text>
</g>
<g >
<title>`cc_enclose (204 samples, 5.85%)</title><rect x="957.0" y="325" width="69.0" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="959.98" y="335.5" >`cc_enc..</text>
</g>
<g >
<title>`cc_gatherRestArguments (6 samples, 0.17%)</title><rect x="1063.8" y="389" width="2.1" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1066.85" y="399.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (2 samples, 0.06%)</title><rect x="824.7" y="197" width="0.7" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="827.74" y="207.5" ></text>
</g>
<g >
<title>`tlv_get_addr (4 samples, 0.11%)</title><rect x="555.5" y="261" width="1.4" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="558.53" y="271.5" ></text>
</g>
<g >
<title>`std::__1::chrono::steady_clock::now() (2 samples, 0.06%)</title><rect x="945.5" y="309" width="0.7" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="948.48" y="319.5" ></text>
</g>
<g >
<title>`wrapped_contagen_mul_Number_spNumber_sp (3 samples, 0.09%)</title><rect x="947.8" y="309" width="1.1" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="950.84" y="319.5" ></text>
</g>
<g >
<title>`GC_mark_from (34 samples, 0.97%)</title><rect x="446.3" y="101" width="11.5" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="449.29" y="111.5" ></text>
</g>
<g >
<title>`__error (7 samples, 0.20%)</title><rect x="268.7" y="213" width="2.4" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="271.73" y="223.5" ></text>
</g>
<g >
<title>`wrapped_contagen_div_Number_spNumber_sp (161 samples, 4.61%)</title><rect x="667.1" y="293" width="54.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="670.13" y="303.5" >`wrap..</text>
</g>
<g >
<title>`core::contagen_div(gctools::smart_ptr&lt;core::Number_O&gt;, gctools: (157 samples, 4.50%)</title><rect x="668.5" y="277" width="53.1" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="671.49" y="287.5" >`core..</text>
</g>
<g >
<title>`clock_gettime_nsec_np (2 samples, 0.06%)</title><rect x="937.4" y="277" width="0.6" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="940.36" y="287.5" ></text>
</g>
<g >
<title>`GC_find_header (1 samples, 0.03%)</title><rect x="550.8" y="229" width="0.3" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="553.79" y="239.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.03%)</title><rect x="1154.8" y="389" width="0.4" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1157.83" y="399.5" ></text>
</g>
<g >
<title>`core::input_stream_read_byte8(gctools::smart_ptr&lt;core::T_O&gt;, un (1 samples, 0.03%)</title><rect x="53.6" y="277" width="0.4" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="56.63" y="287.5" ></text>
</g>
<g >
<title>`cc_rewind_va_list (7 samples, 0.20%)</title><rect x="245.7" y="309" width="2.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="248.73" y="319.5" ></text>
</g>
<g >
<title>`PUSH-CHAR^ECLECTOR.READER^FN^^ (2 samples, 0.06%)</title><rect x="50.2" y="341" width="0.7" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="53.25" y="351.5" ></text>
</g>
<g >
<title>`CATCH-LAMBDA^CORE^FN^^ (3,486 samples, 99.91%)</title><rect x="10.0" y="661" width="1179.0" height="15.0" fill="rgb(82,194,194)" rx="2" ry="2" />
<text  x="13.00" y="671.5" >`CATCH-LAMBDA^CORE^FN^^</text>
</g>
<g >
<title>`pthread_mutex_lock (8 samples, 0.23%)</title><rect x="419.9" y="245" width="2.7" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="422.91" y="255.5" ></text>
</g>
<g >
<title>`GC_mark_from (7 samples, 0.20%)</title><rect x="142.9" y="117" width="2.4" height="15.0" fill="rgb(211,67,67)" rx="2" ry="2" />
<text  x="145.91" y="127.5" ></text>
</g>
<g >
<title>`__gmpz_init_set_si (4 samples, 0.11%)</title><rect x="670.5" y="261" width="1.4" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="673.52" y="271.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (4 samples, 0.11%)</title><rect x="504.5" y="261" width="1.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="507.46" y="271.5" ></text>
</g>
<g >
<title>`__gmpz_realloc (2 samples, 0.06%)</title><rect x="626.9" y="261" width="0.7" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="629.89" y="271.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (52 samples, 1.49%)</title><rect x="898.8" y="261" width="17.6" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="901.80" y="271.5" ></text>
</g>
<g >
<title>`__gmpz_tdiv_qr (1 samples, 0.03%)</title><rect x="743.6" y="245" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="746.57" y="255.5" ></text>
</g>
<g >
<title>`__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan (7 samples, 0.20%)</title><rect x="783.8" y="245" width="2.4" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="786.81" y="255.5" ></text>
</g>
<g >
<title>`GC_add_map_entry (1 samples, 0.03%)</title><rect x="968.1" y="229" width="0.4" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="971.14" y="239.5" ></text>
</g>
<g >
<title>`__gmpz_add (1 samples, 0.03%)</title><rect x="621.1" y="277" width="0.4" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="624.14" y="287.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (6 samples, 0.17%)</title><rect x="664.1" y="245" width="2.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="667.09" y="255.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.03%)</title><rect x="1142.0" y="277" width="0.3" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="1144.97" y="287.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.03%)</title><rect x="611.7" y="293" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="614.67" y="303.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::set_thread_local_value(gctools::smar (1 samples, 0.03%)</title><rect x="1053.0" y="341" width="0.4" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="1056.03" y="351.5" ></text>
</g>
<g >
<title>`core::core__hash_eql(gctools::smart_ptr&lt;core::List_V&gt;) (3 samples, 0.09%)</title><rect x="122.3" y="261" width="1.0" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="125.28" y="271.5" ></text>
</g>
<g >
<title>`wrapped_cl__unread_char_Character_spT_sp (14 samples, 0.40%)</title><rect x="1054.4" y="341" width="4.7" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="1057.38" y="351.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (148 samples, 4.24%)</title><rect x="1081.8" y="213" width="50.0" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="1084.77" y="223.5" >`GC_t..</text>
</g>
<g >
<title>`unw_get_proc_info (4 samples, 0.11%)</title><rect x="853.1" y="261" width="1.4" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="856.15" y="271.5" ></text>
</g>
<g >
<title>`_pthread_mutex_firstfit_lock_slow (24 samples, 0.69%)</title><rect x="280.6" y="197" width="8.1" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="283.56" y="207.5" ></text>
</g>
<g >
<title>`GC_mark_some (7 samples, 0.20%)</title><rect x="769.6" y="133" width="2.4" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="772.61" y="143.5" ></text>
</g>
<g >
<title>`GC_notify_or_invoke_finalizers (1 samples, 0.03%)</title><rect x="1034.8" y="277" width="0.3" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="1037.76" y="287.5" ></text>
</g>
<g >
<title>`core::interpreter_lookup_function_or_error(gctools::smart_ptr&lt;c (1 samples, 0.03%)</title><rect x="1187.6" y="453" width="0.4" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="1190.63" y="463.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (1 samples, 0.03%)</title><rect x="784.8" y="213" width="0.4" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="787.83" y="223.5" ></text>
</g>
<g >
<title>`clock_gettime_nsec_np (7 samples, 0.20%)</title><rect x="1028.3" y="277" width="2.4" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="1031.34" y="287.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (8 samples, 0.23%)</title><rect x="855.9" y="197" width="2.7" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="858.85" y="207.5" ></text>
</g>
<g >
<title>`core::cl__digit_char_p(gctools::smart_ptr&lt;core::Character_I&gt;, g (6 samples, 0.17%)</title><rect x="615.7" y="277" width="2.1" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="618.73" y="287.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$cm_vref (2 samples, 0.06%)</title><rect x="499.0" y="293" width="0.7" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="502.05" y="303.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (24 samples, 0.69%)</title><rect x="1142.7" y="261" width="8.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1145.65" y="271.5" ></text>
</g>
<g >
<title>`mach_absolute_time (5 samples, 0.14%)</title><rect x="1029.0" y="261" width="1.7" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="1032.01" y="271.5" ></text>
</g>
<g >
<title>`core::eformat_read_char(gctools::smart_ptr&lt;core::T_O&gt;) (9 samples, 0.26%)</title><rect x="307.3" y="293" width="3.0" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="310.28" y="303.5" ></text>
</g>
<g >
<title>`core::startup_functions_invoke(core::T_O*) (3,486 samples, 99.91%)</title><rect x="10.0" y="805" width="1179.0" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="13.00" y="815.5" >`core::startup_functions_invoke(core::T_O*)</text>
</g>
<g >
<title>`READTABLE-CASE^ECLECTOR.READTABLE^((READTABLE))^METHOD^^ (5 samples, 0.14%)</title><rect x="489.9" y="277" width="1.7" height="15.0" fill="rgb(75,188,188)" rx="2" ry="2" />
<text  x="492.91" y="287.5" ></text>
</g>
<g >
<title>`core::cl__streamp(gctools::smart_ptr&lt;core::T_O&gt;) (4 samples, 0.11%)</title><rect x="250.8" y="261" width="1.4" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="253.80" y="271.5" ></text>
</g>
<g >
<title>`wrapped_cl__expt_Number_spNumber_sp (3 samples, 0.09%)</title><rect x="617.8" y="293" width="1.0" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="620.76" y="303.5" ></text>
</g>
<g >
<title>`wrapped_cl__float_Real_spT_sp (72 samples, 2.06%)</title><rect x="435.8" y="277" width="24.4" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="438.80" y="287.5" >`..</text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.03%)</title><rect x="515.3" y="181" width="0.3" height="15.0" fill="rgb(241,109,109)" rx="2" ry="2" />
<text  x="518.28" y="191.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (46 samples, 1.32%)</title><rect x="1003.0" y="149" width="15.5" height="15.0" fill="rgb(200,51,51)" rx="2" ry="2" />
<text  x="1005.97" y="159.5" ></text>
</g>
<g >
<title>`unw_init_local (17 samples, 0.49%)</title><rect x="854.5" y="261" width="5.7" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="857.50" y="271.5" ></text>
</g>
<g >
<title>`GC_free_block_ending_at (1 samples, 0.03%)</title><rect x="972.9" y="117" width="0.3" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="975.87" y="127.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (5 samples, 0.14%)</title><rect x="639.4" y="229" width="1.7" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="642.40" y="239.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (11 samples, 0.32%)</title><rect x="454.1" y="85" width="3.7" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="457.06" y="95.5" ></text>
</g>
<g >
<title>`core::cl__make_hash_table(gctools::smart_ptr&lt;core::T_O&gt;, gctool (2 samples, 0.06%)</title><rect x="1067.6" y="389" width="0.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1070.57" y="399.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.03%)</title><rect x="516.3" y="133" width="0.3" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="519.29" y="143.5" ></text>
</g>
<g >
<title>`READ-WITH-READTABLE-SYNCED^ECLECTOR.READTABLE^FN^^ (3,460 samples, 99.17%)</title><rect x="15.4" y="453" width="1170.2" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="18.41" y="463.5" >`READ-WITH-READTABLE-SYNCED^ECLECTOR.READTABLE^FN^^</text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="1076.4" y="309" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1079.36" y="319.5" ></text>
</g>
<g >
<title>`cc_TLSymbolValue (1 samples, 0.03%)</title><rect x="1154.8" y="405" width="0.4" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="1157.83" y="415.5" ></text>
</g>
<g >
<title>`__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan (9 samples, 0.26%)</title><rect x="861.3" y="229" width="3.0" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="864.26" y="239.5" ></text>
</g>
<g >
<title>`wrapped_cl__read_char_T_spT_spT_spT_sp (1 samples, 0.03%)</title><rect x="1054.0" y="341" width="0.4" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1057.04" y="351.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (18 samples, 0.52%)</title><rect x="548.8" y="261" width="6.0" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="551.76" y="271.5" ></text>
</g>
<g >
<title>`tlv_get_addr (7 samples, 0.20%)</title><rect x="387.1" y="245" width="2.4" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="390.10" y="255.5" ></text>
</g>
<g >
<title>`REP^CORE^FN^^ (3,486 samples, 99.91%)</title><rect x="10.0" y="597" width="1179.0" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >`REP^CORE^FN^^</text>
</g>
<g >
<title>`core::core__syntax_type(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (129 samples, 3.70%)</title><rect x="190.3" y="277" width="43.6" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="193.26" y="287.5" >`cor..</text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (3 samples, 0.09%)</title><rect x="1181.2" y="421" width="1.0" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="1184.21" y="431.5" ></text>
</g>
<g >
<title>`GC_clear_marks (1 samples, 0.03%)</title><rect x="769.3" y="149" width="0.3" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="772.27" y="159.5" ></text>
</g>
<g >
<title>`GC_add_map_entry (1 samples, 0.03%)</title><rect x="511.9" y="197" width="0.3" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="514.90" y="207.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.03%)</title><rect x="811.2" y="229" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="814.21" y="239.5" ></text>
</g>
<g >
<title>`GC_finish_collection (1 samples, 0.03%)</title><rect x="445.6" y="133" width="0.3" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="448.61" y="143.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (2 samples, 0.06%)</title><rect x="417.9" y="229" width="0.7" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="420.88" y="239.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (7 samples, 0.20%)</title><rect x="95.2" y="69" width="2.4" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="98.23" y="79.5" ></text>
</g>
<g >
<title>`libunwind::CompactUnwinder_x86_64&lt;libunwind::LocalAddressSpace&gt; (14 samples, 0.40%)</title><rect x="829.1" y="245" width="4.8" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="832.13" y="255.5" ></text>
</g>
<g >
<title>`core::HashTable_O::hashTableCount() const (1 samples, 0.03%)</title><rect x="1161.9" y="405" width="0.4" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1164.93" y="415.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (1 samples, 0.03%)</title><rect x="807.8" y="197" width="0.4" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="810.83" y="207.5" ></text>
</g>
<g >
<title>`READ-CHAR^COMMON-LISP^FN^^ (1 samples, 0.03%)</title><rect x="180.1" y="309" width="0.4" height="15.0" fill="rgb(99,210,210)" rx="2" ry="2" />
<text  x="183.12" y="319.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (4 samples, 0.11%)</title><rect x="923.2" y="213" width="1.3" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="926.16" y="223.5" ></text>
</g>
<g >
<title>`__gmpn_mul_1 (1 samples, 0.03%)</title><rect x="625.2" y="261" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="628.20" y="271.5" ></text>
</g>
<g >
<title>`core::Ratio_O::setf_numerator_denominator(gctools::smart_ptr&lt;co (1 samples, 0.03%)</title><rect x="754.1" y="229" width="0.3" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="757.05" y="239.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (9 samples, 0.26%)</title><rect x="691.1" y="213" width="3.1" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="694.15" y="223.5" ></text>
</g>
<g >
<title>`wrapped_cl__char_code_Character_sp (5 samples, 0.14%)</title><rect x="401.3" y="277" width="1.7" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="404.30" y="287.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.03%)</title><rect x="768.9" y="197" width="0.4" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="771.93" y="207.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (3 samples, 0.09%)</title><rect x="865.7" y="213" width="1.0" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="868.66" y="223.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="604.2" y="229" width="0.4" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="607.23" y="239.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (7 samples, 0.20%)</title><rect x="691.8" y="133" width="2.4" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="694.82" y="143.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (36 samples, 1.03%)</title><rect x="445.9" y="133" width="12.2" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="448.95" y="143.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (5 samples, 0.14%)</title><rect x="1034.8" y="293" width="1.7" height="15.0" fill="rgb(202,52,52)" rx="2" ry="2" />
<text  x="1037.76" y="303.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.03%)</title><rect x="423.6" y="245" width="0.4" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="426.63" y="255.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (3 samples, 0.09%)</title><rect x="861.6" y="197" width="1.0" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="864.60" y="207.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.03%)</title><rect x="585.3" y="277" width="0.3" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="588.29" y="287.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="97.6" y="213" width="0.3" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="100.60" y="223.5" ></text>
</g>
<g >
<title>`unw_init_local (24 samples, 0.69%)</title><rect x="874.8" y="245" width="8.1" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="877.79" y="255.5" ></text>
</g>
<g >
<title>`__cxa_throw (207 samples, 5.93%)</title><rect x="816.3" y="293" width="70.0" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="819.28" y="303.5" >`__cxa_..</text>
</g>
<g >
<title>`GC_try_to_collect_inner (16 samples, 0.46%)</title><rect x="92.2" y="133" width="5.4" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="95.18" y="143.5" ></text>
</g>
<g >
<title>`wrapped_core__syntax_type_T_spCharacter_sp (4 samples, 0.11%)</title><rect x="311.7" y="309" width="1.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="314.68" y="319.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (3 samples, 0.09%)</title><rect x="1183.6" y="437" width="1.0" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1186.57" y="447.5" ></text>
</g>
<g >
<title>`core::consume_byte_stack(gctools::smart_ptr&lt;core::T_O&gt;, unsigne (1 samples, 0.03%)</title><rect x="258.9" y="245" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="261.92" y="255.5" ></text>
</g>
<g >
<title>`unw_set_reg (4 samples, 0.11%)</title><rect x="865.3" y="229" width="1.4" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="868.32" y="239.5" ></text>
</g>
<g >
<title>`GC_mark_some (7 samples, 0.20%)</title><rect x="691.8" y="117" width="2.4" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="694.82" y="127.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (111 samples, 3.18%)</title><rect x="505.8" y="261" width="37.6" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="508.81" y="271.5" >`gc..</text>
</g>
<g >
<title>`core::apply1_inner_valist(gctools::smart_ptr&lt;core::Function_O&gt;, (1 samples, 0.03%)</title><rect x="1162.3" y="405" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="1165.27" y="415.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (1 samples, 0.03%)</title><rect x="605.9" y="277" width="0.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="608.92" y="287.5" ></text>
</g>
<g >
<title>`SYNTAX-TYPE^CORE^FN^^ (3 samples, 0.09%)</title><rect x="1040.9" y="341" width="1.0" height="15.0" fill="rgb(69,182,182)" rx="2" ry="2" />
<text  x="1043.85" y="351.5" ></text>
</g>
<g >
<title>`__gmpn_tdiv_qr (4 samples, 0.11%)</title><rect x="681.3" y="229" width="1.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="684.34" y="239.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (16 samples, 0.46%)</title><rect x="921.1" y="245" width="5.4" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="924.13" y="255.5" ></text>
</g>
<g >
<title>`__error (1 samples, 0.03%)</title><rect x="55.0" y="229" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="57.98" y="239.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.03%)</title><rect x="398.3" y="277" width="0.3" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="401.26" y="287.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.03%)</title><rect x="361.1" y="261" width="0.3" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="364.06" y="271.5" ></text>
</g>
<g >
<title>`__gmpz_sub (1 samples, 0.03%)</title><rect x="743.2" y="245" width="0.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="746.23" y="255.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.03%)</title><rect x="120.6" y="229" width="0.3" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="123.59" y="239.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (3 samples, 0.09%)</title><rect x="603.6" y="245" width="1.0" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="606.55" y="255.5" ></text>
</g>
<g >
<title>`core::General_O::initialize() (1 samples, 0.03%)</title><rect x="608.6" y="293" width="0.4" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="611.62" y="303.5" ></text>
</g>
<g >
<title>`TWO-ARG- (3 samples, 0.09%)</title><rect x="776.0" y="309" width="1.1" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="779.04" y="319.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.03%)</title><rect x="854.2" y="245" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="857.16" y="255.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (3 samples, 0.09%)</title><rect x="588.7" y="213" width="1.0" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text  x="591.67" y="223.5" ></text>
</g>
<g >
<title>`wrapped_core__vref_AbstractSimpleVector_spsize_t (6 samples, 0.17%)</title><rect x="486.5" y="261" width="2.1" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="489.53" y="271.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_cl__zerop_Number_sp (1 samples, 0.03%)</title><rect x="370.2" y="277" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="373.19" y="287.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (21 samples, 0.60%)</title><rect x="746.3" y="149" width="7.1" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="749.27" y="159.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.03%)</title><rect x="1024.6" y="293" width="0.4" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="1027.62" y="303.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.03%)</title><rect x="768.9" y="149" width="0.4" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="771.93" y="159.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.03%)</title><rect x="754.7" y="245" width="0.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="757.73" y="255.5" ></text>
</g>
<g >
<title>`cc_resetTLSymbolValue (2 samples, 0.06%)</title><rect x="1060.8" y="357" width="0.7" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="1063.81" y="367.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$cc_rewind_va_list (1 samples, 0.03%)</title><rect x="178.8" y="309" width="0.3" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="181.76" y="319.5" ></text>
</g>
<g >
<title>`GC_end_stubborn_change (1 samples, 0.03%)</title><rect x="588.0" y="245" width="0.3" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="590.99" y="255.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (22 samples, 0.63%)</title><rect x="588.3" y="245" width="7.5" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="591.33" y="255.5" ></text>
</g>
<g >
<title>`GC_clear_stack (1 samples, 0.03%)</title><rect x="1141.0" y="309" width="0.3" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="1143.96" y="319.5" ></text>
</g>
<g >
<title>`GC_malloc (6 samples, 0.17%)</title><rect x="1071.0" y="341" width="2.0" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="1073.95" y="351.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::SimpleCharacterString_O&gt; gctools::GCOb (1 samples, 0.03%)</title><rect x="146.6" y="277" width="0.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="149.64" y="287.5" ></text>
</g>
<g >
<title>`szone_free_definite_size (1 samples, 0.03%)</title><rect x="666.8" y="277" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="669.80" y="287.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (3 samples, 0.09%)</title><rect x="871.1" y="181" width="1.0" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="874.07" y="191.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.03%)</title><rect x="768.9" y="181" width="0.4" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="771.93" y="191.5" ></text>
</g>
<g >
<title>`core::parse_ltvc_toplevel_funcall(gctools::GCRootsInModule*, gc (3,486 samples, 99.91%)</title><rect x="10.0" y="741" width="1179.0" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="13.00" y="751.5" >`core::parse_ltvc_toplevel_funcall(gctools::GCRootsInModule*, gc</text>
</g>
<g >
<title>`core::cl__float(gctools::smart_ptr&lt;core::Real_O&gt;, gctools::smar (1 samples, 0.03%)</title><rect x="434.8" y="277" width="0.3" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="437.79" y="287.5" ></text>
</g>
<g >
<title>`COERCE^COMMON-LISP^FN^^ (165 samples, 4.73%)</title><rect x="404.3" y="293" width="55.9" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="407.35" y="303.5" >`COER..</text>
</g>
<g >
<title>`_dyld_find_unwind_sections (4 samples, 0.11%)</title><rect x="870.7" y="213" width="1.4" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="873.73" y="223.5" ></text>
</g>
<g >
<title>`core::eformat_read_char(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.03%)</title><rect x="62.4" y="309" width="0.4" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="65.42" y="319.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.06%)</title><rect x="475.0" y="213" width="0.7" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="478.03" y="223.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (2 samples, 0.06%)</title><rect x="1065.2" y="341" width="0.7" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="1068.20" y="351.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.06%)</title><rect x="505.1" y="245" width="0.7" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="508.13" y="255.5" ></text>
</g>
<g >
<title>`cc_makeCell (33 samples, 0.95%)</title><rect x="545.7" y="277" width="11.2" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="548.72" y="287.5" ></text>
</g>
<g >
<title>`MAKE-ARRAY^COMMON-LISP^FN^^ (2 samples, 0.06%)</title><rect x="49.6" y="341" width="0.6" height="15.0" fill="rgb(94,205,205)" rx="2" ry="2" />
<text  x="52.57" y="351.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.06%)</title><rect x="1156.5" y="389" width="0.7" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="1159.52" y="399.5" ></text>
</g>
<g >
<title>`GC_mark_some (24 samples, 0.69%)</title><rect x="1142.7" y="213" width="8.1" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="1145.65" y="223.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (1 samples, 0.03%)</title><rect x="144.9" y="101" width="0.4" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="147.94" y="111.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (8 samples, 0.23%)</title><rect x="551.5" y="229" width="2.7" height="15.0" fill="rgb(224,86,86)" rx="2" ry="2" />
<text  x="554.47" y="239.5" ></text>
</g>
<g >
<title>`READ^ECLECTOR.READER^FN^^ (2 samples, 0.06%)</title><rect x="1185.6" y="453" width="0.7" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="1188.60" y="463.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (2 samples, 0.06%)</title><rect x="925.9" y="229" width="0.6" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="928.86" y="239.5" ></text>
</g>
<g >
<title>`TWO-ARG-*^CORE^FN^^ (2 samples, 0.06%)</title><rect x="582.9" y="293" width="0.7" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="585.92" y="303.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (16 samples, 0.46%)</title><rect x="92.2" y="149" width="5.4" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="95.18" y="159.5" ></text>
</g>
<g >
<title>0x11b3801dd (1 samples, 0.03%)</title><rect x="10.0" y="501" width="0.3" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (16 samples, 0.46%)</title><rect x="92.2" y="181" width="5.4" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="95.18" y="191.5" ></text>
</g>
<g >
<title>`GC_mark_from (122 samples, 3.50%)</title><rect x="977.3" y="165" width="41.2" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="980.27" y="175.5" >`GC..</text>
</g>
<g >
<title>`unw_get_reg (3 samples, 0.09%)</title><rect x="916.4" y="277" width="1.0" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="919.39" y="287.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (93 samples, 2.67%)</title><rect x="509.2" y="245" width="31.4" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="512.19" y="255.5" >`G..</text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.03%)</title><rect x="1142.0" y="197" width="0.3" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="1144.97" y="207.5" ></text>
</g>
<g >
<title>`core::Integer_O::create(long long) (4 samples, 0.11%)</title><rect x="734.4" y="261" width="1.4" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="737.44" y="271.5" ></text>
</g>
<g >
<title>`fread (17 samples, 0.49%)</title><rect x="55.0" y="245" width="5.7" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="57.98" y="255.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.03%)</title><rect x="550.5" y="229" width="0.3" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="553.45" y="239.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.03%)</title><rect x="121.3" y="261" width="0.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="124.27" y="271.5" ></text>
</g>
<g >
<title>`GC_clear_marks (1 samples, 0.03%)</title><rect x="516.3" y="149" width="0.3" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="519.29" y="159.5" ></text>
</g>
<g >
<title>`cc_landingpadUnwindMatchFrameElseRethrow (12 samples, 0.34%)</title><rect x="1027.7" y="325" width="4.0" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1030.66" y="335.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (3 samples, 0.09%)</title><rect x="605.6" y="293" width="1.0" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="608.58" y="303.5" ></text>
</g>
<g >
<title>`free_tiny (5 samples, 0.14%)</title><rect x="719.6" y="261" width="1.6" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="722.56" y="271.5" ></text>
</g>
<g >
<title>`NSTRING-UPCASE^COMMON-LISP^FN^^ (58 samples, 1.66%)</title><rect x="469.3" y="277" width="19.6" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="472.28" y="287.5" ></text>
</g>
<g >
<title>`__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan (1 samples, 0.03%)</title><rect x="816.6" y="261" width="0.4" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="819.62" y="271.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (14 samples, 0.40%)</title><rect x="1173.1" y="389" width="4.7" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="1176.09" y="399.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (1 samples, 0.03%)</title><rect x="1136.2" y="293" width="0.4" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1139.23" y="303.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.03%)</title><rect x="756.8" y="229" width="0.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="759.76" y="239.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (6 samples, 0.17%)</title><rect x="968.1" y="245" width="2.1" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="971.14" y="255.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="753.4" y="181" width="0.3" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="756.38" y="191.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="1076.7" y="309" width="0.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="1079.70" y="319.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.03%)</title><rect x="1151.4" y="325" width="0.4" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="1154.44" y="335.5" ></text>
</g>
<g >
<title>`core::Symbol_O::fboundp() const (1 samples, 0.03%)</title><rect x="433.4" y="245" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="436.43" y="255.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (29 samples, 0.83%)</title><rect x="744.2" y="229" width="9.9" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="747.24" y="239.5" ></text>
</g>
<g >
<title>`LOWER-CASE-P^COMMON-LISP^FN^^ (11 samples, 0.32%)</title><rect x="465.6" y="277" width="3.7" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="468.56" y="287.5" ></text>
</g>
<g >
<title>`__gmpz_cdiv_qr (18 samples, 0.52%)</title><rect x="630.9" y="245" width="6.1" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="633.95" y="255.5" ></text>
</g>
<g >
<title>`wrapped_cl__zerop_Number_sp (1 samples, 0.03%)</title><rect x="493.6" y="277" width="0.4" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="496.63" y="287.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.03%)</title><rect x="691.5" y="101" width="0.3" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="694.48" y="111.5" ></text>
</g>
<g >
<title>`__gmpz_cdiv_qr (17 samples, 0.49%)</title><rect x="737.5" y="245" width="5.7" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="740.48" y="255.5" ></text>
</g>
<g >
<title>`GC_malloc (2 samples, 0.06%)</title><rect x="674.6" y="245" width="0.7" height="15.0" fill="rgb(225,87,87)" rx="2" ry="2" />
<text  x="677.57" y="255.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eql(core::HashGenerator&amp;, gctools::sm (6 samples, 0.17%)</title><rect x="214.3" y="229" width="2.0" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="217.28" y="239.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (9 samples, 0.26%)</title><rect x="803.4" y="229" width="3.1" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="806.43" y="239.5" ></text>
</g>
<g >
<title>`__cxa_get_globals (8 samples, 0.23%)</title><rect x="882.9" y="277" width="2.7" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="885.91" y="287.5" ></text>
</g>
<g >
<title>`READ-CHAR^COMMON-LISP^FN^^ (2 samples, 0.06%)</title><rect x="51.9" y="325" width="0.7" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="54.94" y="335.5" ></text>
</g>
<g >
<title>`CHAR-FLOAT-EXPONENT-MARKER-P^ECLECTOR.READER^FN^^ (4 samples, 0.11%)</title><rect x="360.7" y="293" width="1.4" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="363.72" y="303.5" ></text>
</g>
<g >
<title>`GC_build_fl (3 samples, 0.09%)</title><rect x="970.2" y="261" width="1.0" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="973.17" y="271.5" ></text>
</g>
<g >
<title>`tiny_size (6 samples, 0.17%)</title><rect x="658.3" y="245" width="2.1" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="661.34" y="255.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (13 samples, 0.37%)</title><rect x="240.7" y="293" width="4.4" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="243.66" y="303.5" ></text>
</g>
<g >
<title>`unw_get_reg (2 samples, 0.06%)</title><rect x="824.1" y="213" width="0.6" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="827.06" y="223.5" ></text>
</g>
<g >
<title>`fread (2 samples, 0.06%)</title><rect x="60.7" y="261" width="0.7" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="63.73" y="271.5" ></text>
</g>
<g >
<title>`gctools::startupGarbageCollectorAndSystem(int (*)(int, char**,  (3,486 samples, 99.91%)</title><rect x="10.0" y="917" width="1179.0" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="13.00" y="927.5" >`gctools::startupGarbageCollectorAndSystem(int (*)(int, char**, </text>
</g>
<g >
<title>`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="624.5" y="197" width="0.4" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="627.52" y="207.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (57 samples, 1.63%)</title><rect x="833.9" y="245" width="19.2" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="836.87" y="255.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$_platform_memmove (2 samples, 0.06%)</title><rect x="890.3" y="277" width="0.7" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="893.35" y="287.5" ></text>
</g>
<g >
<title>`core::Ratio_O::setf_numerator_denominator(gctools::smart_ptr&lt;co (1 samples, 0.03%)</title><rect x="754.4" y="245" width="0.3" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="757.39" y="255.5" ></text>
</g>
<g >
<title>`core::Symbol_O::fboundp() const (2 samples, 0.06%)</title><rect x="433.8" y="229" width="0.6" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="436.77" y="239.5" ></text>
</g>
<g >
<title>`pthread_once (1 samples, 0.03%)</title><rect x="884.9" y="245" width="0.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="887.94" y="255.5" ></text>
</g>
<g >
<title>`GC_add_map_entry (1 samples, 0.03%)</title><rect x="588.7" y="197" width="0.3" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="591.67" y="207.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (10 samples, 0.29%)</title><rect x="141.9" y="229" width="3.4" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="144.90" y="239.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (24 samples, 0.69%)</title><rect x="795.3" y="197" width="8.1" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="798.31" y="207.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (189 samples, 5.42%)</title><rect x="1074.3" y="325" width="64.0" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="1077.33" y="335.5" >`gctool..</text>
</g>
<g >
<title>`__cxa_begin_catch (1 samples, 0.03%)</title><rect x="1048.6" y="341" width="0.4" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1051.63" y="351.5" ></text>
</g>
<g >
<title>`__gmp_default_allocate (15 samples, 0.43%)</title><rect x="676.3" y="229" width="5.0" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="679.27" y="239.5" ></text>
</g>
<g >
<title>`core::cl__load(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (3,486 samples, 99.91%)</title><rect x="10.0" y="853" width="1179.0" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="13.00" y="863.5" >`core::cl__load(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt</text>
</g>
<g >
<title>`funlockfile (1 samples, 0.03%)</title><rect x="301.5" y="229" width="0.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="304.53" y="239.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (10 samples, 0.29%)</title><rect x="386.4" y="277" width="3.4" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="389.42" y="287.5" ></text>
</g>
<g >
<title>`free (9 samples, 0.26%)</title><rect x="708.1" y="245" width="3.0" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="711.06" y="255.5" ></text>
</g>
<g >
<title>`szone_size (1 samples, 0.03%)</title><rect x="758.1" y="245" width="0.3" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="761.11" y="255.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.03%)</title><rect x="543.4" y="261" width="0.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="546.35" y="271.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (1 samples, 0.03%)</title><rect x="605.2" y="293" width="0.4" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="608.24" y="303.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.03%)</title><rect x="585.6" y="277" width="0.4" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="588.63" y="287.5" ></text>
</g>
<g >
<title>`flockfile (3 samples, 0.09%)</title><rect x="58.7" y="229" width="1.0" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="61.70" y="239.5" ></text>
</g>
<g >
<title>`GC_is_black_listed (1 samples, 0.03%)</title><rect x="969.8" y="229" width="0.4" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="972.83" y="239.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.03%)</title><rect x="492.3" y="261" width="0.3" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="495.28" y="271.5" ></text>
</g>
<g >
<title>`VREF^CORE^SETF^^ (5 samples, 0.14%)</title><rect x="475.7" y="261" width="1.7" height="15.0" fill="rgb(74,187,187)" rx="2" ry="2" />
<text  x="478.71" y="271.5" ></text>
</g>
<g >
<title>`core::Ratio_O::create(gctools::smart_ptr&lt;core::Integer_O&gt;, gcto (5 samples, 0.14%)</title><rect x="671.9" y="261" width="1.7" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="674.87" y="271.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (11 samples, 0.32%)</title><rect x="110.4" y="69" width="3.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="113.45" y="79.5" ></text>
</g>
<g >
<title>`__gmpn_divrem_1 (2 samples, 0.06%)</title><rect x="684.7" y="213" width="0.7" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="687.72" y="223.5" ></text>
</g>
<g >
<title>`cm_check_index (1 samples, 0.03%)</title><rect x="123.3" y="293" width="0.3" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="126.30" y="303.5" ></text>
</g>
<g >
<title>`core::core__make_vector(gctools::smart_ptr&lt;core::T_O&gt;, unsigned (89 samples, 2.55%)</title><rect x="85.1" y="261" width="30.1" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="88.08" y="271.5" >`c..</text>
</g>
<g >
<title>`unw_get_proc_info (3 samples, 0.09%)</title><rect x="806.5" y="261" width="1.0" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="809.47" y="271.5" ></text>
</g>
<g >
<title>`pthread_getspecific (2 samples, 0.06%)</title><rect x="458.1" y="229" width="0.7" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="461.12" y="239.5" ></text>
</g>
<g >
<title>`__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned  (8 samples, 0.23%)</title><rect x="826.1" y="229" width="2.7" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="829.09" y="239.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (1 samples, 0.03%)</title><rect x="593.1" y="117" width="0.3" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="596.07" y="127.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_cl__hash_table_count_HashTableBase_sp (1 samples, 0.03%)</title><rect x="19.1" y="421" width="0.4" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="22.13" y="431.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.03%)</title><rect x="1141.3" y="293" width="0.3" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="1144.30" y="303.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (8 samples, 0.23%)</title><rect x="601.9" y="277" width="2.7" height="15.0" fill="rgb(228,92,92)" rx="2" ry="2" />
<text  x="604.86" y="287.5" ></text>
</g>
<g >
<title>`wrapped_core__syntax_type_T_spCharacter_sp (17 samples, 0.49%)</title><rect x="1042.9" y="325" width="5.7" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="1045.88" y="335.5" ></text>
</g>
<g >
<title>`core::General_O::initialize() (3 samples, 0.09%)</title><rect x="86.4" y="245" width="1.0" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="89.43" y="255.5" ></text>
</g>
<g >
<title>`__gmpz_init (1 samples, 0.03%)</title><rect x="670.2" y="261" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="673.18" y="271.5" ></text>
</g>
<g >
<title>`core::Ratio_O::as_double_() const (5 samples, 0.14%)</title><rect x="436.8" y="261" width="1.7" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="439.82" y="271.5" ></text>
</g>
<g >
<title>`LOGAND-2OP^CORE^FN^^ (5 samples, 0.14%)</title><rect x="371.2" y="277" width="1.7" height="15.0" fill="rgb(103,214,214)" rx="2" ry="2" />
<text  x="374.20" y="287.5" ></text>
</g>
<g >
<title>`__gmpz_realloc (1 samples, 0.03%)</title><rect x="636.4" y="229" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="639.36" y="239.5" ></text>
</g>
<g >
<title>`tlv_get_addr (4 samples, 0.11%)</title><rect x="229.5" y="229" width="1.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="232.50" y="239.5" ></text>
</g>
<g >
<title>`GC_allocobj (8 samples, 0.23%)</title><rect x="769.3" y="197" width="2.7" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="772.27" y="207.5" ></text>
</g>
<g >
<title>`TWO-ARG-*^CORE^FN^^ (1 samples, 0.03%)</title><rect x="777.1" y="309" width="0.3" height="15.0" fill="rgb(63,176,176)" rx="2" ry="2" />
<text  x="780.05" y="319.5" ></text>
</g>
<g >
<title>`cm_check_index (2 samples, 0.06%)</title><rect x="395.2" y="277" width="0.7" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="398.22" y="287.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$__gmpz_cmp_si (1 samples, 0.03%)</title><rect x="627.9" y="245" width="0.3" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="630.90" y="255.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (1 samples, 0.03%)</title><rect x="114.2" y="85" width="0.3" height="15.0" fill="rgb(252,125,125)" rx="2" ry="2" />
<text  x="117.17" y="95.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_cl__expt_Number_spNumber_sp (1 samples, 0.03%)</title><rect x="324.9" y="309" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="327.87" y="319.5" ></text>
</g>
<g >
<title>`malloc_zone_realloc (5 samples, 0.14%)</title><rect x="628.6" y="213" width="1.7" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="631.58" y="223.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.03%)</title><rect x="753.4" y="197" width="0.3" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="756.38" y="207.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$cc_rewind_va_list (1 samples, 0.03%)</title><rect x="72.2" y="325" width="0.4" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="75.23" y="335.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (1 samples, 0.03%)</title><rect x="1051.0" y="341" width="0.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1054.00" y="351.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleVector_O, gctools::smar (5 samples, 0.14%)</title><rect x="124.7" y="293" width="1.6" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="127.65" y="303.5" ></text>
</g>
<g >
<title>`GC_reclaim_block (1 samples, 0.03%)</title><rect x="691.5" y="85" width="0.3" height="15.0" fill="rgb(219,77,77)" rx="2" ry="2" />
<text  x="694.48" y="95.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (2 samples, 0.06%)</title><rect x="541.0" y="245" width="0.7" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="543.98" y="255.5" ></text>
</g>
<g >
<title>`core::cl__float(gctools::smart_ptr&lt;core::Real_O&gt;, gctools::smar (63 samples, 1.81%)</title><rect x="438.5" y="261" width="21.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="441.51" y="271.5" >`..</text>
</g>
<g >
<title>`core::cl__lower_case_p(gctools::smart_ptr&lt;core::Character_I&gt;) (1 samples, 0.03%)</title><rect x="477.7" y="261" width="0.4" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="480.74" y="271.5" ></text>
</g>
<g >
<title>`GC_remove_protection (1 samples, 0.03%)</title><rect x="1133.2" y="197" width="0.3" height="15.0" fill="rgb(217,74,74)" rx="2" ry="2" />
<text  x="1136.18" y="207.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.03%)</title><rect x="434.4" y="261" width="0.4" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="437.45" y="271.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (142 samples, 4.07%)</title><rect x="1083.8" y="197" width="48.0" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text  x="1086.80" y="207.5" >`GC_..</text>
</g>
<g >
<title>`tlv_get_addr (7 samples, 0.20%)</title><rect x="572.8" y="245" width="2.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="575.77" y="255.5" ></text>
</g>
<g >
<title>`core::lisp_true() (3 samples, 0.09%)</title><rect x="378.3" y="261" width="1.0" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="381.31" y="271.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (4 samples, 0.11%)</title><rect x="917.4" y="261" width="1.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="920.41" y="271.5" ></text>
</g>
<g >
<title>`wrapped_cl__read_T_spT_spT_spT_sp (3,479 samples, 99.71%)</title><rect x="11.4" y="485" width="1176.6" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="14.35" y="495.5" >`wrapped_cl__read_T_spT_spT_spT_sp</text>
</g>
<g >
<title>`__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned  (4 samples, 0.11%)</title><rect x="862.6" y="213" width="1.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="865.62" y="223.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.03%)</title><rect x="1063.5" y="389" width="0.3" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="1066.51" y="399.5" ></text>
</g>
<g >
<title>`GC_is_black_listed (1 samples, 0.03%)</title><rect x="589.3" y="197" width="0.4" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="592.35" y="207.5" ></text>
</g>
<g >
<title>`cc_TLSymbolValue (1 samples, 0.03%)</title><rect x="1180.2" y="421" width="0.3" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="1183.19" y="431.5" ></text>
</g>
<g >
<title>`unwind_phase2 (67 samples, 1.92%)</title><rect x="860.2" y="261" width="22.7" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="863.25" y="271.5" >`..</text>
</g>
<g >
<title>`CHAR-INVALID-P^ECLECTOR.READER^FN^^ (125 samples, 3.58%)</title><rect x="362.1" y="293" width="42.2" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="365.07" y="303.5" >`CH..</text>
</g>
<g >
<title>`MAKE-ARRAY^COMMON-LISP^FN^^ (159 samples, 4.56%)</title><rect x="73.9" y="325" width="53.8" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="76.92" y="335.5" >`MAKE..</text>
</g>
<g >
<title>`__gmp_default_allocate (5 samples, 0.14%)</title><rect x="731.7" y="261" width="1.7" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="734.73" y="271.5" ></text>
</g>
<g >
<title>`GC_reclaim_block (2 samples, 0.06%)</title><rect x="1083.1" y="149" width="0.7" height="15.0" fill="rgb(217,76,76)" rx="2" ry="2" />
<text  x="1086.13" y="159.5" ></text>
</g>
<g >
<title>`SIMPLE-EVAL^CLASP-CLEAVIR^FN^^ (3,486 samples, 99.91%)</title><rect x="10.0" y="565" width="1179.0" height="15.0" fill="rgb(81,193,193)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >`SIMPLE-EVAL^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`wrapped_cl__read_char_T_spT_spT_spT_sp (182 samples, 5.22%)</title><rect x="249.1" y="309" width="61.6" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="252.11" y="319.5" >`wrapp..</text>
</g>
<g >
<title>`core::cl__expt(gctools::smart_ptr&lt;core::Number_O&gt;, gctools::sma (2 samples, 0.06%)</title><rect x="609.3" y="293" width="0.7" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="612.30" y="303.5" ></text>
</g>
<g >
<title>`GC_mark_some (15 samples, 0.43%)</title><rect x="92.5" y="101" width="5.1" height="15.0" fill="rgb(225,86,86)" rx="2" ry="2" />
<text  x="95.52" y="111.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.03%)</title><rect x="540.3" y="213" width="0.3" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="543.31" y="223.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (167 samples, 4.79%)</title><rect x="965.8" y="293" width="56.4" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="968.77" y="303.5" >`GC_m..</text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.03%)</title><rect x="515.3" y="133" width="0.3" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="518.28" y="143.5" ></text>
</g>
<g >
<title>`cc_initialize_closure (5 samples, 0.14%)</title><rect x="544.0" y="277" width="1.7" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="547.03" y="287.5" ></text>
</g>
<g >
<title>`__gmpz_mul (4 samples, 0.11%)</title><rect x="625.5" y="261" width="1.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="628.53" y="271.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (1 samples, 0.03%)</title><rect x="1160.9" y="405" width="0.4" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="1163.91" y="415.5" ></text>
</g>
<g >
<title>`core::cl__fdefinition(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.06%)</title><rect x="433.8" y="245" width="0.6" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="436.77" y="255.5" ></text>
</g>
<g >
<title>`mach_timebase_info (6 samples, 0.17%)</title><rect x="935.3" y="261" width="2.1" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="938.33" y="271.5" ></text>
</g>
<g >
<title>`GC_clear_marks (2 samples, 0.06%)</title><rect x="444.9" y="133" width="0.7" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="447.93" y="143.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (7 samples, 0.20%)</title><rect x="764.5" y="245" width="2.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="767.54" y="255.5" ></text>
</g>
<g >
<title>`core::cl__vector_push_extend(gctools::smart_ptr&lt;core::T_O&gt;, gct (4 samples, 0.11%)</title><rect x="147.0" y="293" width="1.3" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="149.97" y="303.5" ></text>
</g>
<g >
<title>`core::cl__digit_char_p(gctools::smart_ptr&lt;core::Character_I&gt;, g (1 samples, 0.03%)</title><rect x="609.0" y="293" width="0.3" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="611.96" y="303.5" ></text>
</g>
<g >
<title>`unw_init_local (41 samples, 1.18%)</title><rect x="917.4" y="277" width="13.9" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="920.41" y="287.5" ></text>
</g>
<g >
<title>`core::cl__lower_case_p(gctools::smart_ptr&lt;core::Character_I&gt;) (5 samples, 0.14%)</title><rect x="484.8" y="245" width="1.7" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="487.84" y="255.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.03%)</title><rect x="445.6" y="101" width="0.3" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="448.61" y="111.5" ></text>
</g>
<g >
<title>`free (3 samples, 0.09%)</title><rect x="651.2" y="245" width="1.1" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="654.24" y="255.5" ></text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (3 samples, 0.09%)</title><rect x="310.7" y="309" width="1.0" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="313.66" y="319.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (39 samples, 1.12%)</title><rect x="101.7" y="117" width="13.1" height="15.0" fill="rgb(228,90,90)" rx="2" ry="2" />
<text  x="104.65" y="127.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (3 samples, 0.09%)</title><rect x="1018.5" y="165" width="1.0" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="1021.53" y="175.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_core__vref_AbstractSimpleVector_spsize_t (1 samples, 0.03%)</title><rect x="465.2" y="277" width="0.4" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="468.22" y="287.5" ></text>
</g>
<g >
<title>`GC_build_fl (6 samples, 0.17%)</title><rect x="1133.5" y="213" width="2.0" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="1136.52" y="223.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (11 samples, 0.32%)</title><rect x="677.3" y="165" width="3.7" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="680.28" y="175.5" ></text>
</g>
<g >
<title>`MAKE-VECTOR^CORE^FN^^ (96 samples, 2.75%)</title><rect x="82.7" y="293" width="32.5" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="85.71" y="303.5" >`M..</text>
</g>
<g >
<title>`tiny_size (2 samples, 0.06%)</title><rect x="953.6" y="293" width="0.7" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="956.59" y="303.5" ></text>
</g>
<g >
<title>`core::HashGenerator::rawhash() const (2 samples, 0.06%)</title><rect x="121.6" y="261" width="0.7" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="124.61" y="271.5" ></text>
</g>
<g >
<title>`GC_allocobj (2 samples, 0.06%)</title><rect x="1080.8" y="261" width="0.6" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="1083.76" y="271.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (2 samples, 0.06%)</title><rect x="864.3" y="213" width="0.7" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="867.31" y="223.5" ></text>
</g>
<g >
<title>`cc_initialize_closure (1 samples, 0.03%)</title><rect x="597.1" y="293" width="0.4" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="600.13" y="303.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (1 samples, 0.03%)</title><rect x="457.8" y="101" width="0.3" height="15.0" fill="rgb(217,74,74)" rx="2" ry="2" />
<text  x="460.78" y="111.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (5 samples, 0.14%)</title><rect x="971.5" y="165" width="1.7" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="974.52" y="175.5" ></text>
</g>
<g >
<title>`GC_find_header (1 samples, 0.03%)</title><rect x="1142.3" y="293" width="0.4" height="15.0" fill="rgb(212,67,67)" rx="2" ry="2" />
<text  x="1145.31" y="303.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (2 samples, 0.06%)</title><rect x="145.3" y="229" width="0.7" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="148.28" y="239.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (5 samples, 0.14%)</title><rect x="1022.2" y="293" width="1.7" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1025.25" y="303.5" ></text>
</g>
<g >
<title>`tiny_free_list_add_ptr (4 samples, 0.11%)</title><rect x="713.5" y="229" width="1.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="716.47" y="239.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (22 samples, 0.63%)</title><rect x="875.5" y="229" width="7.4" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="878.47" y="239.5" ></text>
</g>
<g >
<title>`GC_mark_from (23 samples, 0.66%)</title><rect x="1142.7" y="197" width="7.7" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="1145.65" y="207.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (2 samples, 0.06%)</title><rect x="1083.1" y="181" width="0.7" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="1086.13" y="191.5" ></text>
</g>
<g >
<title>all (3,489 samples, 100%)</title><rect x="10.0" y="981" width="1180.0" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="13.00" y="991.5" ></text>
</g>
<g >
<title>`GC_finish_collection (3 samples, 0.09%)</title><rect x="1082.8" y="197" width="1.0" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="1085.79" y="207.5" ></text>
</g>
<g >
<title>`wrapped_cl__char_code_Character_sp (1 samples, 0.03%)</title><rect x="361.7" y="277" width="0.4" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="364.73" y="287.5" ></text>
</g>
<g >
<title>`default_zone_realloc (1 samples, 0.03%)</title><rect x="628.9" y="197" width="0.4" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="631.92" y="207.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (71 samples, 2.03%)</title><rect x="516.3" y="213" width="24.0" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="519.29" y="223.5" >`..</text>
</g>
<g >
<title>`core::MDArray_O::vectorPushExtend(gctools::smart_ptr&lt;core::T_O&gt; (2 samples, 0.06%)</title><rect x="131.8" y="309" width="0.6" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="134.75" y="319.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::machHeader() const (1 samples, 0.03%)</title><rect x="870.7" y="181" width="0.4" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="873.73" y="191.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (11 samples, 0.32%)</title><rect x="677.3" y="181" width="3.7" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="680.28" y="191.5" ></text>
</g>
<g >
<title>`__gmpz_clear (1 samples, 0.03%)</title><rect x="667.5" y="277" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="670.47" y="287.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.03%)</title><rect x="1047.3" y="277" width="0.3" height="15.0" fill="rgb(75,222,75)" rx="2" ry="2" />
<text  x="1050.28" y="287.5" ></text>
</g>
<g >
<title>`GC_malloc_atomic (2 samples, 0.06%)</title><rect x="139.5" y="261" width="0.7" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="142.53" y="271.5" ></text>
</g>
<g >
<title>`GC_start_reclaim (5 samples, 0.14%)</title><rect x="971.5" y="181" width="1.7" height="15.0" fill="rgb(232,96,96)" rx="2" ry="2" />
<text  x="974.52" y="191.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (2 samples, 0.06%)</title><rect x="604.6" y="277" width="0.6" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="607.57" y="287.5" ></text>
</g>
<g >
<title>`GC_notify_or_invoke_finalizers (1 samples, 0.03%)</title><rect x="1020.6" y="261" width="0.3" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="1023.56" y="271.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (2 samples, 0.06%)</title><rect x="87.8" y="229" width="0.7" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="90.79" y="239.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (2 samples, 0.06%)</title><rect x="780.1" y="309" width="0.7" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="783.09" y="319.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (8 samples, 0.23%)</title><rect x="691.5" y="197" width="2.7" height="15.0" fill="rgb(248,119,119)" rx="2" ry="2" />
<text  x="694.48" y="207.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="439.9" y="245" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="442.86" y="255.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (2 samples, 0.06%)</title><rect x="539.6" y="117" width="0.7" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="542.63" y="127.5" ></text>
</g>
<g >
<title>`startup(int, char**, bool&amp;, int&amp;, int&amp;) (3,486 samples, 99.91%)</title><rect x="10.0" y="885" width="1179.0" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="13.00" y="895.5" >`startup(int, char**, bool&amp;, int&amp;, int&amp;)</text>
</g>
<g >
<title>`core::HashTableEql_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;,  (47 samples, 1.35%)</title><rect x="200.4" y="245" width="15.9" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="203.41" y="255.5" ></text>
</g>
<g >
<title>`core::clasp_integer_divide(gctools::smart_ptr&lt;core::Integer_O&gt;, (2 samples, 0.06%)</title><rect x="705.0" y="213" width="0.7" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="708.01" y="223.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.03%)</title><rect x="1142.0" y="245" width="0.3" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="1144.97" y="255.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (20 samples, 0.57%)</title><rect x="846.4" y="229" width="6.7" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="849.38" y="239.5" ></text>
</g>
<g >
<title>`GC_install_header (2 samples, 0.06%)</title><rect x="969.2" y="213" width="0.6" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="972.15" y="223.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (2 samples, 0.06%)</title><rect x="750.7" y="85" width="0.6" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="753.67" y="95.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::machHeader() const (1 samples, 0.03%)</title><rect x="902.2" y="213" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="905.19" y="223.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (112 samples, 3.21%)</title><rect x="194.7" y="261" width="37.8" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="197.66" y="271.5" >`co..</text>
</g>
<g >
<title>`__gmpn_divrem_1 (1 samples, 0.03%)</title><rect x="1189.0" y="965" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="1191.99" y="975.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.03%)</title><rect x="768.9" y="165" width="0.4" height="15.0" fill="rgb(237,105,105)" rx="2" ry="2" />
<text  x="771.93" y="175.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_cl__char_upcase_Character_sp (1 samples, 0.03%)</title><rect x="464.9" y="277" width="0.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="467.89" y="287.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.03%)</title><rect x="824.4" y="197" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="827.40" y="207.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (44 samples, 1.26%)</title><rect x="443.2" y="229" width="14.9" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="446.24" y="239.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (3 samples, 0.09%)</title><rect x="94.2" y="69" width="1.0" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="97.21" y="79.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (15 samples, 0.43%)</title><rect x="590.4" y="197" width="5.0" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="593.36" y="207.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.03%)</title><rect x="768.9" y="53" width="0.4" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="771.93" y="63.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (39 samples, 1.12%)</title><rect x="101.7" y="181" width="13.1" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="104.65" y="191.5" ></text>
</g>
<g >
<title>`__cxa_end_catch (1 samples, 0.03%)</title><rect x="1049.3" y="341" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1052.31" y="351.5" ></text>
</g>
<g >
<title>`core::template_Vector&lt;core::StrWNs_O, core::SimpleCharacterStri (21 samples, 0.60%)</title><rect x="139.5" y="277" width="7.1" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="142.53" y="287.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="1021.6" y="245" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1024.57" y="255.5" ></text>
</g>
<g >
<title>`__fread (9 samples, 0.26%)</title><rect x="55.3" y="229" width="3.1" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="58.32" y="239.5" ></text>
</g>
<g >
<title>`GC_allocobj (146 samples, 4.18%)</title><rect x="971.2" y="245" width="49.4" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="974.18" y="255.5" >`GC_..</text>
</g>
<g >
<title>`clock_gettime (10 samples, 0.29%)</title><rect x="887.0" y="293" width="3.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="889.97" y="303.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (21 samples, 0.60%)</title><rect x="746.3" y="197" width="7.1" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="749.27" y="207.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (21 samples, 0.60%)</title><rect x="427.3" y="277" width="7.1" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="430.35" y="287.5" ></text>
</g>
<g >
<title>`core::contagen_mul(gctools::smart_ptr&lt;core::Number_O&gt;, gctools: (141 samples, 4.04%)</title><rect x="726.3" y="277" width="47.7" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="729.32" y="287.5" >`cor..</text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="745.6" y="165" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="748.60" y="175.5" ></text>
</g>
<g >
<title>`core::cl__unread_char(gctools::smart_ptr&lt;core::Character_I&gt;, gc (2 samples, 0.06%)</title><rect x="1053.4" y="341" width="0.6" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="1056.36" y="351.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.03%)</title><rect x="509.9" y="229" width="0.3" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="512.87" y="239.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (1 samples, 0.03%)</title><rect x="865.7" y="181" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="868.66" y="191.5" ></text>
</g>
<g >
<title>`fread (109 samples, 3.12%)</title><rect x="264.7" y="229" width="36.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="267.67" y="239.5" >`fr..</text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (6 samples, 0.17%)</title><rect x="872.4" y="213" width="2.1" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="875.42" y="223.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_value(core::Symbol_O co (1 samples, 0.03%)</title><rect x="1036.5" y="309" width="0.3" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="1039.45" y="319.5" ></text>
</g>
<g >
<title>`GC_mark_some (15 samples, 0.43%)</title><rect x="590.4" y="149" width="5.0" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="593.36" y="159.5" ></text>
</g>
<g >
<title>`core::coerce::inputStreamDesignator(gctools::smart_ptr&lt;core::T_ (1 samples, 0.03%)</title><rect x="62.1" y="309" width="0.3" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="65.08" y="319.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (19 samples, 0.54%)</title><rect x="875.5" y="213" width="6.4" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="878.47" y="223.5" ></text>
</g>
<g >
<title>`HASH-TABLE-COUNT^COMMON-LISP^FN^^ (2 samples, 0.06%)</title><rect x="19.5" y="421" width="0.6" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="22.47" y="431.5" ></text>
</g>
<g >
<title>`core::General_O::initialize() (1 samples, 0.03%)</title><rect x="637.0" y="245" width="0.4" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="640.03" y="255.5" ></text>
</g>
<g >
<title>`unwind_phase2 (84 samples, 2.41%)</title><rect x="783.1" y="277" width="28.4" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="786.14" y="287.5" >`u..</text>
</g>
<g >
<title>`TYPE-EXPANDER^EXT^FN^^ (42 samples, 1.20%)</title><rect x="409.4" y="261" width="14.2" height="15.0" fill="rgb(98,209,209)" rx="2" ry="2" />
<text  x="412.42" y="271.5" ></text>
</g>
<g >
<title>`GC_approx_sp (2 samples, 0.06%)</title><rect x="1077.7" y="293" width="0.7" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1080.72" y="303.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.03%)</title><rect x="705.7" y="229" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="708.69" y="239.5" ></text>
</g>
<g >
<title>`cm_vref (2 samples, 0.06%)</title><rect x="577.8" y="277" width="0.7" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="580.85" y="287.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (2 samples, 0.06%)</title><rect x="1052.4" y="341" width="0.6" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1055.35" y="351.5" ></text>
</g>
<g >
<title>`GC_mark_some (39 samples, 1.12%)</title><rect x="101.7" y="101" width="13.1" height="15.0" fill="rgb(205,57,57)" rx="2" ry="2" />
<text  x="104.65" y="111.5" ></text>
</g>
<g >
<title>`GC_new_hblk (12 samples, 0.34%)</title><rect x="1131.8" y="229" width="4.1" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1134.83" y="239.5" ></text>
</g>
<g >
<title>`__cxxabiv1::set_registers(_Unwind_Exception*, _Unwind_Context*, (2 samples, 0.06%)</title><rect x="864.3" y="229" width="0.7" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="867.31" y="239.5" ></text>
</g>
<g >
<title>`cm_vref (3 samples, 0.09%)</title><rect x="395.9" y="277" width="1.0" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="398.89" y="287.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (1 samples, 0.03%)</title><rect x="445.9" y="101" width="0.4" height="15.0" fill="rgb(208,61,61)" rx="2" ry="2" />
<text  x="448.95" y="111.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$__error (1 samples, 0.03%)</title><rect x="267.7" y="213" width="0.4" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="270.71" y="223.5" ></text>
</g>
<g >
<title>`core::Ratio_O::setf_numerator_denominator(gctools::smart_ptr&lt;co (3 samples, 0.09%)</title><rect x="706.4" y="245" width="1.0" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="709.37" y="255.5" ></text>
</g>
<g >
<title>`__gmpz_add_ui (1 samples, 0.03%)</title><rect x="737.1" y="245" width="0.4" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="740.14" y="255.5" ></text>
</g>
<g >
<title>`wrapped_cl__char_code_Character_sp (4 samples, 0.11%)</title><rect x="612.0" y="293" width="1.4" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="615.01" y="303.5" ></text>
</g>
<g >
<title>`clock_gettime (8 samples, 0.23%)</title><rect x="1028.3" y="293" width="2.7" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1031.34" y="303.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (36 samples, 1.03%)</title><rect x="919.1" y="261" width="12.2" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="922.10" y="271.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (2 samples, 0.06%)</title><rect x="624.5" y="213" width="0.7" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="627.52" y="223.5" ></text>
</g>
<g >
<title>`fread (7 samples, 0.20%)</title><rect x="303.2" y="245" width="2.4" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="306.22" y="255.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (3,030 samples, 86.84%)</title><rect x="37.1" y="373" width="1024.7" height="15.0" fill="rgb(64,178,178)" rx="2" ry="2" />
<text  x="40.06" y="383.5" >`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^</text>
</g>
<g >
<title>`_Unwind_GetRegionStart (1 samples, 0.03%)</title><rect x="785.2" y="229" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="788.17" y="239.5" ></text>
</g>
<g >
<title>`__gmpz_tdiv_qr (3 samples, 0.09%)</title><rect x="742.2" y="229" width="1.0" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="745.22" y="239.5" ></text>
</g>
<g >
<title>`main (3,486 samples, 99.91%)</title><rect x="10.0" y="933" width="1179.0" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="13.00" y="943.5" >`main</text>
</g>
<g >
<title>`unw_get_proc_info (1 samples, 0.03%)</title><rect x="864.0" y="213" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="866.97" y="223.5" ></text>
</g>
<g >
<title>`__gmpz_cmp_si (2 samples, 0.06%)</title><rect x="685.7" y="245" width="0.7" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="688.74" y="255.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.03%)</title><rect x="768.9" y="101" width="0.4" height="15.0" fill="rgb(244,115,115)" rx="2" ry="2" />
<text  x="771.93" y="111.5" ></text>
</g>
<g >
<title>`wrapped_cl__read_char_T_spT_spT_spT_sp (1 samples, 0.03%)</title><rect x="1038.1" y="325" width="0.4" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1041.15" y="335.5" ></text>
</g>
<g >
<title>`wrapped_cl__lower_case_p_Character_sp (1 samples, 0.03%)</title><rect x="493.0" y="277" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="495.96" y="287.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.06%)</title><rect x="1049.6" y="325" width="0.7" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="1052.64" y="335.5" ></text>
</g>
<g >
<title>`core::Rational_O::create(__gmp_expr&lt;__mpz_struct [1], __mpz_str (80 samples, 2.29%)</title><rect x="627.6" y="261" width="27.0" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="630.56" y="271.5" >`..</text>
</g>
<g >
<title>`GC_mark_some (140 samples, 4.01%)</title><rect x="973.2" y="181" width="47.4" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="976.21" y="191.5" >`GC_..</text>
</g>
<g >
<title>`wrapped_cl__vector_push_extend_T_spVector_spsize_t (7 samples, 0.20%)</title><rect x="1038.5" y="325" width="2.4" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="1041.48" y="335.5" ></text>
</g>
<g >
<title>`wrapped_cl__gethash_T_spHashTableBase_spT_sp (1 samples, 0.03%)</title><rect x="423.3" y="245" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="426.29" y="255.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (24 samples, 0.69%)</title><rect x="1142.7" y="293" width="8.1" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="1145.65" y="303.5" ></text>
</g>
<g >
<title>`core::cl__char_upcase(gctools::smart_ptr&lt;core::Character_I&gt;) (5 samples, 0.14%)</title><rect x="482.5" y="245" width="1.7" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="485.47" y="255.5" ></text>
</g>
<g >
<title>`_pthread_mutex_firstfit_unlock_slow (1 samples, 0.03%)</title><rect x="60.1" y="213" width="0.3" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="63.05" y="223.5" ></text>
</g>
<g >
<title>`INTERPRET-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^ (1,327 samples, 38.03%)</title><rect x="325.5" y="309" width="448.8" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="328.55" y="319.5" >`INTERPRET-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^</text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (2 samples, 0.06%)</title><rect x="515.6" y="181" width="0.7" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="518.62" y="191.5" ></text>
</g>
<g >
<title>`core::General_O::_instanceClass() const (2 samples, 0.06%)</title><rect x="1161.3" y="405" width="0.6" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="1164.25" y="415.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (3 samples, 0.09%)</title><rect x="1146.4" y="181" width="1.0" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="1149.37" y="191.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="58.4" y="229" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="61.36" y="239.5" ></text>
</g>
<g >
<title>`core::apply0_inner_list(gctools::smart_ptr&lt;core::Function_O&gt;, g (3,486 samples, 99.91%)</title><rect x="10.0" y="549" width="1179.0" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >`core::apply0_inner_list(gctools::smart_ptr&lt;core::Function_O&gt;, g</text>
</g>
<g >
<title>`core::Ratio_O::create(gctools::smart_ptr&lt;core::Integer_O&gt;, gcto (55 samples, 1.58%)</title><rect x="687.8" y="245" width="18.6" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="690.76" y="255.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.03%)</title><rect x="515.3" y="117" width="0.3" height="15.0" fill="rgb(235,100,100)" rx="2" ry="2" />
<text  x="518.28" y="127.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (6 samples, 0.17%)</title><rect x="517.6" y="117" width="2.1" height="15.0" fill="rgb(225,86,86)" rx="2" ry="2" />
<text  x="520.65" y="127.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (2 samples, 0.06%)</title><rect x="806.8" y="245" width="0.7" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="809.81" y="255.5" ></text>
</g>
<g >
<title>`cc_makeCell (14 samples, 0.40%)</title><rect x="1031.7" y="325" width="4.8" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1034.72" y="335.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (3 samples, 0.09%)</title><rect x="1136.6" y="293" width="1.0" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1139.56" y="303.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (15 samples, 0.43%)</title><rect x="676.3" y="197" width="5.0" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="679.27" y="207.5" ></text>
</g>
<g >
<title>`CHAR^COMMON-LISP^SETF^^ (5 samples, 0.14%)</title><rect x="474.0" y="261" width="1.7" height="15.0" fill="rgb(52,167,167)" rx="2" ry="2" />
<text  x="477.02" y="271.5" ></text>
</g>
<g >
<title>`NEXT^ECLECTOR.READER^FN^^ (4 samples, 0.11%)</title><rect x="774.3" y="309" width="1.4" height="15.0" fill="rgb(100,211,211)" rx="2" ry="2" />
<text  x="777.35" y="319.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (2 samples, 0.06%)</title><rect x="732.7" y="197" width="0.7" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="735.75" y="207.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (1 samples, 0.03%)</title><rect x="834.5" y="213" width="0.4" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="837.55" y="223.5" ></text>
</g>
<g >
<title>`malloc (2 samples, 0.06%)</title><rect x="624.5" y="245" width="0.7" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="627.52" y="255.5" ></text>
</g>
<g >
<title>`cc_invoke_byte_code_interpreter (3,486 samples, 99.91%)</title><rect x="10.0" y="773" width="1179.0" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="13.00" y="783.5" >`cc_invoke_byte_code_interpreter</text>
</g>
<g >
<title>`GC_header_cache_miss (4 samples, 0.11%)</title><rect x="452.7" y="85" width="1.4" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="455.71" y="95.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::set_thread_local_value(gctools::smar (3 samples, 0.09%)</title><rect x="1184.6" y="437" width="1.0" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="1187.59" y="447.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.03%)</title><rect x="971.2" y="181" width="0.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="974.18" y="191.5" ></text>
</g>
<g >
<title>`core::MDArray_O::vectorPushExtend(gctools::smart_ptr&lt;core::T_O&gt; (36 samples, 1.03%)</title><rect x="134.8" y="293" width="12.2" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="137.80" y="303.5" ></text>
</g>
<g >
<title>`tiny_size (7 samples, 0.20%)</title><rect x="758.4" y="245" width="2.4" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="761.45" y="255.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (6 samples, 0.17%)</title><rect x="1083.8" y="165" width="2.0" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="1086.80" y="175.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (146 samples, 4.18%)</title><rect x="971.2" y="213" width="49.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="974.18" y="223.5" >`GC_..</text>
</g>
<g >
<title>`GC_generic_malloc_many (29 samples, 0.83%)</title><rect x="1141.3" y="309" width="9.8" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="1144.30" y="319.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.03%)</title><rect x="1060.5" y="341" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1063.47" y="351.5" ></text>
</g>
<g >
<title>`pthread_mutex_lock (1 samples, 0.03%)</title><rect x="60.4" y="229" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="63.39" y="239.5" ></text>
</g>
<g >
<title>`core::core__subclassp(gctools::smart_ptr&lt;core::T_O&gt;, gctools::s (1 samples, 0.03%)</title><rect x="1164.3" y="405" width="0.3" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="1167.30" y="415.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::keyTest(gctools::smart_ptr&lt;core::T_O&gt;, gc (2 samples, 0.06%)</title><rect x="199.7" y="245" width="0.7" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="202.73" y="255.5" ></text>
</g>
<g >
<title>`core::contagen_mul(gctools::smart_ptr&lt;core::Number_O&gt;, gctools: (2 samples, 0.06%)</title><rect x="611.0" y="293" width="0.7" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="613.99" y="303.5" ></text>
</g>
<g >
<title>`TWO-ARG-/^CORE^FN^^ (1 samples, 0.03%)</title><rect x="777.4" y="309" width="0.3" height="15.0" fill="rgb(60,174,174)" rx="2" ry="2" />
<text  x="780.39" y="319.5" ></text>
</g>
<g >
<title>`__gmpn_invert_limb (2 samples, 0.06%)</title><rect x="1189.3" y="965" width="0.7" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1192.32" y="975.5" ></text>
</g>
<g >
<title>`core::DoubleFloat_O::number_type_() const (3 samples, 0.09%)</title><rect x="435.8" y="261" width="1.0" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="438.80" y="271.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (7 samples, 0.20%)</title><rect x="922.1" y="229" width="2.4" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="925.14" y="239.5" ></text>
</g>
<g >
<title>`GC_mark_some (7 samples, 0.20%)</title><rect x="142.9" y="133" width="2.4" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="145.91" y="143.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (146 samples, 4.18%)</title><rect x="971.2" y="229" width="49.4" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="974.18" y="239.5" >`GC_..</text>
</g>
<g >
<title>`free (1 samples, 0.03%)</title><rect x="666.5" y="277" width="0.3" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="669.46" y="287.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.03%)</title><rect x="310.3" y="293" width="0.4" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="313.33" y="303.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.03%)</title><rect x="1156.2" y="405" width="0.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="1159.18" y="415.5" ></text>
</g>
<g >
<title>`wrapped_contagen_add_Number_spNumber_sp (139 samples, 3.98%)</title><rect x="620.1" y="293" width="47.0" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="623.12" y="303.5" >`wra..</text>
</g>
<g >
<title>`szone_free_definite_size (1 samples, 0.03%)</title><rect x="773.3" y="261" width="0.4" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="776.33" y="271.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (20 samples, 0.57%)</title><rect x="412.1" y="245" width="6.8" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="415.13" y="255.5" ></text>
</g>
<g >
<title>`__gmpz_realloc (1 samples, 0.03%)</title><rect x="741.9" y="229" width="0.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="744.88" y="239.5" ></text>
</g>
<g >
<title>`wrapped_core__make_vector_T_sp_________________________________ (2 samples, 0.06%)</title><rect x="115.5" y="293" width="0.7" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="118.52" y="303.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (5 samples, 0.14%)</title><rect x="731.7" y="229" width="1.7" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="734.73" y="239.5" ></text>
</g>
<g >
<title>`default_zone_free_definite_size (1 samples, 0.03%)</title><rect x="666.1" y="277" width="0.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="669.12" y="287.5" ></text>
</g>
<g >
<title>`wrapped_core__logand_2op_Integer_spInteger_sp (1 samples, 0.03%)</title><rect x="126.3" y="293" width="0.4" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="129.34" y="303.5" ></text>
</g>
<g >
<title>`ZEROP^COMMON-LISP^FN^^ (1 samples, 0.03%)</title><rect x="491.9" y="277" width="0.4" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="494.94" y="287.5" ></text>
</g>
<g >
<title>`GC_generic_malloc (163 samples, 4.67%)</title><rect x="1080.8" y="277" width="55.1" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="1083.76" y="287.5" >`GC_g..</text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Ivybridge (7 samples, 0.20%)</title><rect x="275.2" y="213" width="2.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="278.15" y="223.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (39 samples, 1.12%)</title><rect x="444.9" y="197" width="13.2" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="447.93" y="207.5" ></text>
</g>
<g >
<title>`GC_build_fl (1 samples, 0.03%)</title><rect x="590.0" y="229" width="0.4" height="15.0" fill="rgb(252,127,127)" rx="2" ry="2" />
<text  x="593.02" y="239.5" ></text>
</g>
<g >
<title>`core::log_operation_2op(core::boole_ops, gctools::smart_ptr&lt;cor (10 samples, 0.29%)</title><rect x="383.0" y="245" width="3.4" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="386.04" y="255.5" ></text>
</g>
<g >
<title>`core::cl__streamp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.03%)</title><rect x="1187.0" y="453" width="0.3" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="1189.96" y="463.5" ></text>
</g>
<g >
<title>0x11b38624a (3,486 samples, 99.91%)</title><rect x="10.0" y="517" width="1179.0" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >0x11b38624a</text>
</g>
<g >
<title>`0x1 (3,486 samples, 99.91%)</title><rect x="10.0" y="965" width="1179.0" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="13.00" y="975.5" >`0x1</text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (9 samples, 0.26%)</title><rect x="807.8" y="213" width="3.1" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="810.83" y="223.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.03%)</title><rect x="721.2" y="261" width="0.4" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="724.25" y="271.5" ></text>
</g>
<g >
<title>`malloc (11 samples, 0.32%)</title><rect x="811.5" y="261" width="3.8" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="814.55" y="271.5" ></text>
</g>
<g >
<title>`cc_resetTLSymbolValue (2 samples, 0.06%)</title><rect x="1156.5" y="405" width="0.7" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="1159.52" y="415.5" ></text>
</g>
<g >
<title>`GC_clear_stack (3 samples, 0.09%)</title><rect x="515.3" y="213" width="1.0" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="518.28" y="223.5" ></text>
</g>
<g >
<title>`wrapped_cl__fdefinition_T_sp (2 samples, 0.06%)</title><rect x="435.1" y="277" width="0.7" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="438.12" y="287.5" ></text>
</g>
<g >
<title>`libunwind::Registers_x86_64::jumpto() (1 samples, 0.03%)</title><rect x="791.9" y="261" width="0.4" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="794.93" y="271.5" ></text>
</g>
<g >
<title>`realloc (6 samples, 0.17%)</title><rect x="628.6" y="229" width="2.0" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="631.58" y="239.5" ></text>
</g>
<g >
<title>`malloc_zone_realloc (2 samples, 0.06%)</title><rect x="736.5" y="213" width="0.6" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="739.47" y="223.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.03%)</title><rect x="769.3" y="133" width="0.3" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="772.27" y="143.5" ></text>
</g>
<g >
<title>`wrapped_core__syntax_type_T_spCharacter_sp (2 samples, 0.06%)</title><rect x="1059.5" y="341" width="0.6" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1062.45" y="351.5" ></text>
</g>
<g >
<title>`wrapped_ext__class_unboundp_ClassHolder_sp (3 samples, 0.09%)</title><rect x="1182.2" y="421" width="1.0" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1185.22" y="431.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (1 samples, 0.03%)</title><rect x="769.6" y="117" width="0.3" height="15.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text  x="772.61" y="127.5" ></text>
</g>
<g >
<title>`__gmpz_add_ui (1 samples, 0.03%)</title><rect x="630.6" y="245" width="0.3" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="633.61" y="255.5" ></text>
</g>
<g >
<title>`mach_absolute_time (2 samples, 0.06%)</title><rect x="934.7" y="261" width="0.6" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="937.65" y="271.5" ></text>
</g>
<g >
<title>`GC_freehblk (1 samples, 0.03%)</title><rect x="691.5" y="69" width="0.3" height="15.0" fill="rgb(202,54,54)" rx="2" ry="2" />
<text  x="694.48" y="79.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (1 samples, 0.03%)</title><rect x="477.4" y="261" width="0.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="480.40" y="271.5" ></text>
</g>
<g >
<title>`SYNTAX-TYPE^ECLECTOR.READTABLE^((READTABLE T))^METHOD^^ (20 samples, 0.57%)</title><rect x="1041.9" y="341" width="6.7" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="1044.87" y="351.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.06%)</title><rect x="959.0" y="293" width="0.7" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="962.01" y="303.5" ></text>
</g>
<g >
<title>`core::DoubleFloat_O::as_double_() const (2 samples, 0.06%)</title><rect x="723.6" y="277" width="0.7" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="726.61" y="287.5" ></text>
</g>
<g >
<title>`wrapped_cl__hash_table_count_HashTableBase_sp (1 samples, 0.03%)</title><rect x="1180.9" y="421" width="0.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1183.87" y="431.5" ></text>
</g>
<g >
<title>`libunwind::CompactUnwinder_x86_64&lt;libunwind::LocalAddressSpace&gt; (5 samples, 0.14%)</title><rect x="792.3" y="245" width="1.7" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="795.27" y="255.5" ></text>
</g>
<g >
<title>`wrapped_contagen_div_Number_spNumber_sp (3 samples, 0.09%)</title><rect x="946.8" y="309" width="1.0" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="949.83" y="319.5" ></text>
</g>
<g >
<title>`cm_check_index (7 samples, 0.20%)</title><rect x="575.5" y="277" width="2.3" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="578.48" y="287.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.03%)</title><rect x="543.7" y="261" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="546.69" y="271.5" ></text>
</g>
<g >
<title>`core::lisp_instance_class(gctools::smart_ptr&lt;core::T_O&gt;) (4 samples, 0.11%)</title><rect x="1165.6" y="405" width="1.4" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="1168.65" y="415.5" ></text>
</g>
<g >
<title>`__cxxabiv1::set_registers(_Unwind_Exception*, _Unwind_Context*, (1 samples, 0.03%)</title><rect x="786.2" y="245" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="789.18" y="255.5" ></text>
</g>
<g >
<title>`default_zone_free_definite_size (1 samples, 0.03%)</title><rect x="1037.5" y="325" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="1040.47" y="335.5" ></text>
</g>
<g >
<title>`INTERPRET-DTREE-PROGRAM^CLOS^FN^^ (3 samples, 0.09%)</title><rect x="179.1" y="309" width="1.0" height="15.0" fill="rgb(108,218,218)" rx="2" ry="2" />
<text  x="182.10" y="319.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (2 samples, 0.06%)</title><rect x="854.8" y="213" width="0.7" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="857.84" y="223.5" ></text>
</g>
<g >
<title>`COERCE^COMMON-LISP^FN^^ (2 samples, 0.06%)</title><rect x="323.9" y="309" width="0.6" height="15.0" fill="rgb(100,210,210)" rx="2" ry="2" />
<text  x="326.85" y="319.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (17 samples, 0.49%)</title><rect x="875.8" y="197" width="5.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="878.81" y="207.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.03%)</title><rect x="501.8" y="293" width="0.3" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="504.75" y="303.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (1 samples, 0.03%)</title><rect x="411.8" y="245" width="0.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="414.79" y="255.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (6 samples, 0.17%)</title><rect x="751.3" y="85" width="2.1" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="754.35" y="95.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (71 samples, 2.03%)</title><rect x="516.3" y="165" width="24.0" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="519.29" y="175.5" >`..</text>
</g>
<g >
<title>`core::byte_code_interpreter(gctools::GCRootsInModule*, gctools: (3,486 samples, 99.91%)</title><rect x="10.0" y="757" width="1179.0" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="13.00" y="767.5" >`core::byte_code_interpreter(gctools::GCRootsInModule*, gctools:</text>
</g>
<g >
<title>`__cxxabiv1::__malloc_with_fallback(unsigned long) (11 samples, 0.32%)</title><rect x="811.5" y="277" width="3.8" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="814.55" y="287.5" ></text>
</g>
<g >
<title>`__cxxabiv1::get_shim_type_info(unsigned long long, unsigned cha (1 samples, 0.03%)</title><rect x="818.7" y="245" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="821.65" y="255.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (10 samples, 0.29%)</title><rect x="768.6" y="229" width="3.4" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="771.60" y="239.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (11 samples, 0.32%)</title><rect x="738.2" y="181" width="3.7" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="741.16" y="191.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.03%)</title><rect x="424.6" y="261" width="0.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="427.64" y="271.5" ></text>
</g>
<g >
<title>`cc_TLSymbolValue (1 samples, 0.03%)</title><rect x="1060.5" y="357" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1063.47" y="367.5" ></text>
</g>
<g >
<title>`__cxa_begin_catch (1 samples, 0.03%)</title><rect x="952.2" y="325" width="0.4" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="955.24" y="335.5" ></text>
</g>
<g >
<title>`GC_build_fl (5 samples, 0.14%)</title><rect x="513.6" y="213" width="1.7" height="15.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="516.59" y="223.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.03%)</title><rect x="89.5" y="213" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="92.48" y="223.5" ></text>
</g>
<g >
<title>`core::cl__read(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (3,478 samples, 99.68%)</title><rect x="11.7" y="469" width="1176.3" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="14.69" y="479.5" >`core::cl__read(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt</text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_value(core::Symbol_O co (1 samples, 0.03%)</title><rect x="1158.2" y="389" width="0.3" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="1161.21" y="399.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (16 samples, 0.46%)</title><rect x="861.3" y="245" width="5.4" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="864.26" y="255.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.03%)</title><rect x="575.1" y="261" width="0.4" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="578.14" y="271.5" ></text>
</g>
<g >
<title>`tiny_free_list_add_ptr (3 samples, 0.09%)</title><rect x="763.5" y="245" width="1.0" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="766.52" y="255.5" ></text>
</g>
<g >
<title>`wrapped_cl__float_Real_spT_sp (4 samples, 0.11%)</title><rect x="618.8" y="293" width="1.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="621.77" y="303.5" ></text>
</g>
<g >
<title>`GC_approx_sp (1 samples, 0.03%)</title><rect x="513.3" y="213" width="0.3" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="516.25" y="223.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (7 samples, 0.20%)</title><rect x="142.9" y="149" width="2.4" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="145.91" y="159.5" ></text>
</g>
<g >
<title>`__gmpz_tdiv_qr (1 samples, 0.03%)</title><rect x="687.1" y="245" width="0.3" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="690.09" y="255.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.03%)</title><rect x="146.3" y="261" width="0.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="149.30" y="271.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (15 samples, 0.43%)</title><rect x="590.4" y="229" width="5.0" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="593.36" y="239.5" ></text>
</g>
<g >
<title>`GC_mark_from (5 samples, 0.14%)</title><rect x="692.5" y="101" width="1.7" height="15.0" fill="rgb(212,67,67)" rx="2" ry="2" />
<text  x="695.50" y="111.5" ></text>
</g>
<g >
<title>`DIGIT-CHAR-P^COMMON-LISP^FN^^ (7 samples, 0.20%)</title><rect x="495.7" y="293" width="2.3" height="15.0" fill="rgb(106,216,216)" rx="2" ry="2" />
<text  x="498.66" y="303.5" ></text>
</g>
<g >
<title>`_pthread_mutex_firstfit_lock_slow (3 samples, 0.09%)</title><rect x="58.7" y="213" width="1.0" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="61.70" y="223.5" ></text>
</g>
<g >
<title>`LOGTEST^COMMON-LISP^FN^^ (4 samples, 0.11%)</title><rect x="502.1" y="293" width="1.3" height="15.0" fill="rgb(67,181,181)" rx="2" ry="2" />
<text  x="505.09" y="303.5" ></text>
</g>
<g >
<title>`GC_add_map_entry (1 samples, 0.03%)</title><rect x="142.2" y="181" width="0.4" height="15.0" fill="rgb(219,77,77)" rx="2" ry="2" />
<text  x="145.24" y="191.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (10 samples, 0.29%)</title><rect x="227.5" y="245" width="3.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="230.47" y="255.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.03%)</title><rect x="630.3" y="213" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="633.27" y="223.5" ></text>
</g>
<g >
<title>`tiny_size (5 samples, 0.14%)</title><rect x="709.4" y="229" width="1.7" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="712.41" y="239.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.03%)</title><rect x="1184.3" y="421" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1187.25" y="431.5" ></text>
</g>
<g >
<title>`cc_rewind_va_list (1 samples, 0.03%)</title><rect x="115.2" y="293" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="118.18" y="303.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Ivybridge (2 samples, 0.06%)</title><rect x="866.7" y="245" width="0.7" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="869.68" y="255.5" ></text>
</g>
<g >
<title>`core::eformat_read_char(gctools::smart_ptr&lt;core::T_O&gt;) (23 samples, 0.66%)</title><rect x="53.6" y="293" width="7.8" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="56.63" y="303.5" ></text>
</g>
<g >
<title>`core::utf_8_decoder(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.06%)</title><rect x="306.3" y="277" width="0.6" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="309.27" y="287.5" ></text>
</g>
<g >
<title>`unwind_phase2 (1 samples, 0.03%)</title><rect x="886.0" y="277" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="888.95" y="287.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (10 samples, 0.29%)</title><rect x="811.5" y="245" width="3.4" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="814.55" y="255.5" ></text>
</g>
<g >
<title>`GC_allocobj (161 samples, 4.61%)</title><rect x="1081.4" y="245" width="54.5" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1084.44" y="255.5" >`GC_a..</text>
</g>
<g >
<title>`GC_collect_or_expand (21 samples, 0.60%)</title><rect x="746.3" y="165" width="7.1" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="749.27" y="175.5" ></text>
</g>
<g >
<title>`wrapped_ext__class_unboundp_ClassHolder_sp (2 samples, 0.06%)</title><rect x="1177.8" y="405" width="0.7" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1180.82" y="415.5" ></text>
</g>
<g >
<title>`GC_mark_some (67 samples, 1.92%)</title><rect x="517.6" y="133" width="22.7" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="520.65" y="143.5" >`..</text>
</g>
<g >
<title>`GC_should_collect (1 samples, 0.03%)</title><rect x="1135.5" y="213" width="0.4" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="1138.55" y="223.5" ></text>
</g>
<g >
<title>`VECTOR-PUSH-EXTEND^COMMON-LISP^FN^^ (10 samples, 0.29%)</title><rect x="948.9" y="325" width="3.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="951.86" y="335.5" ></text>
</g>
<g >
<title>`GC_get_first_part (1 samples, 0.03%)</title><rect x="142.6" y="181" width="0.3" height="15.0" fill="rgb(231,96,96)" rx="2" ry="2" />
<text  x="145.58" y="191.5" ></text>
</g>
<g >
<title>`GC_add_to_black_list_stack (1 samples, 0.03%)</title><rect x="532.5" y="85" width="0.4" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="535.53" y="95.5" ></text>
</g>
<g >
<title>`rand (3 samples, 0.09%)</title><rect x="1151.8" y="341" width="1.0" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1154.78" y="351.5" ></text>
</g>
<g >
<title>`flockfile (1 samples, 0.03%)</title><rect x="54.6" y="245" width="0.4" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="57.64" y="255.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="554.2" y="229" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="557.17" y="239.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="553.8" y="213" width="0.4" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="556.83" y="223.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (1 samples, 0.03%)</title><rect x="1141.3" y="277" width="0.3" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text  x="1144.30" y="287.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (34 samples, 0.97%)</title><rect x="834.9" y="213" width="11.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="837.88" y="223.5" ></text>
</g>
<g >
<title>`core::Integer_O::create(unsigned char) (2 samples, 0.06%)</title><rect x="396.9" y="277" width="0.7" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="399.91" y="287.5" ></text>
</g>
<g >
<title>`GC_clear_marks (3 samples, 0.09%)</title><rect x="1081.8" y="197" width="1.0" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="1084.77" y="207.5" ></text>
</g>
<g >
<title>`cc_saveMultipleValue0 (1 samples, 0.03%)</title><rect x="781.8" y="309" width="0.3" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="784.79" y="319.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (13 samples, 0.37%)</title><rect x="767.9" y="245" width="4.4" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="770.92" y="255.5" ></text>
</g>
<g >
<title>`READ-AUX^ECLECTOR.READER^FN^^ (3,425 samples, 98.17%)</title><rect x="20.1" y="421" width="1158.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="23.15" y="431.5" >`READ-AUX^ECLECTOR.READER^FN^^</text>
</g>
<g >
<title>`core::lisp_true() (3 samples, 0.09%)</title><rect x="1167.0" y="405" width="1.0" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="1170.00" y="415.5" ></text>
</g>
<g >
<title>`core::eformat_read_char(gctools::smart_ptr&lt;core::T_O&gt;) (158 samples, 4.53%)</title><rect x="252.2" y="277" width="53.4" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="255.16" y="287.5" >`core..</text>
</g>
<g >
<title>`GC_finalize (1 samples, 0.03%)</title><rect x="1082.8" y="181" width="0.3" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="1085.79" y="191.5" ></text>
</g>
<g >
<title>`core::lisp_getStaticClass(gctools::Header_s::StampWtagMtag) (2 samples, 0.06%)</title><rect x="1165.0" y="405" width="0.6" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="1167.97" y="415.5" ></text>
</g>
<g >
<title>`std::get_unexpected() (1 samples, 0.03%)</title><rect x="938.4" y="293" width="0.3" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="941.37" y="303.5" ></text>
</g>
<g >
<title>`core::clasp_to_mpz(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.03%)</title><rect x="623.5" y="277" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="626.51" y="287.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (18 samples, 0.52%)</title><rect x="233.9" y="309" width="6.1" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="236.89" y="319.5" ></text>
</g>
<g >
<title>`free_tiny (8 samples, 0.23%)</title><rect x="954.3" y="309" width="2.7" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="957.27" y="319.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$_platform_memmove (1 samples, 0.03%)</title><rect x="268.1" y="213" width="0.3" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="271.05" y="223.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (2 samples, 0.06%)</title><rect x="653.3" y="229" width="0.6" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="656.27" y="239.5" ></text>
</g>
<g >
<title>`GC_mark_from (14 samples, 0.40%)</title><rect x="92.9" y="85" width="4.7" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="95.86" y="95.5" ></text>
</g>
<g >
<title>`std::__1::chrono::steady_clock::now() (8 samples, 0.23%)</title><rect x="1028.3" y="309" width="2.7" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="1031.34" y="319.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="1142.0" y="181" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="1144.97" y="191.5" ></text>
</g>
<g >
<title>`core::core__load_binary(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (3,486 samples, 99.91%)</title><rect x="10.0" y="821" width="1179.0" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="13.00" y="831.5" >`core::core__load_binary(gctools::smart_ptr&lt;core::T_O&gt;, gctools:</text>
</g>
<g >
<title>`READER-FLOAT-FORMAT^ECLECTOR.READER^FN^^ (1 samples, 0.03%)</title><rect x="582.6" y="293" width="0.3" height="15.0" fill="rgb(60,175,175)" rx="2" ry="2" />
<text  x="585.58" y="303.5" ></text>
</g>
<g >
<title>`MAKE-VECTOR^CORE^FN^^ (1 samples, 0.03%)</title><rect x="116.2" y="309" width="0.3" height="15.0" fill="rgb(101,212,212)" rx="2" ry="2" />
<text  x="119.20" y="319.5" ></text>
</g>
<g >
<title>`core::frame_check(unsigned long) (121 samples, 3.47%)</title><rect x="890.3" y="293" width="41.0" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="893.35" y="303.5" >`co..</text>
</g>
<g >
<title>`READ-CHAR^ECLECTOR.BASE^FN^^ (2 samples, 0.06%)</title><rect x="38.7" y="357" width="0.7" height="15.0" fill="rgb(70,184,184)" rx="2" ry="2" />
<text  x="41.75" y="367.5" ></text>
</g>
<g >
<title>`core::cl__read(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart_pt (1 samples, 0.03%)</title><rect x="11.0" y="485" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="14.01" y="495.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (39 samples, 1.12%)</title><rect x="101.7" y="197" width="13.1" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="104.65" y="207.5" ></text>
</g>
<g >
<title>`tlv_get_addr (8 samples, 0.23%)</title><rect x="242.3" y="277" width="2.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="245.35" y="287.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.03%)</title><rect x="745.6" y="181" width="0.3" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="748.60" y="191.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.03%)</title><rect x="786.2" y="229" width="0.3" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="789.18" y="239.5" ></text>
</g>
<g >
<title>`READ-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^ (2,890 samples, 82.83%)</title><rect x="63.4" y="341" width="977.5" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="66.44" y="351.5" >`READ-TOKEN^ECLECTOR.READER^((T T T T))^METHOD^^</text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleVector_byte8_t_O, unsig (3 samples, 0.09%)</title><rect x="395.9" y="261" width="1.0" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="398.89" y="271.5" ></text>
</g>
<g >
<title>`GC_clear_marks (1 samples, 0.03%)</title><rect x="92.2" y="117" width="0.3" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="95.18" y="127.5" ></text>
</g>
<g >
<title>`RUN-ALL/Users/karstenpoeck/lisp/compiler/clasp-karsten/src/lisp (3,486 samples, 99.91%)</title><rect x="10.0" y="789" width="1179.0" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="13.00" y="799.5" >`RUN-ALL/Users/karstenpoeck/lisp/compiler/clasp-karsten/src/lisp</text>
</g>
<g >
<title>`GC_header_cache_miss (10 samples, 0.29%)</title><rect x="529.5" y="101" width="3.4" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="532.48" y="111.5" ></text>
</g>
<g >
<title>`core::core__vref(gctools::smart_ptr&lt;core::AbstractSimpleVector_ (3 samples, 0.09%)</title><rect x="478.8" y="261" width="1.0" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="481.75" y="271.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (8 samples, 0.23%)</title><rect x="769.3" y="181" width="2.7" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="772.27" y="191.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (24 samples, 0.69%)</title><rect x="1142.7" y="245" width="8.1" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="1145.65" y="255.5" ></text>
</g>
<g >
<title>`GC_reclaim_block (1 samples, 0.03%)</title><rect x="517.3" y="101" width="0.3" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="520.31" y="111.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="772.0" y="229" width="0.3" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="774.98" y="239.5" ></text>
</g>
<g >
<title>`wrapped_cl__make_hash_table_T_spFixnum_spNumber_spReal_spSymbol (253 samples, 7.25%)</title><rect x="1068.2" y="389" width="85.6" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="1071.25" y="399.5" >`wrapped_c..</text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.03%)</title><rect x="389.5" y="261" width="0.3" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="392.47" y="271.5" ></text>
</g>
<g >
<title>`tiny_size (2 samples, 0.06%)</title><rect x="651.6" y="229" width="0.7" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="654.58" y="239.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (6 samples, 0.17%)</title><rect x="602.5" y="261" width="2.1" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="605.54" y="271.5" ></text>
</g>
<g >
<title>`TPL^CORE^FN^^ (3,486 samples, 99.91%)</title><rect x="10.0" y="645" width="1179.0" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >`TPL^CORE^FN^^</text>
</g>
<g >
<title>`wrapped_cl__zerop_Number_sp (1 samples, 0.03%)</title><rect x="1170.7" y="405" width="0.4" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="1173.72" y="415.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.03%)</title><rect x="248.8" y="309" width="0.3" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="251.77" y="319.5" ></text>
</g>
<g >
<title>`GC_clear_marks (1 samples, 0.03%)</title><rect x="971.2" y="197" width="0.3" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="974.18" y="207.5" ></text>
</g>
<g >
<title>`cc_rewind_va_list (1 samples, 0.03%)</title><rect x="492.6" y="277" width="0.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="495.62" y="287.5" ></text>
</g>
<g >
<title>`wrapped_core__logand_2op_Integer_spInteger_sp (12 samples, 0.34%)</title><rect x="382.4" y="261" width="4.0" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="385.36" y="271.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (7 samples, 0.20%)</title><rect x="788.2" y="197" width="2.4" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="791.21" y="207.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.03%)</title><rect x="418.6" y="229" width="0.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="421.55" y="239.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (1 samples, 0.03%)</title><rect x="771.6" y="101" width="0.4" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="774.64" y="111.5" ></text>
</g>
<g >
<title>`wrapped_cl__readtable_case_T_sp (1 samples, 0.03%)</title><rect x="493.3" y="277" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="496.30" y="287.5" ></text>
</g>
<g >
<title>`GC_allochblk (5 samples, 0.14%)</title><rect x="1131.8" y="213" width="1.7" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="1134.83" y="223.5" ></text>
</g>
<g >
<title>`core::Instance_O::instanceRef(unsigned long) const (1 samples, 0.03%)</title><rect x="1172.8" y="389" width="0.3" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="1175.75" y="399.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (43 samples, 1.23%)</title><rect x="100.3" y="213" width="14.5" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="103.30" y="223.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (12 samples, 0.34%)</title><rect x="807.5" y="245" width="4.0" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="810.49" y="255.5" ></text>
</g>
<g >
<title>`__cxa_decrement_exception_refcount (1 samples, 0.03%)</title><rect x="1049.0" y="341" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="1051.97" y="351.5" ></text>
</g>
<g >
<title>`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="756.4" y="229" width="0.4" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="759.42" y="239.5" ></text>
</g>
<g >
<title>`tiny_free_list_add_ptr (3 samples, 0.09%)</title><rect x="955.3" y="293" width="1.0" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="958.29" y="303.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (6 samples, 0.17%)</title><rect x="119.6" y="277" width="2.0" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="122.58" y="287.5" ></text>
</g>
<g >
<title>`__gmpz_tdiv_qr (1 samples, 0.03%)</title><rect x="636.7" y="229" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="639.70" y="239.5" ></text>
</g>
<g >
<title>`SUBCLASSP^CORE^FN^^ (3 samples, 0.09%)</title><rect x="1178.5" y="421" width="1.0" height="15.0" fill="rgb(82,195,195)" rx="2" ry="2" />
<text  x="1181.50" y="431.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (33 samples, 0.95%)</title><rect x="1139.9" y="325" width="11.2" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="1142.95" y="335.5" ></text>
</g>
<g >
<title>`GC_allochblk (1 samples, 0.03%)</title><rect x="91.8" y="197" width="0.4" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="94.85" y="207.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eql(core::HashGenerator&amp;, gctools::sm (11 samples, 0.32%)</title><rect x="216.3" y="245" width="3.7" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="219.31" y="255.5" ></text>
</g>
<g >
<title>`__gmpz_cdiv_qr (29 samples, 0.83%)</title><rect x="675.9" y="245" width="9.8" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="678.93" y="255.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (3 samples, 0.09%)</title><rect x="1132.2" y="197" width="1.0" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="1135.17" y="207.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.03%)</title><rect x="1142.0" y="213" width="0.3" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="1144.97" y="223.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (11 samples, 0.32%)</title><rect x="807.5" y="229" width="3.7" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="810.49" y="239.5" ></text>
</g>
<g >
<title>`wrapped_core__vset_T_spAbstractSimpleVector_spsize_t (1 samples, 0.03%)</title><rect x="488.6" y="261" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="491.56" y="271.5" ></text>
</g>
<g >
<title>`GC_finish_collection (5 samples, 0.14%)</title><rect x="971.5" y="197" width="1.7" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="974.52" y="207.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (16 samples, 0.46%)</title><rect x="854.8" y="245" width="5.4" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="857.84" y="255.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (30 samples, 0.86%)</title><rect x="836.2" y="197" width="10.2" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="839.24" y="207.5" ></text>
</g>
<g >
<title>`core::input_stream_read_byte8(gctools::smart_ptr&lt;core::T_O&gt;, un (126 samples, 3.61%)</title><rect x="259.3" y="245" width="42.6" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="262.26" y="255.5" >`cor..</text>
</g>
<g >
<title>`pthread_mutex_lock (1 samples, 0.03%)</title><rect x="1021.9" y="277" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="1024.91" y="287.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="768.9" y="37" width="0.4" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="771.93" y="47.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.03%)</title><rect x="557.2" y="277" width="0.4" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="560.22" y="287.5" ></text>
</g>
<g >
<title>`GC_add_to_black_list_stack (2 samples, 0.06%)</title><rect x="1114.6" y="133" width="0.7" height="15.0" fill="rgb(250,122,122)" rx="2" ry="2" />
<text  x="1117.58" y="143.5" ></text>
</g>
<g >
<title>`unw_getcontext (6 samples, 0.17%)</title><rect x="939.4" y="293" width="2.0" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="942.39" y="303.5" ></text>
</g>
<g >
<title>`core::Cons_O::memberEq(gctools::smart_ptr&lt;core::T_O&gt;) const (7 samples, 0.20%)</title><rect x="1174.4" y="373" width="2.4" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="1177.44" y="383.5" ></text>
</g>
<g >
<title>`cc_rewind_va_list (2 samples, 0.06%)</title><rect x="1051.7" y="341" width="0.7" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="1054.67" y="351.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_core__logand_2op_Integer_spInteger_sp (2 samples, 0.06%)</title><rect x="370.5" y="277" width="0.7" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="373.53" y="287.5" ></text>
</g>
<g >
<title>`cc_unwind (472 samples, 13.53%)</title><rect x="782.1" y="309" width="159.7" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="785.12" y="319.5" >`cc_unwind</text>
</g>
<g >
<title>`GC_malloc_kind (1 samples, 0.03%)</title><rect x="72.9" y="325" width="0.3" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="75.91" y="335.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleCharacterString_O, int, (4 samples, 0.11%)</title><rect x="578.5" y="277" width="1.4" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="581.52" y="287.5" ></text>
</g>
<g >
<title>`unw_set_reg (15 samples, 0.43%)</title><rect x="786.9" y="245" width="5.0" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="789.86" y="255.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (71 samples, 2.03%)</title><rect x="516.3" y="181" width="24.0" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="519.29" y="191.5" >`..</text>
</g>
<g >
<title>`GC_stopped_mark (24 samples, 0.69%)</title><rect x="1142.7" y="229" width="8.1" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="1145.65" y="239.5" ></text>
</g>
<g >
<title>`wrapped_core__subclassp_T_spT_sp (15 samples, 0.43%)</title><rect x="1172.8" y="405" width="5.0" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="1175.75" y="415.5" ></text>
</g>
<g >
<title>`VREF^CORE^FN^^ (1 samples, 0.03%)</title><rect x="491.6" y="277" width="0.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="494.61" y="287.5" ></text>
</g>
<g >
<title>`core::Lisp_O::run() (3,486 samples, 99.91%)</title><rect x="10.0" y="869" width="1179.0" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="13.00" y="879.5" >`core::Lisp_O::run()</text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (4 samples, 0.11%)</title><rect x="1042.9" y="309" width="1.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1045.88" y="319.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (25 samples, 0.72%)</title><rect x="795.0" y="213" width="8.4" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="797.98" y="223.5" ></text>
</g>
<g >
<title>`MAKE-HASH-TABLE^COMMON-LISP^FN^^ (259 samples, 7.42%)</title><rect x="1066.2" y="405" width="87.6" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="1069.22" y="415.5" >`MAKE-HASH..</text>
</g>
<g >
<title>`cc_resetTLSymbolValue (1 samples, 0.03%)</title><rect x="1183.2" y="437" width="0.4" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1186.24" y="447.5" ></text>
</g>
<g >
<title>`mach_absolute_time (1 samples, 0.03%)</title><rect x="1030.7" y="277" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1033.71" y="287.5" ></text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (3 samples, 0.09%)</title><rect x="1019.5" y="165" width="1.1" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="1022.54" y="175.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::HashTableEql_O&gt; gctools::GCObjectAppro (35 samples, 1.00%)</title><rect x="1139.9" y="341" width="11.9" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="1142.95" y="351.5" ></text>
</g>
<g >
<title>`wrapped_cl__make_hash_table_T_spFixnum_spNumber_spReal_spSymbol (1 samples, 0.03%)</title><rect x="1170.4" y="405" width="0.3" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="1173.38" y="415.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.03%)</title><rect x="874.5" y="229" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="877.45" y="239.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (26 samples, 0.75%)</title><rect x="587.0" y="261" width="8.8" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="589.98" y="271.5" ></text>
</g>
<g >
<title>`rand (1 samples, 0.03%)</title><rect x="1137.6" y="293" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1140.58" y="303.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (2 samples, 0.06%)</title><rect x="444.9" y="117" width="0.7" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="447.93" y="127.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (1 samples, 0.03%)</title><rect x="92.2" y="101" width="0.3" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="95.18" y="111.5" ></text>
</g>
<g >
<title>`wrapped_core__apply1_Function_spT_sp___________________________ (1 samples, 0.03%)</title><rect x="1172.4" y="405" width="0.4" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1175.41" y="415.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (4 samples, 0.11%)</title><rect x="513.9" y="197" width="1.4" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="516.93" y="207.5" ></text>
</g>
<g >
<title>`__cxa_decrement_exception_refcount (13 samples, 0.37%)</title><rect x="952.6" y="325" width="4.4" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="955.58" y="335.5" ></text>
</g>
<g >
<title>`cc_rewind_va_list (2 samples, 0.06%)</title><rect x="1157.2" y="405" width="0.7" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="1160.19" y="415.5" ></text>
</g>
<g >
<title>`szone_size (1 samples, 0.03%)</title><rect x="658.0" y="245" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="661.00" y="255.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::set_thread_local_value(gctools::smar (1 samples, 0.03%)</title><rect x="1186.3" y="453" width="0.3" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="1189.28" y="463.5" ></text>
</g>
<g >
<title>`GC_apply_to_all_blocks (2 samples, 0.06%)</title><rect x="1083.1" y="165" width="0.7" height="15.0" fill="rgb(212,67,67)" rx="2" ry="2" />
<text  x="1086.13" y="175.5" ></text>
</g>
<g >
<title>`__gmpn_tdiv_qr (1 samples, 0.03%)</title><rect x="685.4" y="213" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="688.40" y="223.5" ></text>
</g>
<g >
<title>`core::cl__streamp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.03%)</title><rect x="53.3" y="277" width="0.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="56.29" y="287.5" ></text>
</g>
<g >
<title>`__gmpz_cdiv_qr (3 samples, 0.09%)</title><rect x="669.2" y="261" width="1.0" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="672.16" y="271.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::create(unsigned int, gctools::smart_ptr&lt;c (4 samples, 0.11%)</title><rect x="1068.6" y="373" width="1.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="1071.58" y="383.5" ></text>
</g>
<g >
<title>`free (1 samples, 0.03%)</title><rect x="774.0" y="277" width="0.3" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="777.01" y="287.5" ></text>
</g>
<g >
<title>`__gmpz_clear (1 samples, 0.03%)</title><rect x="621.5" y="277" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="624.48" y="287.5" ></text>
</g>
<g >
<title>`core::Rational_O::create(__gmp_expr&lt;__mpz_struct [1], __mpz_str (63 samples, 1.81%)</title><rect x="735.8" y="261" width="21.3" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="738.79" y="271.5" >`..</text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.03%)</title><rect x="98.6" y="213" width="0.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="101.61" y="223.5" ></text>
</g>
<g >
<title>`start (3,486 samples, 99.91%)</title><rect x="10.0" y="949" width="1179.0" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="13.00" y="959.5" >`start</text>
</g>
<g >
<title>`rand (1 samples, 0.03%)</title><rect x="459.5" y="245" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="462.48" y="255.5" ></text>
</g>
<g >
<title>`GC_allochblk (6 samples, 0.17%)</title><rect x="511.2" y="213" width="2.1" height="15.0" fill="rgb(217,74,74)" rx="2" ry="2" />
<text  x="514.22" y="223.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (1 samples, 0.03%)</title><rect x="423.6" y="261" width="0.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="426.63" y="271.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eql(core::HashGenerator&amp;, gctools::sm (1 samples, 0.03%)</title><rect x="1046.6" y="261" width="0.3" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="1049.60" y="271.5" ></text>
</g>
<g >
<title>`free (4 samples, 0.11%)</title><rect x="952.9" y="309" width="1.4" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="955.92" y="319.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (3 samples, 0.09%)</title><rect x="970.2" y="245" width="1.0" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="973.17" y="255.5" ></text>
</g>
<g >
<title>`GC_finalize (2 samples, 0.06%)</title><rect x="516.6" y="133" width="0.7" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="519.63" y="143.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.03%)</title><rect x="1058.8" y="309" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1061.78" y="319.5" ></text>
</g>
<g >
<title>`rand (2 samples, 0.06%)</title><rect x="541.7" y="245" width="0.6" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="544.66" y="255.5" ></text>
</g>
<g >
<title>`core::Ratio_O::create(gctools::smart_ptr&lt;core::Integer_O&gt;, gcto (31 samples, 0.89%)</title><rect x="743.9" y="245" width="10.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="746.91" y="255.5" ></text>
</g>
<g >
<title>`core::Ratio_O::as_double_() const (1 samples, 0.03%)</title><rect x="440.2" y="245" width="0.3" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="443.20" y="255.5" ></text>
</g>
<g >
<title>`wrapped_contagen_add_Number_spNumber_sp (1 samples, 0.03%)</title><rect x="946.5" y="309" width="0.3" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="949.49" y="319.5" ></text>
</g>
<g >
<title>`GC_find_header (1 samples, 0.03%)</title><rect x="101.7" y="85" width="0.3" height="15.0" fill="rgb(200,51,51)" rx="2" ry="2" />
<text  x="104.65" y="95.5" ></text>
</g>
<g >
<title>`TYPEP^COMMON-LISP^FN^^ (4 samples, 0.11%)</title><rect x="583.6" y="293" width="1.3" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="586.60" y="303.5" ></text>
</g>
<g >
<title>`tlv_get_addr (3 samples, 0.09%)</title><rect x="1057.4" y="293" width="1.0" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="1060.42" y="303.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (8 samples, 0.23%)</title><rect x="691.5" y="149" width="2.7" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="694.48" y="159.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="120.9" y="229" width="0.4" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="123.93" y="239.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (4 samples, 0.11%)</title><rect x="301.9" y="245" width="1.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="304.87" y="255.5" ></text>
</g>
<g >
<title>`pthread_getspecific (1 samples, 0.03%)</title><rect x="1057.1" y="293" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1060.09" y="303.5" ></text>
</g>
<g >
<title>`unw_get_proc_info (1 samples, 0.03%)</title><rect x="874.5" y="245" width="0.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="877.45" y="255.5" ></text>
</g>
<g >
<title>`core::coerce::inputStreamDesignator(gctools::smart_ptr&lt;core::T_ (5 samples, 0.14%)</title><rect x="250.5" y="277" width="1.7" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="253.46" y="287.5" ></text>
</g>
<g >
<title>`core::Ratio_O::number_type_() const (2 samples, 0.06%)</title><rect x="725.3" y="277" width="0.7" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="728.31" y="287.5" ></text>
</g>
<g >
<title>`szone_malloc (1 samples, 0.03%)</title><rect x="814.9" y="245" width="0.4" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="817.93" y="255.5" ></text>
</g>
<g >
<title>`FLOAT^COMMON-LISP^FN^^ (5 samples, 0.14%)</title><rect x="500.1" y="293" width="1.7" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="503.06" y="303.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (148 samples, 4.24%)</title><rect x="1081.8" y="229" width="50.0" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="1084.77" y="239.5" >`GC_c..</text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (1 samples, 0.03%)</title><rect x="946.2" y="309" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="949.15" y="319.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (84 samples, 2.41%)</title><rect x="783.1" y="293" width="28.4" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="786.14" y="303.5" >`_..</text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::StrWNs_O&gt; gctools::GCObjectAppropriate (47 samples, 1.35%)</title><rect x="98.9" y="229" width="15.9" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="101.95" y="239.5" ></text>
</g>
<g >
<title>`core::cl__zerop(gctools::smart_ptr&lt;core::Number_O&gt;) (6 samples, 0.17%)</title><rect x="375.9" y="261" width="2.1" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="378.94" y="271.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Nehalem (1 samples, 0.03%)</title><rect x="918.8" y="261" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="921.76" y="271.5" ></text>
</g>
<g >
<title>`_Unwind_RaiseException (197 samples, 5.65%)</title><rect x="816.3" y="277" width="66.6" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="819.28" y="287.5" >`_Unwin..</text>
</g>
<g >
<title>`core::cl__hash_table_count(gctools::smart_ptr&lt;core::HashTableBa (2 samples, 0.06%)</title><rect x="1162.9" y="405" width="0.7" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="1165.94" y="415.5" ></text>
</g>
<g >
<title>`core::expt_zero(gctools::smart_ptr&lt;core::Number_O&gt;, gctools::sm (3 samples, 0.09%)</title><rect x="617.8" y="277" width="1.0" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="620.76" y="287.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (3 samples, 0.09%)</title><rect x="780.8" y="309" width="1.0" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="783.77" y="319.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.03%)</title><rect x="515.3" y="101" width="0.3" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="518.28" y="111.5" ></text>
</g>
<g >
<title>`core::cl__vector_push_extend(gctools::smart_ptr&lt;core::T_O&gt;, gct (2 samples, 0.06%)</title><rect x="132.4" y="309" width="0.7" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="135.43" y="319.5" ></text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eq(core::HashGenerator&amp;, gctools::sma (2 samples, 0.06%)</title><rect x="417.2" y="229" width="0.7" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="420.20" y="239.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_cl__char_code_Character_sp (1 samples, 0.03%)</title><rect x="499.7" y="293" width="0.4" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="502.72" y="303.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (2 samples, 0.06%)</title><rect x="89.1" y="229" width="0.7" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="92.14" y="239.5" ></text>
</g>
<g >
<title>`GC_allocobj (8 samples, 0.23%)</title><rect x="691.5" y="181" width="2.7" height="15.0" fill="rgb(223,83,83)" rx="2" ry="2" />
<text  x="694.48" y="191.5" ></text>
</g>
<g >
<title>`FDEFINITION^COMMON-LISP^FN^^ (1 samples, 0.03%)</title><rect x="405.4" y="277" width="0.3" height="15.0" fill="rgb(50,165,165)" rx="2" ry="2" />
<text  x="408.36" y="287.5" ></text>
</g>
<g >
<title>`core::clasp_to_mpz(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.06%)</title><rect x="667.8" y="277" width="0.7" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="670.81" y="287.5" ></text>
</g>
<g >
<title>`GC_build_fl (1 samples, 0.03%)</title><rect x="444.6" y="197" width="0.3" height="15.0" fill="rgb(228,90,90)" rx="2" ry="2" />
<text  x="447.59" y="207.5" ></text>
</g>
<g >
<title>`wrapped_cl__lower_case_p_Character_sp (7 samples, 0.20%)</title><rect x="484.2" y="261" width="2.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="487.16" y="271.5" ></text>
</g>
<g >
<title>`szone_size (1 samples, 0.03%)</title><rect x="773.7" y="261" width="0.3" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="776.67" y="271.5" ></text>
</g>
<g >
<title>`malloc (5 samples, 0.14%)</title><rect x="731.7" y="245" width="1.7" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="734.73" y="255.5" ></text>
</g>
<g >
<title>`GETHASH^COMMON-LISP^FN^^ (1 samples, 0.03%)</title><rect x="410.4" y="245" width="0.4" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="413.44" y="255.5" ></text>
</g>
<g >
<title>`READTABLE-CASE^COMMON-LISP^FN^^ (3 samples, 0.09%)</title><rect x="488.9" y="277" width="1.0" height="15.0" fill="rgb(80,192,192)" rx="2" ry="2" />
<text  x="491.90" y="287.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (10 samples, 0.29%)</title><rect x="572.1" y="277" width="3.4" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="575.10" y="287.5" ></text>
</g>
<g >
<title>`cc_rewind_va_list (1 samples, 0.03%)</title><rect x="1180.5" y="421" width="0.4" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="1183.53" y="431.5" ></text>
</g>
<g >
<title>`free (15 samples, 0.43%)</title><rect x="655.3" y="261" width="5.1" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="658.30" y="271.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$cc_multipleValuesArrayAddress (3 samples, 0.09%)</title><rect x="498.0" y="293" width="1.0" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="501.03" y="303.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.03%)</title><rect x="768.9" y="69" width="0.4" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="771.93" y="79.5" ></text>
</g>
<g >
<title>`CLASS-UNBOUNDP^EXT^FN^^ (1 samples, 0.03%)</title><rect x="18.8" y="421" width="0.3" height="15.0" fill="rgb(90,201,201)" rx="2" ry="2" />
<text  x="21.79" y="431.5" ></text>
</g>
<g >
<title>`GC_clear_stack (1 samples, 0.03%)</title><rect x="1075.7" y="309" width="0.3" height="15.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="1078.69" y="319.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (161 samples, 4.61%)</title><rect x="1081.4" y="261" width="54.5" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="1084.44" y="271.5" >`GC_g..</text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (1 samples, 0.03%)</title><rect x="810.9" y="213" width="0.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="813.87" y="223.5" ></text>
</g>
<g >
<title>`GC_clear_stack (1 samples, 0.03%)</title><rect x="1142.0" y="293" width="0.3" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="1144.97" y="303.5" ></text>
</g>
<g >
<title>`cc_makeCell (23 samples, 0.66%)</title><rect x="597.5" y="293" width="7.7" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="600.46" y="303.5" ></text>
</g>
<g >
<title>`_pthread_mutex_firstfit_unlock_slow (26 samples, 0.75%)</title><rect x="292.1" y="197" width="8.8" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="295.06" y="207.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (13 samples, 0.37%)</title><rect x="870.1" y="229" width="4.4" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="873.06" y="239.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.03%)</title><rect x="601.5" y="277" width="0.4" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="604.52" y="287.5" ></text>
</g>
<g >
<title>`core::Rational_O::create(__gmp_expr&lt;__mpz_struct [1], __mpz_str (131 samples, 3.75%)</title><rect x="673.6" y="261" width="44.3" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="676.56" y="271.5" >`cor..</text>
</g>
<g >
<title>`SIMPLE-TYPE-PREDICATE^CORE^FN^^ (8 samples, 0.23%)</title><rect x="430.1" y="261" width="2.7" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="433.05" y="271.5" ></text>
</g>
<g >
<title>`core::cl__unread_char(gctools::smart_ptr&lt;core::Character_I&gt;, gc (14 samples, 0.40%)</title><rect x="1054.4" y="325" width="4.7" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1057.38" y="335.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (4 samples, 0.11%)</title><rect x="1055.7" y="293" width="1.4" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="1058.73" y="303.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (5 samples, 0.14%)</title><rect x="858.6" y="229" width="1.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="861.56" y="239.5" ></text>
</g>
<g >
<title>`CHAR^COMMON-LISP^SETF^^ (2 samples, 0.06%)</title><rect x="464.2" y="277" width="0.7" height="15.0" fill="rgb(105,215,215)" rx="2" ry="2" />
<text  x="467.21" y="287.5" ></text>
</g>
<g >
<title>`client_validate (3 samples, 0.09%)</title><rect x="1173.4" y="373" width="1.0" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1176.43" y="383.5" ></text>
</g>
<g >
<title>`__gmpz_tdiv_qr (6 samples, 0.17%)</title><rect x="683.7" y="229" width="2.0" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="686.71" y="239.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (16 samples, 0.46%)</title><rect x="389.8" y="277" width="5.4" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="392.81" y="287.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.03%)</title><rect x="639.1" y="229" width="0.3" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="642.06" y="239.5" ></text>
</g>
<g >
<title>`_Unwind_Resume (4 samples, 0.11%)</title><rect x="777.7" y="309" width="1.4" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="780.73" y="319.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (16 samples, 0.46%)</title><rect x="997.6" y="149" width="5.4" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="1000.56" y="159.5" ></text>
</g>
<g >
<title>`ZEROP^COMMON-LISP^FN^^ (1 samples, 0.03%)</title><rect x="360.7" y="277" width="0.4" height="15.0" fill="rgb(78,191,191)" rx="2" ry="2" />
<text  x="363.72" y="287.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (2 samples, 0.06%)</title><rect x="393.5" y="261" width="0.7" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="396.53" y="271.5" ></text>
</g>
<g >
<title>`_Unwind_GetRegionStart (2 samples, 0.06%)</title><rect x="825.4" y="229" width="0.7" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="828.41" y="239.5" ></text>
</g>
<g >
<title>`wrapped_cl__char_upcase_Character_sp (11 samples, 0.32%)</title><rect x="480.4" y="261" width="3.8" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="483.44" y="271.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::machHeader() const (1 samples, 0.03%)</title><rect x="922.8" y="213" width="0.4" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="925.82" y="223.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (71 samples, 2.03%)</title><rect x="892.4" y="277" width="24.0" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="895.38" y="287.5" >`..</text>
</g>
<g >
<title>0x11b380256 (1 samples, 0.03%)</title><rect x="1188.0" y="501" width="0.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="1190.97" y="511.5" ></text>
</g>
<g >
<title>`cc_enclose (120 samples, 3.44%)</title><rect x="503.4" y="277" width="40.6" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="506.44" y="287.5" >`cc..</text>
</g>
<g >
<title>`_Unwind_GetLanguageSpecificData (2 samples, 0.06%)</title><rect x="824.7" y="229" width="0.7" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="827.74" y="239.5" ></text>
</g>
<g >
<title>`___LAMBDA___top.lsp-top137^332^12180 (3,486 samples, 99.91%)</title><rect x="10.0" y="693" width="1179.0" height="15.0" fill="rgb(80,193,193)" rx="2" ry="2" />
<text  x="13.00" y="703.5" >`___LAMBDA___top.lsp-top137^332^12180</text>
</g>
<g >
<title>`GC_header_cache_miss (8 samples, 0.23%)</title><rect x="107.7" y="69" width="2.7" height="15.0" fill="rgb(239,106,106)" rx="2" ry="2" />
<text  x="110.74" y="79.5" ></text>
</g>
<g >
<title>`clear_marks_for_block (2 samples, 0.06%)</title><rect x="1082.1" y="165" width="0.7" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="1085.11" y="175.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.06%)</title><rect x="1031.0" y="309" width="0.7" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="1034.04" y="319.5" ></text>
</g>
<g >
<title>`GC_mark_from (15 samples, 0.43%)</title><rect x="590.4" y="133" width="5.0" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="593.36" y="143.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (25 samples, 0.72%)</title><rect x="745.6" y="213" width="8.5" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="748.60" y="223.5" ></text>
</g>
<g >
<title>`TYPE-EXPANDER^EXT^FN^^ (5 samples, 0.14%)</title><rect x="425.7" y="277" width="1.6" height="15.0" fill="rgb(97,208,208)" rx="2" ry="2" />
<text  x="428.65" y="287.5" ></text>
</g>
<g >
<title>`GC_mark_from (6 samples, 0.17%)</title><rect x="769.9" y="117" width="2.1" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="772.95" y="127.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.03%)</title><rect x="1183.2" y="421" width="0.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1186.24" y="431.5" ></text>
</g>
<g >
<title>`CCLASP-EVAL^CLASP-CLEAVIR^FN^^ (3,486 samples, 99.91%)</title><rect x="10.0" y="581" width="1179.0" height="15.0" fill="rgb(93,204,204)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >`CCLASP-EVAL^CLASP-CLEAVIR^FN^^</text>
</g>
<g >
<title>`FUNCTIONP^COMMON-LISP^FN^^ (6 samples, 0.17%)</title><rect x="405.7" y="277" width="2.0" height="15.0" fill="rgb(55,170,170)" rx="2" ry="2" />
<text  x="408.70" y="287.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.03%)</title><rect x="773.0" y="245" width="0.3" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="775.99" y="255.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.03%)</title><rect x="361.4" y="277" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="364.40" y="287.5" ></text>
</g>
<g >
<title>`GC_notify_or_invoke_finalizers (1 samples, 0.03%)</title><rect x="551.1" y="229" width="0.4" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="554.13" y="239.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (1 samples, 0.03%)</title><rect x="901.8" y="213" width="0.4" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="904.85" y="223.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (15 samples, 0.43%)</title><rect x="590.4" y="165" width="5.0" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="593.36" y="175.5" ></text>
</g>
<g >
<title>`cc_enclose (1 samples, 0.03%)</title><rect x="1050.3" y="341" width="0.4" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="1053.32" y="351.5" ></text>
</g>
<g >
<title>`core::eformat_unread_char(gctools::smart_ptr&lt;core::T_O&gt;, int) (11 samples, 0.32%)</title><rect x="1054.7" y="309" width="3.7" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="1057.72" y="319.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="1023.9" y="293" width="0.4" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1026.94" y="303.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.03%)</title><rect x="595.4" y="229" width="0.4" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="598.43" y="239.5" ></text>
</g>
<g >
<title>`core::frame_check(unsigned long) (6 samples, 0.17%)</title><rect x="943.1" y="309" width="2.0" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="946.11" y="319.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.03%)</title><rect x="706.0" y="229" width="0.4" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="709.03" y="239.5" ></text>
</g>
<g >
<title>`GC_allocobj (15 samples, 0.43%)</title><rect x="590.4" y="213" width="5.0" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="593.36" y="223.5" ></text>
</g>
<g >
<title>`_Unwind_GetLanguageSpecificData (4 samples, 0.11%)</title><rect x="861.3" y="213" width="1.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="864.26" y="223.5" ></text>
</g>
<g >
<title>`dyld::findImageContainingAddress(void const*) (4 samples, 0.11%)</title><rect x="924.5" y="229" width="1.4" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="927.51" y="239.5" ></text>
</g>
<g >
<title>`core::StrWNs_O::make(unsigned long, int, bool, gctools::smart_p (3 samples, 0.09%)</title><rect x="84.1" y="261" width="1.0" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="87.07" y="271.5" ></text>
</g>
<g >
<title>`core::lisp_getStaticClass(gctools::Header_s::StampWtagMtag) (3 samples, 0.09%)</title><rect x="1168.0" y="389" width="1.0" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="1171.02" y="399.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (195 samples, 5.59%)</title><rect x="959.7" y="309" width="65.9" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="962.68" y="319.5" >`gctool..</text>
</g>
<g >
<title>`GC_header_cache_miss (1 samples, 0.03%)</title><rect x="746.3" y="101" width="0.3" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="749.27" y="111.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (4 samples, 0.11%)</title><rect x="790.6" y="213" width="1.3" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="793.58" y="223.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.06%)</title><rect x="120.6" y="245" width="0.7" height="15.0" fill="rgb(250,122,122)" rx="2" ry="2" />
<text  x="123.59" y="255.5" ></text>
</g>
<g >
<title>`GC_allocobj (7 samples, 0.20%)</title><rect x="142.9" y="197" width="2.4" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="145.91" y="207.5" ></text>
</g>
<g >
<title>`rand (2 samples, 0.06%)</title><rect x="97.9" y="213" width="0.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="100.93" y="223.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (7 samples, 0.20%)</title><rect x="142.9" y="165" width="2.4" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="145.91" y="175.5" ></text>
</g>
<g >
<title>`SIMPLE-TYPE-PREDICATE^CORE^FN^^ (2 samples, 0.06%)</title><rect x="425.0" y="277" width="0.7" height="15.0" fill="rgb(58,172,172)" rx="2" ry="2" />
<text  x="427.98" y="287.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="687.4" y="245" width="0.4" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="690.43" y="255.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (1 samples, 0.03%)</title><rect x="434.4" y="277" width="0.4" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="437.45" y="287.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (3 samples, 0.09%)</title><rect x="512.2" y="197" width="1.1" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="515.24" y="207.5" ></text>
</g>
<g >
<title>`GC_allocobj (39 samples, 1.12%)</title><rect x="101.7" y="165" width="13.1" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="104.65" y="175.5" ></text>
</g>
<g >
<title>`VALUES-LIST^COMMON-LISP^FN^^ (1 samples, 0.03%)</title><rect x="1179.5" y="421" width="0.4" height="15.0" fill="rgb(102,213,213)" rx="2" ry="2" />
<text  x="1182.52" y="431.5" ></text>
</g>
<g >
<title>`wrapped_core__syntax_type_T_spCharacter_sp (139 samples, 3.98%)</title><rect x="186.9" y="293" width="47.0" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="189.88" y="303.5" >`wra..</text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.03%)</title><rect x="119.2" y="277" width="0.4" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="122.24" y="287.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (9 samples, 0.26%)</title><rect x="1147.4" y="181" width="3.0" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="1150.39" y="191.5" ></text>
</g>
<g >
<title>`READ-CHAR-HANDLING-EOF^ECLECTOR.READER^FN^^ (486 samples, 13.93%)</title><rect x="148.7" y="325" width="164.3" height="15.0" fill="rgb(79,191,191)" rx="2" ry="2" />
<text  x="151.66" y="335.5" >`READ-CHAR-HANDLING-E..</text>
</g>
<g >
<title>`EMF-FROM-CONTF.LAMBDA^CLOS^FN^^ (3,046 samples, 87.30%)</title><rect x="32.0" y="405" width="1030.2" height="15.0" fill="rgb(89,201,201)" rx="2" ry="2" />
<text  x="34.98" y="415.5" >`EMF-FROM-CONTF.LAMBDA^CLOS^FN^^</text>
</g>
<g >
<title>`GC_mark_from (59 samples, 1.69%)</title><rect x="519.7" y="117" width="19.9" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="522.68" y="127.5" ></text>
</g>
<g >
<title>`core::clasp_gcd(gctools::smart_ptr&lt;core::Integer_O&gt;, gctools::s (1 samples, 0.03%)</title><rect x="650.2" y="229" width="0.4" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="653.22" y="239.5" ></text>
</g>
<g >
<title>`malloc (15 samples, 0.43%)</title><rect x="676.3" y="213" width="5.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="679.27" y="223.5" ></text>
</g>
<g >
<title>`tlv_get_addr (3 samples, 0.09%)</title><rect x="542.3" y="245" width="1.1" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="545.34" y="255.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (2 samples, 0.06%)</title><rect x="422.6" y="245" width="0.7" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="425.61" y="255.5" ></text>
</g>
<g >
<title>`CONVERT-ACCORDING-TO-READTABLE-CASE^ECLECTOR.READER^FN^^ (105 samples, 3.01%)</title><rect x="460.2" y="293" width="35.5" height="15.0" fill="rgb(65,179,179)" rx="2" ry="2" />
<text  x="463.15" y="303.5" >`CO..</text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eql(core::HashGenerator&amp;, gctools::sm (1 samples, 0.03%)</title><rect x="123.0" y="245" width="0.3" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="125.96" y="255.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::SimpleCharacterString_O&gt; gctools::GCOb (27 samples, 0.77%)</title><rect x="89.8" y="229" width="9.1" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="92.82" y="239.5" ></text>
</g>
<g >
<title>`core::Ratio_O::create(gctools::smart_ptr&lt;core::Integer_O&gt;, gcto (40 samples, 1.15%)</title><rect x="637.4" y="245" width="13.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="640.37" y="255.5" ></text>
</g>
<g >
<title>`clock_gettime (18 samples, 0.52%)</title><rect x="931.3" y="277" width="6.1" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="934.27" y="287.5" ></text>
</g>
<g >
<title>`GC_mark_some (36 samples, 1.03%)</title><rect x="445.9" y="117" width="12.2" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="448.95" y="127.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (11 samples, 0.32%)</title><rect x="1032.7" y="309" width="3.8" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="1035.73" y="319.5" ></text>
</g>
<g >
<title>`unw_step (1 samples, 0.03%)</title><rect x="885.6" y="277" width="0.4" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="888.61" y="287.5" ></text>
</g>
<g >
<title>`core::Ratio_O::setf_numerator_denominator(gctools::smart_ptr&lt;co (27 samples, 0.77%)</title><rect x="641.1" y="229" width="9.1" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="644.09" y="239.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (4 samples, 0.11%)</title><rect x="1035.1" y="277" width="1.4" height="15.0" fill="rgb(206,58,58)" rx="2" ry="2" />
<text  x="1038.10" y="287.5" ></text>
</g>
<g >
<title>`gctools::GCVector&lt;core::Cons_O, gctools::GCContainerAllocator&lt;g (4 samples, 0.11%)</title><rect x="1138.3" y="341" width="1.3" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="1141.25" y="351.5" ></text>
</g>
<g >
<title>`__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned  (2 samples, 0.06%)</title><rect x="785.5" y="229" width="0.7" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="788.51" y="239.5" ></text>
</g>
<g >
<title>`GC_get_first_part (3 samples, 0.09%)</title><rect x="968.8" y="229" width="1.0" height="15.0" fill="rgb(252,125,125)" rx="2" ry="2" />
<text  x="971.81" y="239.5" ></text>
</g>
<g >
<title>`CONVERT-ACCORDING-TO-READTABLE-CASE^ECLECTOR.READER^FN^^ (1 samples, 0.03%)</title><rect x="324.5" y="309" width="0.4" height="15.0" fill="rgb(85,197,197)" rx="2" ry="2" />
<text  x="327.53" y="319.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (25 samples, 0.72%)</title><rect x="783.5" y="261" width="8.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="786.48" y="271.5" ></text>
</g>
<g >
<title>`GC_malloc_atomic (1 samples, 0.03%)</title><rect x="439.5" y="245" width="0.4" height="15.0" fill="rgb(212,67,67)" rx="2" ry="2" />
<text  x="442.52" y="255.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleVector_byte8_t_O, unsig (8 samples, 0.23%)</title><rect x="398.6" y="277" width="2.7" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="401.60" y="287.5" ></text>
</g>
<g >
<title>`__gmpn_mul_1 (1 samples, 0.03%)</title><rect x="733.4" y="261" width="0.4" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="736.42" y="271.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (2 samples, 0.06%)</title><rect x="691.8" y="101" width="0.7" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="694.82" y="111.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.03%)</title><rect x="604.9" y="261" width="0.3" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="607.90" y="271.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.03%)</title><rect x="606.3" y="277" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="609.26" y="287.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.03%)</title><rect x="754.7" y="229" width="0.4" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="757.73" y="239.5" ></text>
</g>
<g >
<title>`GC_find_header (1 samples, 0.03%)</title><rect x="972.5" y="133" width="0.4" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="975.53" y="143.5" ></text>
</g>
<g >
<title>`READ-CHAR-HANDLING-EOF^ECLECTOR.READER^FN^^ (1 samples, 0.03%)</title><rect x="50.9" y="341" width="0.4" height="15.0" fill="rgb(72,185,185)" rx="2" ry="2" />
<text  x="53.92" y="351.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$free (1 samples, 0.03%)</title><rect x="668.8" y="261" width="0.4" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="671.82" y="271.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.03%)</title><rect x="585.6" y="261" width="0.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="588.63" y="271.5" ></text>
</g>
<g >
<title>`GC_end_stubborn_change (1 samples, 0.03%)</title><rect x="1063.8" y="373" width="0.4" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="1066.85" y="383.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.03%)</title><rect x="1137.9" y="293" width="0.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1140.92" y="303.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (5 samples, 0.14%)</title><rect x="813.2" y="213" width="1.7" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="816.24" y="223.5" ></text>
</g>
<g >
<title>`READ-COMMON^ECLECTOR.READER^((:AROUND) (T T T T))^METHOD^^ (1 samples, 0.03%)</title><rect x="34.7" y="389" width="0.3" height="15.0" fill="rgb(69,183,183)" rx="2" ry="2" />
<text  x="37.69" y="399.5" ></text>
</g>
<g >
<title>`core::core__logand_2op(gctools::smart_ptr&lt;core::Integer_O&gt;, gct (3 samples, 0.09%)</title><rect x="123.6" y="293" width="1.1" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="126.64" y="303.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="1141.6" y="277" width="0.4" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1144.64" y="287.5" ></text>
</g>
<g >
<title>`LOGAND-2OP^CORE^FN^^ (2 samples, 0.06%)</title><rect x="79.0" y="309" width="0.7" height="15.0" fill="rgb(65,178,178)" rx="2" ry="2" />
<text  x="81.99" y="319.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (2 samples, 0.06%)</title><rect x="595.8" y="261" width="0.6" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="598.77" y="271.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (8 samples, 0.23%)</title><rect x="1045.6" y="293" width="2.7" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="1048.59" y="303.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (2 samples, 0.06%)</title><rect x="1157.9" y="405" width="0.6" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="1160.87" y="415.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__malloc_with_fallback(unsigned long) (2 samples, 0.06%)</title><rect x="886.3" y="293" width="0.7" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="889.29" y="303.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (1 samples, 0.03%)</title><rect x="1036.5" y="325" width="0.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="1039.45" y="335.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (16 samples, 0.46%)</title><rect x="92.2" y="197" width="5.4" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text  x="95.18" y="207.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.06%)</title><rect x="1065.2" y="357" width="0.7" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="1068.20" y="367.5" ></text>
</g>
<g >
<title>`szone_realloc (3 samples, 0.09%)</title><rect x="629.3" y="197" width="1.0" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="632.25" y="207.5" ></text>
</g>
<g >
<title>`wrapped_core__make_vector_T_sp_________________________________ (93 samples, 2.67%)</title><rect x="83.7" y="277" width="31.5" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="86.73" y="287.5" >`w..</text>
</g>
<g >
<title>`core::utf_8_decoder(gctools::smart_ptr&lt;core::T_O&gt;) (144 samples, 4.13%)</title><rect x="256.9" y="261" width="48.7" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="259.89" y="271.5" >`cor..</text>
</g>
<g >
<title>`NEXT^ECLECTOR.READER^FN^^ (63 samples, 1.81%)</title><rect x="558.6" y="293" width="21.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="561.57" y="303.5" >`..</text>
</g>
<g >
<title>`GC_push_contents_hdr (1 samples, 0.03%)</title><rect x="1150.4" y="197" width="0.4" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="1153.43" y="207.5" ></text>
</g>
<g >
<title>`core::MDArray_O::MDArray_O(core::Rank1, unsigned long, gctools: (2 samples, 0.06%)</title><rect x="88.5" y="229" width="0.6" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="91.46" y="239.5" ></text>
</g>
<g >
<title>`__cxa_get_globals_fast (7 samples, 0.20%)</title><rect x="882.9" y="261" width="2.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="885.91" y="271.5" ></text>
</g>
<g >
<title>`GC_find_header (1 samples, 0.03%)</title><rect x="745.9" y="197" width="0.4" height="15.0" fill="rgb(218,77,77)" rx="2" ry="2" />
<text  x="748.94" y="207.5" ></text>
</g>
<g >
<title>`core::lisp_true() (6 samples, 0.17%)</title><rect x="380.3" y="245" width="2.1" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="383.34" y="255.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.06%)</title><rect x="1154.2" y="389" width="0.6" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="1157.15" y="399.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::keyTest(gctools::smart_ptr&lt;core::T_O&gt;, gc (2 samples, 0.06%)</title><rect x="226.8" y="229" width="0.7" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="229.79" y="239.5" ></text>
</g>
<g >
<title>`core::cl__make_hash_table(gctools::smart_ptr&lt;core::T_O&gt;, gctool (245 samples, 7.02%)</title><rect x="1069.9" y="373" width="82.9" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="1072.94" y="383.5" >`core::cl..</text>
</g>
<g >
<title>`__gmpz_mul (2 samples, 0.06%)</title><rect x="733.8" y="261" width="0.6" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="736.76" y="271.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (22 samples, 0.63%)</title><rect x="220.0" y="245" width="7.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="223.03" y="255.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::machHeader() const (1 samples, 0.03%)</title><rect x="922.5" y="197" width="0.3" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="925.48" y="207.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.03%)</title><rect x="361.1" y="245" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="364.06" y="255.5" ></text>
</g>
<g >
<title>`GC_install_header (1 samples, 0.03%)</title><rect x="512.9" y="165" width="0.4" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="515.91" y="175.5" ></text>
</g>
<g >
<title>`free_tiny (6 samples, 0.17%)</title><rect x="755.1" y="245" width="2.0" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="758.07" y="255.5" ></text>
</g>
<g >
<title>`core::StrWNs_O::make(unsigned long, int, bool, gctools::smart_p (82 samples, 2.35%)</title><rect x="87.4" y="245" width="27.8" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="90.45" y="255.5" >`..</text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (12 samples, 0.34%)</title><rect x="927.2" y="245" width="4.1" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="930.21" y="255.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.03%)</title><rect x="784.8" y="197" width="0.4" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="787.83" y="207.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (1 samples, 0.03%)</title><rect x="865.7" y="197" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="868.66" y="207.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.06%)</title><rect x="305.6" y="277" width="0.7" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="308.59" y="287.5" ></text>
</g>
<g >
<title>`GC_allocobj (16 samples, 0.46%)</title><rect x="92.2" y="165" width="5.4" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="95.18" y="175.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (2 samples, 0.06%)</title><rect x="475.0" y="245" width="0.7" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="478.03" y="255.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (7 samples, 0.20%)</title><rect x="788.2" y="181" width="2.4" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="791.21" y="191.5" ></text>
</g>
<g >
<title>`CLASS-GET^EXT^FN^^ (1 samples, 0.03%)</title><rect x="18.5" y="421" width="0.3" height="15.0" fill="rgb(73,186,186)" rx="2" ry="2" />
<text  x="21.46" y="431.5" ></text>
</g>
<g >
<title>`free_tiny (17 samples, 0.49%)</title><rect x="660.4" y="261" width="5.7" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="663.37" y="271.5" ></text>
</g>
<g >
<title>`gctools::GCObjectDefaultConstructorAllocator&lt;core::DoubleFloat_ (51 samples, 1.46%)</title><rect x="442.2" y="245" width="17.3" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="445.23" y="255.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.03%)</title><rect x="1037.8" y="325" width="0.3" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1040.81" y="335.5" ></text>
</g>
<g >
<title>`core::core__apply1(gctools::smart_ptr&lt;core::Function_O&gt;, gctool (1 samples, 0.03%)</title><rect x="1164.0" y="405" width="0.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="1166.96" y="415.5" ></text>
</g>
<g >
<title>`cc_gatherVaRestArguments (1 samples, 0.03%)</title><rect x="1050.7" y="341" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="1053.66" y="351.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (2 samples, 0.06%)</title><rect x="554.8" y="261" width="0.7" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="557.85" y="271.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (30 samples, 0.86%)</title><rect x="901.2" y="229" width="10.1" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="904.17" y="239.5" ></text>
</g>
<g >
<title>`GC_get_first_part (1 samples, 0.03%)</title><rect x="589.0" y="197" width="0.3" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="592.01" y="207.5" ></text>
</g>
<g >
<title>`tiny_malloc_from_free_list (2 samples, 0.06%)</title><rect x="635.7" y="149" width="0.7" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="638.68" y="159.5" ></text>
</g>
<g >
<title>`_platform_memset$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="772.7" y="245" width="0.3" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="775.65" y="255.5" ></text>
</g>
<g >
<title>`funlockfile (2 samples, 0.06%)</title><rect x="59.7" y="229" width="0.7" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="62.72" y="239.5" ></text>
</g>
<g >
<title>`std::get_terminate() (1 samples, 0.03%)</title><rect x="938.0" y="293" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="941.04" y="303.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (1 samples, 0.03%)</title><rect x="1129.8" y="165" width="0.3" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="1132.80" y="175.5" ></text>
</g>
<g >
<title>`free (11 samples, 0.32%)</title><rect x="757.1" y="261" width="3.7" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="760.10" y="271.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (1 samples, 0.03%)</title><rect x="411.5" y="229" width="0.3" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="414.45" y="239.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (35 samples, 1.00%)</title><rect x="834.5" y="229" width="11.9" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="837.55" y="239.5" ></text>
</g>
<g >
<title>`__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan (29 samples, 0.83%)</title><rect x="819.0" y="245" width="9.8" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="821.99" y="255.5" ></text>
</g>
<g >
<title>`FIXNUMP^CORE^FN^^ (5 samples, 0.14%)</title><rect x="77.3" y="309" width="1.7" height="15.0" fill="rgb(55,169,169)" rx="2" ry="2" />
<text  x="80.30" y="319.5" ></text>
</g>
<g >
<title>`core::apply1_inner_valist(gctools::smart_ptr&lt;core::Function_O&gt;, (3,036 samples, 87.02%)</title><rect x="35.0" y="389" width="1026.8" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="38.03" y="399.5" >`core::apply1_inner_valist(gctools::smart_ptr&lt;core::Function_O&gt;,</text>
</g>
<g >
<title>`SYNTAX-TYPE^CORE^FN^^ (7 samples, 0.20%)</title><rect x="180.5" y="309" width="2.3" height="15.0" fill="rgb(63,177,177)" rx="2" ry="2" />
<text  x="183.46" y="319.5" ></text>
</g>
<g >
<title>`CHAR-INVALID-P^ECLECTOR.READER^FN^^ (8 samples, 0.23%)</title><rect x="321.1" y="309" width="2.8" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="324.15" y="319.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (2 samples, 0.06%)</title><rect x="922.1" y="213" width="0.7" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="925.14" y="223.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (2 samples, 0.06%)</title><rect x="475.0" y="229" width="0.7" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="478.03" y="239.5" ></text>
</g>
<g >
<title>0x11b3801fa (2 samples, 0.06%)</title><rect x="10.3" y="501" width="0.7" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="13.34" y="511.5" ></text>
</g>
<g >
<title>`core::DoubleFloat_O::__class() const (1 samples, 0.03%)</title><rect x="1160.2" y="405" width="0.4" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="1163.24" y="415.5" ></text>
</g>
<g >
<title>`core::cl__read_char(gctools::smart_ptr&lt;core::T_O&gt;, gctools::sma (2 samples, 0.06%)</title><rect x="248.1" y="309" width="0.7" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="251.10" y="319.5" ></text>
</g>
<g >
<title>`__cxa_allocate_exception (3 samples, 0.09%)</title><rect x="779.1" y="309" width="1.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="782.08" y="319.5" ></text>
</g>
<g >
<title>`malloc (15 samples, 0.43%)</title><rect x="631.3" y="213" width="5.1" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="634.28" y="223.5" ></text>
</g>
<g >
<title>`core::core__load_no_package_set(gctools::smart_ptr&lt;core::T_O&gt;,  (3,486 samples, 99.91%)</title><rect x="10.0" y="837" width="1179.0" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="13.00" y="847.5" >`core::core__load_no_package_set(gctools::smart_ptr&lt;core::T_O&gt;, </text>
</g>
<g >
<title>`core::contagen_add(gctools::smart_ptr&lt;core::Number_O&gt;, gctools: (1 samples, 0.03%)</title><rect x="610.0" y="293" width="0.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="612.98" y="303.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.06%)</title><rect x="1154.2" y="373" width="0.6" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1157.15" y="383.5" ></text>
</g>
<g >
<title>`core::clasp_to_mpz(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.03%)</title><rect x="654.6" y="261" width="0.4" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="657.62" y="271.5" ></text>
</g>
<g >
<title>`clock_gettime (1 samples, 0.03%)</title><rect x="1028.0" y="309" width="0.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1031.00" y="319.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (72 samples, 2.06%)</title><rect x="828.8" y="261" width="24.3" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="831.80" y="271.5" >`..</text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (1 samples, 0.03%)</title><rect x="872.1" y="213" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="875.09" y="223.5" ></text>
</g>
<g >
<title>`MAKE-ARRAY-WITH-INITIAL-ELEMENT^CORE^FN^^ (2 samples, 0.06%)</title><rect x="73.2" y="325" width="0.7" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="76.24" y="335.5" ></text>
</g>
<g >
<title>`core::cl__streamp(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.03%)</title><rect x="1187.3" y="437" width="0.3" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="1190.29" y="447.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.03%)</title><rect x="492.3" y="245" width="0.3" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="495.28" y="255.5" ></text>
</g>
<g >
<title>`cc_initialize_closure (5 samples, 0.14%)</title><rect x="1026.0" y="325" width="1.7" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="1028.97" y="335.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::thread_local_boundp(core::Symbol_O c (1 samples, 0.03%)</title><rect x="1157.9" y="389" width="0.3" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="1160.87" y="399.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.06%)</title><rect x="1025.0" y="293" width="0.6" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="1027.96" y="303.5" ></text>
</g>
<g >
<title>`cc_rewind_va_list (1 samples, 0.03%)</title><rect x="126.7" y="309" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="129.68" y="319.5" ></text>
</g>
<g >
<title>`__gxx_personality_v0 (35 samples, 1.00%)</title><rect x="817.0" y="261" width="11.8" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="819.96" y="271.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (2 samples, 0.06%)</title><rect x="424.0" y="261" width="0.6" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="426.96" y="271.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (2 samples, 0.06%)</title><rect x="557.6" y="277" width="0.6" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="560.56" y="287.5" ></text>
</g>
<g >
<title>`core::input_stream_read_byte8(gctools::smart_ptr&lt;core::T_O&gt;, un (20 samples, 0.57%)</title><rect x="54.0" y="261" width="6.7" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="56.97" y="271.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::create(unsigned int, gctools::smart_ptr&lt;c (242 samples, 6.94%)</title><rect x="1071.0" y="357" width="81.8" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="1073.95" y="367.5" >`core::Ha..</text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (1 samples, 0.03%)</title><rect x="1061.5" y="357" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1064.48" y="367.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (4 samples, 0.11%)</title><rect x="1134.2" y="197" width="1.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1137.20" y="207.5" ></text>
</g>
<g >
<title>`gctools::smart_ptr&lt;core::ClosureWithSlots_O&gt; gctools::GCObjectA (33 samples, 0.95%)</title><rect x="586.0" y="277" width="11.1" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="588.96" y="287.5" ></text>
</g>
<g >
<title>`gctools::GCObjectDefaultConstructorAllocator&lt;core::DoubleFloat_ (1 samples, 0.03%)</title><rect x="459.8" y="261" width="0.4" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="462.81" y="271.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (2 samples, 0.06%)</title><rect x="956.3" y="293" width="0.7" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="959.30" y="303.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Nehalem (1 samples, 0.03%)</title><rect x="875.1" y="229" width="0.4" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="878.13" y="239.5" ></text>
</g>
<g >
<title>`core::coerce::inputStreamDesignator(gctools::smart_ptr&lt;core::T_ (1 samples, 0.03%)</title><rect x="306.9" y="293" width="0.4" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="309.94" y="303.5" ></text>
</g>
<g >
<title>`_Unwind_GetIP (1 samples, 0.03%)</title><rect x="817.6" y="245" width="0.4" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="820.64" y="255.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.03%)</title><rect x="1025.6" y="309" width="0.4" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1028.63" y="319.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (1 samples, 0.03%)</title><rect x="361.1" y="277" width="0.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="364.06" y="287.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleCharacterString_O, int, (2 samples, 0.06%)</title><rect x="577.8" y="261" width="0.7" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="580.85" y="271.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_cl__read_char_T_spT_spT_spT_sp (1 samples, 0.03%)</title><rect x="72.6" y="325" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="75.57" y="335.5" ></text>
</g>
<g >
<title>`tlv_get_addr (3 samples, 0.09%)</title><rect x="394.2" y="261" width="1.0" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="397.20" y="271.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.03%)</title><rect x="1150.8" y="293" width="0.3" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="1153.77" y="303.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (7 samples, 0.20%)</title><rect x="714.8" y="229" width="2.4" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="717.82" y="239.5" ></text>
</g>
<g >
<title>`core::log_operation_2op(core::boole_ops, gctools::smart_ptr&lt;cor (3 samples, 0.09%)</title><rect x="379.3" y="261" width="1.0" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="382.32" y="271.5" ></text>
</g>
<g >
<title>`cm_check_index (4 samples, 0.11%)</title><rect x="606.6" y="293" width="1.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="609.60" y="303.5" ></text>
</g>
<g >
<title>`unw_get_reg (2 samples, 0.06%)</title><rect x="938.7" y="293" width="0.7" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="941.71" y="303.5" ></text>
</g>
<g >
<title>`GC_freehblk (1 samples, 0.03%)</title><rect x="972.9" y="133" width="0.3" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="975.87" y="143.5" ></text>
</g>
<g >
<title>`CHAR-UPCASE^COMMON-LISP^FN^^ (1 samples, 0.03%)</title><rect x="463.9" y="277" width="0.3" height="15.0" fill="rgb(95,206,206)" rx="2" ry="2" />
<text  x="466.87" y="287.5" ></text>
</g>
<g >
<title>`core::Integer_O::create(long long) (3 samples, 0.09%)</title><rect x="724.3" y="277" width="1.0" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="727.29" y="287.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread (2 samples, 0.06%)</title><rect x="245.1" y="293" width="0.6" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="248.05" y="303.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (161 samples, 4.61%)</title><rect x="967.5" y="277" width="54.4" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text  x="970.46" y="287.5" >`GC_g..</text>
</g>
<g >
<title>`clock_gettime_nsec_np (8 samples, 0.23%)</title><rect x="931.9" y="261" width="2.8" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="934.95" y="271.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (5 samples, 0.14%)</title><rect x="1064.2" y="373" width="1.7" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="1067.19" y="383.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.03%)</title><rect x="418.6" y="213" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="421.55" y="223.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (7 samples, 0.20%)</title><rect x="142.9" y="213" width="2.4" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="145.91" y="223.5" ></text>
</g>
<g >
<title>`SYNTAX-TYPE^ECLECTOR.READTABLE^((READTABLE T))^METHOD^^ (151 samples, 4.33%)</title><rect x="182.8" y="309" width="51.1" height="15.0" fill="rgb(56,170,170)" rx="2" ry="2" />
<text  x="185.82" y="319.5" >`SYNT..</text>
</g>
<g >
<title>`wrapped_core__hash_eql_List_sp (5 samples, 0.14%)</title><rect x="121.6" y="277" width="1.7" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="124.61" y="287.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (7 samples, 0.20%)</title><rect x="769.6" y="149" width="2.4" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="772.61" y="159.5" ></text>
</g>
<g >
<title>`wrapped_cl__zerop_Number_sp (6 samples, 0.17%)</title><rect x="380.3" y="261" width="2.1" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="383.34" y="271.5" ></text>
</g>
<g >
<title>`core::core__syntax_type(gctools::smart_ptr&lt;core::T_O&gt;, gctools: (1 samples, 0.03%)</title><rect x="1042.5" y="325" width="0.4" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="1045.54" y="335.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (90 samples, 2.58%)</title><rect x="510.2" y="229" width="30.4" height="15.0" fill="rgb(201,51,51)" rx="2" ry="2" />
<text  x="513.21" y="239.5" >`G..</text>
</g>
<g >
<title>`GC_push_next_marked_uncollectable (1 samples, 0.03%)</title><rect x="114.5" y="85" width="0.3" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="117.51" y="95.5" ></text>
</g>
<g >
<title>`core::stream_dispatch_table(gctools::smart_ptr&lt;core::T_O&gt;) (2 samples, 0.06%)</title><rect x="256.2" y="261" width="0.7" height="15.0" fill="rgb(51,200,51)" rx="2" ry="2" />
<text  x="259.21" y="271.5" ></text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (1 samples, 0.03%)</title><rect x="1059.1" y="341" width="0.4" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="1062.11" y="351.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (4 samples, 0.11%)</title><rect x="732.1" y="213" width="1.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="735.07" y="223.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (21 samples, 0.60%)</title><rect x="746.3" y="133" width="7.1" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="749.27" y="143.5" ></text>
</g>
<g >
<title>`core::core__logand_2op(gctools::smart_ptr&lt;core::Integer_O&gt;, gct (1 samples, 0.03%)</title><rect x="378.0" y="261" width="0.3" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="380.97" y="271.5" ></text>
</g>
<g >
<title>`default_zone_free_definite_size (1 samples, 0.03%)</title><rect x="655.0" y="261" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="657.96" y="271.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.03%)</title><rect x="1142.0" y="261" width="0.3" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="1144.97" y="271.5" ></text>
</g>
<g >
<title>`core::cl__gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctools::smart (3 samples, 0.09%)</title><rect x="418.9" y="245" width="1.0" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="421.89" y="255.5" ></text>
</g>
<g >
<title>`szone_realloc (2 samples, 0.06%)</title><rect x="736.5" y="197" width="0.6" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="739.47" y="207.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (3 samples, 0.09%)</title><rect x="1020.9" y="261" width="1.0" height="15.0" fill="rgb(231,95,95)" rx="2" ry="2" />
<text  x="1023.90" y="271.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="1065.5" y="325" width="0.4" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="1068.54" y="335.5" ></text>
</g>
<g >
<title>`malloc_zone_malloc (15 samples, 0.43%)</title><rect x="631.3" y="197" width="5.1" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="634.28" y="207.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (11 samples, 0.32%)</title><rect x="973.5" y="165" width="3.8" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="976.55" y="175.5" ></text>
</g>
<g >
<title>`core::clasp_to_mpz(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.03%)</title><rect x="726.0" y="277" width="0.3" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="728.98" y="287.5" ></text>
</g>
<g >
<title>`GC_stopped_mark (67 samples, 1.92%)</title><rect x="517.6" y="149" width="22.7" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="520.65" y="159.5" >`..</text>
</g>
<g >
<title>`__gmpz_realloc (3 samples, 0.09%)</title><rect x="682.7" y="229" width="1.0" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="685.69" y="239.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (1 samples, 0.03%)</title><rect x="881.6" y="197" width="0.3" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="884.56" y="207.5" ></text>
</g>
<g >
<title>`_pthread_mutex_lock_init_slow (3 samples, 0.09%)</title><rect x="288.7" y="197" width="1.0" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="291.68" y="207.5" ></text>
</g>
<g >
<title>`wrapped_cl__read_T_spT_spT_spT_sp (1 samples, 0.03%)</title><rect x="1188.6" y="501" width="0.4" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1191.65" y="511.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="624.9" y="197" width="0.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="627.86" y="207.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (23 samples, 0.66%)</title><rect x="1107.5" y="149" width="7.8" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="1110.48" y="159.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$__bzero (1 samples, 0.03%)</title><rect x="515.3" y="85" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="518.28" y="95.5" ></text>
</g>
<g >
<title>`free_tiny (18 samples, 0.52%)</title><rect x="711.1" y="245" width="6.1" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="714.10" y="255.5" ></text>
</g>
<g >
<title>`tlv_get_addr (2 samples, 0.06%)</title><rect x="596.4" y="261" width="0.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="599.45" y="271.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (43 samples, 1.23%)</title><rect x="1115.3" y="149" width="14.5" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text  x="1118.26" y="159.5" ></text>
</g>
<g >
<title>`libunwind::Registers_x86_64::jumpto() (1 samples, 0.03%)</title><rect x="945.1" y="309" width="0.4" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="948.14" y="319.5" ></text>
</g>
<g >
<title>`cc_safe_symbol_value (3 samples, 0.09%)</title><rect x="410.8" y="245" width="1.0" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="413.77" y="255.5" ></text>
</g>
<g >
<title>`GC_malloc_kind_global (170 samples, 4.87%)</title><rect x="1078.4" y="293" width="57.5" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="1081.39" y="303.5" >`GC_ma..</text>
</g>
<g >
<title>`set_tiny_meta_header_in_use (3 samples, 0.09%)</title><rect x="813.9" y="197" width="1.0" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="816.92" y="207.5" ></text>
</g>
<g >
<title>`GC_try_to_collect_inner (15 samples, 0.43%)</title><rect x="590.4" y="181" width="5.0" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="593.36" y="191.5" ></text>
</g>
<g >
<title>`gctools::GCContainerAllocator&lt;gctools::GCVector_moveable&lt;core:: (181 samples, 5.19%)</title><rect x="1077.0" y="309" width="61.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="1080.04" y="319.5" >`gctoo..</text>
</g>
<g >
<title>`_pthread_mutex_lock_init_slow (2 samples, 0.06%)</title><rect x="277.5" y="213" width="0.7" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="280.52" y="223.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (2 samples, 0.06%)</title><rect x="866.0" y="197" width="0.7" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="869.00" y="207.5" ></text>
</g>
<g >
<title>`flockfile (33 samples, 0.95%)</title><rect x="278.5" y="213" width="11.2" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="281.54" y="223.5" ></text>
</g>
<g >
<title>`ZEROP^COMMON-LISP^FN^^ (1 samples, 0.03%)</title><rect x="1179.9" y="421" width="0.3" height="15.0" fill="rgb(56,171,171)" rx="2" ry="2" />
<text  x="1182.85" y="431.5" ></text>
</g>
<g >
<title>`GC_reclaim_block (5 samples, 0.14%)</title><rect x="971.5" y="149" width="1.7" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="974.52" y="159.5" ></text>
</g>
<g >
<title>`wrapped_cl__zerop_Number_sp (4 samples, 0.11%)</title><rect x="403.0" y="277" width="1.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="406.00" y="287.5" ></text>
</g>
<g >
<title>`client_dyld_find_unwind_sections(void*, dyld_unwind_sections*) (4 samples, 0.11%)</title><rect x="870.7" y="197" width="1.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="873.73" y="207.5" ></text>
</g>
<g >
<title>`GC_freehblk (1 samples, 0.03%)</title><rect x="517.3" y="85" width="0.3" height="15.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text  x="520.31" y="95.5" ></text>
</g>
<g >
<title>`pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="301.2" y="213" width="0.3" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="304.20" y="223.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (1 samples, 0.03%)</title><rect x="807.5" y="213" width="0.3" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="810.49" y="223.5" ></text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.03%)</title><rect x="558.2" y="277" width="0.4" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="561.23" y="287.5" ></text>
</g>
<g >
<title>`malloc (12 samples, 0.34%)</title><rect x="737.8" y="213" width="4.1" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="740.82" y="223.5" ></text>
</g>
<g >
<title>`READ-CHAR^COMMON-LISP^FN^^ (3 samples, 0.09%)</title><rect x="313.0" y="325" width="1.0" height="15.0" fill="rgb(54,169,169)" rx="2" ry="2" />
<text  x="316.03" y="335.5" ></text>
</g>
<g >
<title>`DO-TIME^CORE^FN^^ (3,486 samples, 99.91%)</title><rect x="10.0" y="533" width="1179.0" height="15.0" fill="rgb(96,207,207)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >`DO-TIME^CORE^FN^^</text>
</g>
<g >
<title>`__gmp_default_allocate (2 samples, 0.06%)</title><rect x="624.5" y="261" width="0.7" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="627.52" y="271.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.03%)</title><rect x="515.3" y="165" width="0.3" height="15.0" fill="rgb(212,67,67)" rx="2" ry="2" />
<text  x="518.28" y="175.5" ></text>
</g>
<g >
<title>`cc_gatherRestArguments (3 samples, 0.09%)</title><rect x="1155.2" y="405" width="1.0" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="1158.16" y="415.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.03%)</title><rect x="781.4" y="293" width="0.4" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="784.45" y="303.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (2 samples, 0.06%)</title><rect x="825.4" y="197" width="0.7" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="828.41" y="207.5" ></text>
</g>
<g >
<title>`core::Ratio_O::setf_numerator_denominator(gctools::smart_ptr&lt;co (34 samples, 0.97%)</title><rect x="694.2" y="229" width="11.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="697.19" y="239.5" ></text>
</g>
<g >
<title>`gctools::GCObjectDefaultConstructorAllocator&lt;core::DoubleFloat_ (19 samples, 0.54%)</title><rect x="766.9" y="261" width="6.4" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="769.90" y="271.5" ></text>
</g>
<g >
<title>`__toupper (6 samples, 0.17%)</title><rect x="480.4" y="245" width="2.1" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="483.44" y="255.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (2 samples, 0.06%)</title><rect x="1056.4" y="277" width="0.7" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="1059.41" y="287.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (39 samples, 1.12%)</title><rect x="101.7" y="149" width="13.1" height="15.0" fill="rgb(203,54,54)" rx="2" ry="2" />
<text  x="104.65" y="159.5" ></text>
</g>
<g >
<title>`core::Ratio_O::number_type_() const (2 samples, 0.06%)</title><rect x="622.8" y="277" width="0.7" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="625.83" y="287.5" ></text>
</g>
<g >
<title>`GC_free_block_ending_at (1 samples, 0.03%)</title><rect x="691.5" y="53" width="0.3" height="15.0" fill="rgb(204,55,55)" rx="2" ry="2" />
<text  x="694.48" y="63.5" ></text>
</g>
<g >
<title>`tiny_free_no_lock (1 samples, 0.03%)</title><rect x="717.5" y="245" width="0.4" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="720.53" y="255.5" ></text>
</g>
<g >
<title>`core::MDArray_O::set_data(gctools::smart_ptr&lt;core::Array_O&gt;) (2 samples, 0.06%)</title><rect x="137.8" y="277" width="0.7" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="140.84" y="287.5" ></text>
</g>
<g >
<title>`PUSH-CHAR^ECLECTOR.READER^FN^^ (62 samples, 1.78%)</title><rect x="127.7" y="325" width="21.0" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="130.70" y="335.5" ></text>
</g>
<g >
<title>`GC_push_contents_hdr (4 samples, 0.11%)</title><rect x="692.8" y="85" width="1.4" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="695.84" y="95.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_inner (146 samples, 4.18%)</title><rect x="971.2" y="261" width="49.4" height="15.0" fill="rgb(226,87,87)" rx="2" ry="2" />
<text  x="974.18" y="271.5" >`GC_..</text>
</g>
<g >
<title>`GC_clear_stack (1 samples, 0.03%)</title><rect x="768.9" y="213" width="0.4" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="771.93" y="223.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (11 samples, 0.32%)</title><rect x="854.8" y="229" width="3.8" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="857.84" y="239.5" ></text>
</g>
<g >
<title>`wrapped_core__apply1_Function_spT_sp___________________________ (1 samples, 0.03%)</title><rect x="1061.8" y="389" width="0.4" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1064.82" y="399.5" ></text>
</g>
<g >
<title>`gctools::initializeBoehm(int (*)(int, char**, bool&amp;, int&amp;, int&amp; (3,486 samples, 99.91%)</title><rect x="10.0" y="901" width="1179.0" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="13.00" y="911.5" >`gctools::initializeBoehm(int (*)(int, char**, bool&amp;, int&amp;, int&amp;</text>
</g>
<g >
<title>`core::utf_8_encoder(gctools::smart_ptr&lt;core::T_O&gt;, unsigned cha (1 samples, 0.03%)</title><rect x="1058.4" y="309" width="0.4" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1061.44" y="319.5" ></text>
</g>
<g >
<title>`wrapped_cl__vector_push_extend_T_spVector_spsize_t (46 samples, 1.32%)</title><rect x="133.1" y="309" width="15.6" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="136.11" y="319.5" ></text>
</g>
<g >
<title>`libunwind::CompactUnwinder_x86_64&lt;libunwind::LocalAddressSpace&gt; (2 samples, 0.06%)</title><rect x="869.4" y="229" width="0.7" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="872.38" y="239.5" ></text>
</g>
<g >
<title>`core::clasp_gcd(gctools::smart_ptr&lt;core::Integer_O&gt;, gctools::s (27 samples, 0.77%)</title><rect x="641.1" y="213" width="9.1" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="644.09" y="223.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (15 samples, 0.43%)</title><rect x="786.9" y="229" width="5.0" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="789.86" y="239.5" ></text>
</g>
<g >
<title>`__gmp_default_free (1 samples, 0.03%)</title><rect x="620.8" y="277" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="623.80" y="287.5" ></text>
</g>
<g >
<title>`GC_allocobj (71 samples, 2.03%)</title><rect x="516.3" y="197" width="24.0" height="15.0" fill="rgb(209,64,64)" rx="2" ry="2" />
<text  x="519.29" y="207.5" >`..</text>
</g>
<g >
<title>`ValuesFromCons(gctools::smart_ptr&lt;core::List_V&gt;) (3 samples, 0.09%)</title><rect x="1153.8" y="405" width="1.0" height="15.0" fill="rgb(87,233,87)" rx="2" ry="2" />
<text  x="1156.81" y="415.5" ></text>
</g>
<g >
<title>`core::cl__read_char(gctools::smart_ptr&lt;core::T_O&gt;, gctools::sma (2 samples, 0.06%)</title><rect x="52.6" y="325" width="0.7" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="55.61" y="335.5" ></text>
</g>
<g >
<title>`cc_saveMultipleValue0 (1 samples, 0.03%)</title><rect x="1036.8" y="325" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="1039.79" y="335.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="146.0" y="245" width="0.3" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="148.96" y="255.5" ></text>
</g>
<g >
<title>`APPLY1^CORE^FN^^ (1 samples, 0.03%)</title><rect x="31.6" y="405" width="0.4" height="15.0" fill="rgb(105,216,216)" rx="2" ry="2" />
<text  x="34.65" y="415.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (25 samples, 0.72%)</title><rect x="795.0" y="229" width="8.4" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="797.98" y="239.5" ></text>
</g>
<g >
<title>`GC_find_header (2 samples, 0.06%)</title><rect x="1131.2" y="149" width="0.6" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="1134.15" y="159.5" ></text>
</g>
<g >
<title>`core::cl__char_code(gctools::smart_ptr&lt;core::Character_I&gt;) (3 samples, 0.09%)</title><rect x="402.0" y="261" width="1.0" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="404.98" y="271.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="772.3" y="245" width="0.4" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="775.32" y="255.5" ></text>
</g>
<g >
<title>`core::HashTable_O::setup(unsigned int, gctools::smart_ptr&lt;core: (191 samples, 5.47%)</title><rect x="1073.7" y="341" width="64.6" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="1076.66" y="351.5" >`core::..</text>
</g>
<g >
<title>`funlockfile (33 samples, 0.95%)</title><rect x="289.7" y="213" width="11.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="292.70" y="223.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (1 samples, 0.03%)</title><rect x="771.3" y="101" width="0.3" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="774.30" y="111.5" ></text>
</g>
<g >
<title>`ImageLoaderMachO::getUnwindInfo(dyld_unwind_sections*) (4 samples, 0.11%)</title><rect x="834.9" y="197" width="1.3" height="15.0" fill="rgb(60,210,60)" rx="2" ry="2" />
<text  x="837.88" y="207.5" ></text>
</g>
<g >
<title>`core::template_Vector&lt;core::StrWNs_O, core::SimpleCharacterStri (1 samples, 0.03%)</title><rect x="148.3" y="293" width="0.4" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="151.33" y="303.5" ></text>
</g>
<g >
<title>`core::HashTableEql_O::keyTest(gctools::smart_ptr&lt;core::T_O&gt;, gc (1 samples, 0.03%)</title><rect x="1047.3" y="261" width="0.3" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1050.28" y="271.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (21 samples, 0.60%)</title><rect x="867.4" y="245" width="7.1" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="870.35" y="255.5" ></text>
</g>
<g >
<title>`tiny_free_list_add_ptr (2 samples, 0.06%)</title><rect x="663.4" y="245" width="0.7" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="666.41" y="255.5" ></text>
</g>
<g >
<title>`GC_allochblk_nth (3 samples, 0.09%)</title><rect x="141.9" y="197" width="1.0" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="144.90" y="207.5" ></text>
</g>
<g >
<title>`UPGRADED-ARRAY-ELEMENT-TYPE^COMMON-LISP^FN^^ (30 samples, 0.86%)</title><rect x="116.5" y="309" width="10.2" height="15.0" fill="rgb(70,183,183)" rx="2" ry="2" />
<text  x="119.53" y="319.5" ></text>
</g>
<g >
<title>`free_tiny (5 samples, 0.14%)</title><rect x="652.3" y="245" width="1.6" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="655.25" y="255.5" ></text>
</g>
<g >
<title>`gctools::Header_s::validate() const (1 samples, 0.03%)</title><rect x="1177.5" y="373" width="0.3" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="1180.49" y="383.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (17 samples, 0.49%)</title><rect x="240.0" y="309" width="5.7" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="242.98" y="319.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$wrapped_core__logand_2op_Integer_spInteger_sp (1 samples, 0.03%)</title><rect x="77.0" y="309" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="79.96" y="319.5" ></text>
</g>
<g >
<title>`cc_enclose (36 samples, 1.03%)</title><rect x="584.9" y="293" width="12.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="587.95" y="303.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (26 samples, 0.75%)</title><rect x="902.5" y="213" width="8.8" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="905.53" y="223.5" ></text>
</g>
<g >
<title>`core::Unwind::Unwind(core::T_O*, unsigned long) (4 samples, 0.11%)</title><rect x="941.8" y="309" width="1.3" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="944.76" y="319.5" ></text>
</g>
<g >
<title>`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.03%)</title><rect x="1151.1" y="325" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="1154.11" y="335.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Nehalem (3 samples, 0.09%)</title><rect x="274.1" y="197" width="1.1" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="277.14" y="207.5" ></text>
</g>
<g >
<title>`EXPT^COMMON-LISP^FN^^ (1 samples, 0.03%)</title><rect x="325.2" y="309" width="0.3" height="15.0" fill="rgb(87,199,199)" rx="2" ry="2" />
<text  x="328.21" y="319.5" ></text>
</g>
<g >
<title>`clear_marks_for_block (1 samples, 0.03%)</title><rect x="445.3" y="101" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="448.27" y="111.5" ></text>
</g>
<g >
<title>`NORMALIZE-TYPE^CORE^FN^^ (51 samples, 1.46%)</title><rect x="407.7" y="277" width="17.3" height="15.0" fill="rgb(83,195,195)" rx="2" ry="2" />
<text  x="410.73" y="287.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (13 samples, 0.37%)</title><rect x="141.6" y="245" width="4.4" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="144.56" y="255.5" ></text>
</g>
<g >
<title>`__gmpn_tdiv_qr (1 samples, 0.03%)</title><rect x="742.9" y="213" width="0.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="745.89" y="223.5" ></text>
</g>
<g >
<title>`wrapped_clos__interpret_dtree_program_SimpleVector_spT_sp______ (4 samples, 0.11%)</title><rect x="1171.1" y="405" width="1.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="1174.06" y="415.5" ></text>
</g>
<g >
<title>`unw_init_local (12 samples, 0.34%)</title><rect x="807.5" y="261" width="4.0" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="810.49" y="271.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (3 samples, 0.09%)</title><rect x="515.3" y="197" width="1.0" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="518.28" y="207.5" ></text>
</g>
<g >
<title>`core::HashTable_O::gethash(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (8 samples, 0.23%)</title><rect x="187.6" y="277" width="2.7" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="190.56" y="287.5" ></text>
</g>
<g >
<title>`core::utf_8_decoder(gctools::smart_ptr&lt;core::T_O&gt;) (22 samples, 0.63%)</title><rect x="54.0" y="277" width="7.4" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="56.97" y="287.5" ></text>
</g>
<g >
<title>`MAKE-INTEGER-ACCUMULATOR^ECLECTOR.READER^FN^^ (163 samples, 4.67%)</title><rect x="503.4" y="293" width="55.2" height="15.0" fill="rgb(104,215,215)" rx="2" ry="2" />
<text  x="506.44" y="303.5" >`MAKE..</text>
</g>
<g >
<title>`core::HashTable_O::sxhash_eql(core::HashGenerator&amp;, gctools::sm (1 samples, 0.03%)</title><rect x="1046.9" y="277" width="0.4" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1049.94" y="287.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (4 samples, 0.11%)</title><rect x="958.3" y="309" width="1.4" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="961.33" y="319.5" ></text>
</g>
<g >
<title>`core::cl__read_char(gctools::smart_ptr&lt;core::T_O&gt;, gctools::sma (171 samples, 4.90%)</title><rect x="249.1" y="293" width="57.8" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="252.11" y="303.5" >`core:..</text>
</g>
<g >
<title>`thread-local wrapper routine for my_thread_low_level (1 samples, 0.03%)</title><rect x="114.8" y="229" width="0.4" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="117.84" y="239.5" ></text>
</g>
<g >
<title>`GC_collect_or_expand (8 samples, 0.23%)</title><rect x="691.5" y="165" width="2.7" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="694.48" y="175.5" ></text>
</g>
<g >
<title>`default_zone_malloc (1 samples, 0.03%)</title><rect x="731.7" y="213" width="0.4" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="734.73" y="223.5" ></text>
</g>
<g >
<title>`TERMINATE-TOKEN^ECLECTOR.READER^FN^^ (1,877 samples, 53.80%)</title><rect x="314.0" y="325" width="634.9" height="15.0" fill="rgb(92,203,203)" rx="2" ry="2" />
<text  x="317.05" y="335.5" >`TERMINATE-TOKEN^ECLECTOR.READER^FN^^</text>
</g>
<g >
<title>`__gmpz_get_si (2 samples, 0.06%)</title><rect x="686.4" y="245" width="0.7" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="689.41" y="255.5" ></text>
</g>
<g >
<title>`core::Closure_O::describeFunction() const (2 samples, 0.06%)</title><rect x="957.7" y="309" width="0.6" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="960.65" y="319.5" ></text>
</g>
<g >
<title>`core::DynamicBindingStack::set_thread_local_value(gctools::smar (1 samples, 0.03%)</title><rect x="1160.6" y="405" width="0.3" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="1163.58" y="415.5" ></text>
</g>
<g >
<title>`tiny_size (1 samples, 0.03%)</title><rect x="629.9" y="181" width="0.4" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="632.93" y="191.5" ></text>
</g>
<g >
<title>`wrapped_cl__fdefinition_T_sp (3 samples, 0.09%)</title><rect x="433.4" y="261" width="1.0" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="436.43" y="271.5" ></text>
</g>
<g >
<title>`gctools::handle_all_queued_interrupts() (1 samples, 0.03%)</title><rect x="1139.6" y="341" width="0.3" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="1142.61" y="351.5" ></text>
</g>
<g >
<title>`default_zone_free_definite_size (2 samples, 0.06%)</title><rect x="707.4" y="245" width="0.7" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="710.38" y="255.5" ></text>
</g>
<g >
<title>`NSTRING-UPCASE^COMMON-LISP^FN^^ (6 samples, 0.17%)</title><rect x="580.6" y="293" width="2.0" height="15.0" fill="rgb(86,198,198)" rx="2" ry="2" />
<text  x="583.55" y="303.5" ></text>
</g>
<g >
<title>`GC_header_cache_miss (1 samples, 0.03%)</title><rect x="92.5" y="85" width="0.4" height="15.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text  x="95.52" y="95.5" ></text>
</g>
<g >
<title>`tlv_get_addr (1 samples, 0.03%)</title><rect x="361.4" y="261" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="364.40" y="271.5" ></text>
</g>
<g >
<title>`core::coerce::inputStreamDesignator(gctools::smart_ptr&lt;core::T_ (1 samples, 0.03%)</title><rect x="53.3" y="293" width="0.3" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="56.29" y="303.5" ></text>
</g>
<g >
<title>`CHAR-CODE^COMMON-LISP^FN^^ (4 samples, 0.11%)</title><rect x="359.4" y="293" width="1.3" height="15.0" fill="rgb(109,219,219)" rx="2" ry="2" />
<text  x="362.37" y="303.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (1 samples, 0.03%)</title><rect x="1048.3" y="293" width="0.3" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1051.29" y="303.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (1 samples, 0.03%)</title><rect x="786.5" y="245" width="0.4" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="789.52" y="255.5" ></text>
</g>
<g >
<title>`DYLD-STUB$$pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="268.4" y="213" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="271.39" y="223.5" ></text>
</g>
<g >
<title>`cc_multipleValuesArrayAddress (1 samples, 0.03%)</title><rect x="492.3" y="277" width="0.3" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="495.28" y="287.5" ></text>
</g>
<g >
<title>`core::template_SimpleVector&lt;core::SimpleCharacterString_O, int, (2 samples, 0.06%)</title><rect x="479.8" y="261" width="0.6" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="482.77" y="271.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (1 samples, 0.03%)</title><rect x="1047.6" y="277" width="0.4" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="1050.62" y="287.5" ></text>
</g>
<g >
<title>`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo (3,486 samples, 99.91%)</title><rect x="10.0" y="677" width="1179.0" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="13.00" y="687.5" >`core::core__catch_function(gctools::smart_ptr&lt;core::T_O&gt;, gctoo</text>
</g>
<g >
<title>`wrapped_cl__class_of_T_sp (6 samples, 0.17%)</title><rect x="1168.0" y="405" width="2.0" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="1171.02" y="415.5" ></text>
</g>
<g >
<title>`dyld::findMappedRange(unsigned long) (8 samples, 0.23%)</title><rect x="808.2" y="197" width="2.7" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="811.17" y="207.5" ></text>
</g>
<g >
<title>`wrapped_cl__digit_char_p_Character_spFixnum_sp (13 samples, 0.37%)</title><rect x="613.4" y="293" width="4.4" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="616.36" y="303.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (5 samples, 0.14%)</title><rect x="813.2" y="229" width="1.7" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="816.24" y="239.5" ></text>
</g>
<g >
<title>`tiny_size (2 samples, 0.06%)</title><rect x="736.5" y="181" width="0.6" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="739.47" y="191.5" ></text>
</g>
<g >
<title>`core::Ratio_O::setf_numerator_denominator(gctools::smart_ptr&lt;co (1 samples, 0.03%)</title><rect x="650.9" y="245" width="0.3" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="653.90" y="255.5" ></text>
</g>
<g >
<title>`core::HashTableEq_O::sxhashKey(gctools::smart_ptr&lt;core::T_O&gt;, l (11 samples, 0.32%)</title><rect x="413.5" y="229" width="3.7" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="416.48" y="239.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.03%)</title><rect x="768.9" y="117" width="0.4" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="771.93" y="127.5" ></text>
</g>
<g >
<title>`GC_generic_malloc_many (1 samples, 0.03%)</title><rect x="640.8" y="213" width="0.3" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="643.75" y="223.5" ></text>
</g>
<g >
<title>`clear_marks_for_block (1 samples, 0.03%)</title><rect x="516.3" y="117" width="0.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="519.29" y="127.5" ></text>
</g>
<g >
<title>`cc_resetTLSymbolValue (1 samples, 0.03%)</title><rect x="1051.3" y="341" width="0.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1054.34" y="351.5" ></text>
</g>
<g >
<title>`GC_allochblk (3 samples, 0.09%)</title><rect x="588.7" y="229" width="1.0" height="15.0" fill="rgb(211,67,67)" rx="2" ry="2" />
<text  x="591.67" y="239.5" ></text>
</g>
<g >
<title>`core::cl__list(gctools::smart_ptr&lt;core::T_O&gt;) (1 samples, 0.03%)</title><rect x="1065.9" y="389" width="0.3" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="1068.88" y="399.5" ></text>
</g>
<g >
<title>`GC_allocobj (39 samples, 1.12%)</title><rect x="444.9" y="181" width="13.2" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="447.93" y="191.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (3 samples, 0.09%)</title><rect x="881.9" y="213" width="1.0" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="884.89" y="223.5" ></text>
</g>
<g >
<title>`core::ext__class_unboundp(gctools::smart_ptr&lt;core::ClassHolder_ (1 samples, 0.03%)</title><rect x="1164.6" y="405" width="0.4" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="1167.63" y="415.5" ></text>
</g>
<g >
<title>`szone_malloc_should_clear (15 samples, 0.43%)</title><rect x="631.3" y="181" width="5.1" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="634.28" y="191.5" ></text>
</g>
<g >
<title>`core::HashTable_O::tableRef_no_read_lock(gctools::smart_ptr&lt;cor (4 samples, 0.11%)</title><rect x="232.5" y="261" width="1.4" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="235.54" y="271.5" ></text>
</g>
<g >
<title>`core::lisp_multipleValues() (9 samples, 0.26%)</title><rect x="386.4" y="261" width="3.1" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="389.42" y="271.5" ></text>
</g>
<g >
<title>`tiny_malloc_should_clear (11 samples, 0.32%)</title><rect x="738.2" y="165" width="3.7" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="741.16" y="175.5" ></text>
</g>
<g >
<title>`core::coerce::inputStreamDesignator(gctools::smart_ptr&lt;core::T_ (1 samples, 0.03%)</title><rect x="1187.3" y="453" width="0.3" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1190.29" y="463.5" ></text>
</g>
<g >
<title>`GC_get_first_part (2 samples, 0.06%)</title><rect x="512.6" y="181" width="0.7" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text  x="515.57" y="191.5" ></text>
</g>
<g >
<title>`libunwind::UnwindCursor&lt;libunwind::LocalAddressSpace, libunwind (15 samples, 0.43%)</title><rect x="911.3" y="245" width="5.1" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="914.32" y="255.5" ></text>
</g>
<g >
<title>`clear_marks_for_block (1 samples, 0.03%)</title><rect x="971.2" y="165" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="974.18" y="175.5" ></text>
</g>
<g >
<title>`GC_malloc (1 samples, 0.03%)</title><rect x="504.1" y="261" width="0.4" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="507.12" y="271.5" ></text>
</g>
<g >
<title>`tiny_size (2 samples, 0.06%)</title><rect x="718.9" y="245" width="0.7" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="721.88" y="255.5" ></text>
</g>
<g >
<title>`GC_malloc_kind (19 samples, 0.54%)</title><rect x="91.2" y="213" width="6.4" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="94.17" y="223.5" ></text>
</g>
<g >
<title>`GC_clear_stack_inner (1 samples, 0.03%)</title><rect x="515.3" y="149" width="0.3" height="15.0" fill="rgb(254,128,128)" rx="2" ry="2" />
<text  x="518.28" y="159.5" ></text>
</g>
<g >
<title>`free_tiny (18 samples, 0.52%)</title><rect x="760.8" y="261" width="6.1" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="763.82" y="271.5" ></text>
</g>
<g >
<title>`_platform_memmove$VARIANT$Ivybridge (4 samples, 0.11%)</title><rect x="891.0" y="277" width="1.4" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="894.03" y="287.5" ></text>
</g>
<g >
<title>`__cxxabiv1::__class_type_info::can_catch(__cxxabiv1::__shim_typ (2 samples, 0.06%)</title><rect x="818.0" y="245" width="0.7" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="820.97" y="255.5" ></text>
</g>
<g >
<title>`mach_absolute_time (2 samples, 0.06%)</title><rect x="933.3" y="245" width="0.7" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="936.30" y="255.5" ></text>
</g>
<g >
<title>`__gmp_default_reallocate (7 samples, 0.20%)</title><rect x="628.2" y="245" width="2.4" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="631.24" y="255.5" ></text>
</g>
<g >
<title>`_dyld_find_unwind_sections (1 samples, 0.03%)</title><rect x="854.5" y="245" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="857.50" y="255.5" ></text>
</g>
<g >
<title>`GC_end_stubborn_change (1 samples, 0.03%)</title><rect x="602.2" y="261" width="0.3" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="605.20" y="271.5" ></text>
</g>
<g >
<title>`GC_reclaim_generic (1 samples, 0.03%)</title><rect x="1056.7" y="261" width="0.4" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text  x="1059.75" y="271.5" ></text>
</g>
</g>
</svg>
